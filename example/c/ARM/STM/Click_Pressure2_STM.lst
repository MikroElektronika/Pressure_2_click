;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 29.8.2018. 09:54:19
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x20ED0000  	8429
0x0008	0x20E50000  	8421
0x000C	0x20E50000  	8421
0x0010	0x20E50000  	8421
0x0014	0x20E50000  	8421
0x0018	0x20E50000  	8421
0x001C	0x20E50000  	8421
0x0020	0x20E50000  	8421
0x0024	0x20E50000  	8421
0x0028	0x20E50000  	8421
0x002C	0x20E50000  	8421
0x0030	0x20E50000  	8421
0x0034	0x20E50000  	8421
0x0038	0x20E50000  	8421
0x003C	0x20E50000  	8421
0x0040	0x20E50000  	8421
0x0044	0x20E50000  	8421
0x0048	0x20E50000  	8421
0x004C	0x20E50000  	8421
0x0050	0x20E50000  	8421
0x0054	0x20E50000  	8421
0x0058	0x20E50000  	8421
0x005C	0x20E50000  	8421
0x0060	0x20E50000  	8421
0x0064	0x20E50000  	8421
0x0068	0x20E50000  	8421
0x006C	0x20E50000  	8421
0x0070	0x20E50000  	8421
0x0074	0x20E50000  	8421
0x0078	0x20E50000  	8421
0x007C	0x20E50000  	8421
0x0080	0x20E50000  	8421
0x0084	0x20E50000  	8421
0x0088	0x20E50000  	8421
0x008C	0x20E50000  	8421
0x0090	0x20E50000  	8421
0x0094	0x20E50000  	8421
0x0098	0x20E50000  	8421
0x009C	0x20E50000  	8421
0x00A0	0x20E50000  	8421
0x00A4	0x20E50000  	8421
0x00A8	0x20E50000  	8421
0x00AC	0x20E50000  	8421
0x00B0	0x20E50000  	8421
0x00B4	0x20E50000  	8421
0x00B8	0x20E50000  	8421
0x00BC	0x20E50000  	8421
0x00C0	0x20E50000  	8421
0x00C4	0x20E50000  	8421
0x00C8	0x20E50000  	8421
0x00CC	0x20E50000  	8421
0x00D0	0x20E50000  	8421
0x00D4	0x20E50000  	8421
0x00D8	0x20E50000  	8421
0x00DC	0x20E50000  	8421
0x00E0	0x20E50000  	8421
0x00E4	0x20E50000  	8421
0x00E8	0x20E50000  	8421
0x00EC	0x20E50000  	8421
0x00F0	0x20E50000  	8421
0x00F4	0x20E50000  	8421
0x00F8	0x20E50000  	8421
0x00FC	0x20E50000  	8421
0x0100	0x20E50000  	8421
0x0104	0x20E50000  	8421
0x0108	0x20E50000  	8421
0x010C	0x20E50000  	8421
0x0110	0x20E50000  	8421
0x0114	0x20E50000  	8421
0x0118	0x20E50000  	8421
0x011C	0x20E50000  	8421
0x0120	0x20E50000  	8421
0x0124	0x20E50000  	8421
0x0128	0x20E50000  	8421
0x012C	0x20E50000  	8421
0x0130	0x20E50000  	8421
0x0134	0x20E50000  	8421
0x0138	0x20E50000  	8421
0x013C	0x20E50000  	8421
0x0140	0x20E50000  	8421
0x0144	0x20E50000  	8421
0x0148	0x20E50000  	8421
0x014C	0x20E50000  	8421
; end of ____SysVT
_main:
;Click_Pressure2_STM.c, 66 :: 		void main()
0x20EC	0xF000F80E  BL	8460
0x20F0	0xF000FAB6  BL	9824
0x20F4	0xF7FFFFEC  BL	8400
0x20F8	0xF000FA64  BL	9668
;Click_Pressure2_STM.c, 68 :: 		systemInit();
0x20FC	0xF7FFFFC4  BL	_systemInit+0
;Click_Pressure2_STM.c, 69 :: 		applicationInit();
0x2100	0xF7FFFF5A  BL	_applicationInit+0
;Click_Pressure2_STM.c, 71 :: 		while (1)
L_main6:
;Click_Pressure2_STM.c, 73 :: 		applicationTask();
0x2104	0xF7FFFF74  BL	_applicationTask+0
;Click_Pressure2_STM.c, 74 :: 		}
0x2108	0xE7FC    B	L_main6
;Click_Pressure2_STM.c, 75 :: 		}
L_end_main:
L__main_end_loop:
0x210A	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x1F68	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x1F6A	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x1F6E	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x1F72	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x1F76	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x1F78	0xB001    ADD	SP, SP, #4
0x1F7A	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x1F7C	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x1F7E	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x1F82	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x1F86	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x1F8A	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x1F8C	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x1F90	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x1F92	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x1F94	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x1F96	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x1F9A	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x1F9E	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x1FA0	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x1FA4	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x1FA6	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x1FA8	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x1FAC	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x1FB0	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x1FB2	0xB001    ADD	SP, SP, #4
0x1FB4	0x4770    BX	LR
; end of ___FillZeros
_systemInit:
;Click_Pressure2_STM.c, 34 :: 		void systemInit()
0x2088	0xB081    SUB	SP, SP, #4
0x208A	0xF8CDE000  STR	LR, [SP, #0]
;Click_Pressure2_STM.c, 36 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_CS_PIN, _GPIO_OUTPUT );
0x208E	0x2200    MOVS	R2, #0
0x2090	0x2102    MOVS	R1, #2
0x2092	0x2000    MOVS	R0, #0
0x2094	0xF7FFFCAE  BL	_mikrobus_gpioInit+0
;Click_Pressure2_STM.c, 37 :: 		mikrobus_spiInit( _MIKROBUS1, &_PRESSURE2_SPI_CFG[0] );
0x2098	0x480C    LDR	R0, [PC, #48]
0x209A	0x4601    MOV	R1, R0
0x209C	0x2000    MOVS	R0, #0
0x209E	0xF7FFFC59  BL	_mikrobus_spiInit+0
;Click_Pressure2_STM.c, 38 :: 		mikrobus_logInit( _LOG_USBUART_A, 9600 );
0x20A2	0xF2425180  MOVW	R1, #9600
0x20A6	0x2020    MOVS	R0, #32
0x20A8	0xF7FFFF04  BL	_mikrobus_logInit+0
;Click_Pressure2_STM.c, 39 :: 		Delay_ms( 100 );
0x20AC	0xF644777F  MOVW	R7, #20351
0x20B0	0xF2C00712  MOVT	R7, #18
0x20B4	0xBF00    NOP
0x20B6	0xBF00    NOP
L_systemInit0:
0x20B8	0x1E7F    SUBS	R7, R7, #1
0x20BA	0xD1FD    BNE	L_systemInit0
0x20BC	0xBF00    NOP
0x20BE	0xBF00    NOP
0x20C0	0xBF00    NOP
;Click_Pressure2_STM.c, 40 :: 		}
L_end_systemInit:
0x20C2	0xF8DDE000  LDR	LR, [SP, #0]
0x20C6	0xB001    ADD	SP, SP, #4
0x20C8	0x4770    BX	LR
0x20CA	0xBF00    NOP
0x20CC	0x25B40000  	__PRESSURE2_SPI_CFG+0
; end of _systemInit
_mikrobus_gpioInit:
;easymx_v7_STM32F107VC.c, 162 :: 		T_mikrobus_ret mikrobus_gpioInit(T_mikrobus_soc bus, T_mikrobus_pin pin, T_gpio_dir direction)
; direction start address is: 8 (R2)
; pin start address is: 4 (R1)
; bus start address is: 0 (R0)
0x19F4	0xB081    SUB	SP, SP, #4
0x19F6	0xF8CDE000  STR	LR, [SP, #0]
0x19FA	0xFA5FF981  UXTB	R9, R1
0x19FE	0xFA5FFA82  UXTB	R10, R2
; direction end address is: 8 (R2)
; pin end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; pin start address is: 36 (R9)
; direction start address is: 40 (R10)
;easymx_v7_STM32F107VC.c, 164 :: 		switch( bus )
0x1A02	0xE00F    B	L_mikrobus_gpioInit78
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 167 :: 		case _MIKROBUS1 : return _gpioInit_1(pin, direction);
L_mikrobus_gpioInit80:
0x1A04	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x1A08	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x1A0C	0xF7FFFE34  BL	easymx_v7_STM32F107VC__gpioInit_1+0
0x1A10	0xE00D    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 170 :: 		case _MIKROBUS2 : return _gpioInit_2(pin, direction);
L_mikrobus_gpioInit81:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
0x1A12	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x1A16	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x1A1A	0xF7FFFD51  BL	easymx_v7_STM32F107VC__gpioInit_2+0
0x1A1E	0xE006    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 184 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_gpioInit82:
0x1A20	0x2001    MOVS	R0, #1
0x1A22	0xE004    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 185 :: 		}
L_mikrobus_gpioInit78:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
; bus start address is: 0 (R0)
0x1A24	0x2800    CMP	R0, #0
0x1A26	0xD0ED    BEQ	L_mikrobus_gpioInit80
0x1A28	0x2801    CMP	R0, #1
0x1A2A	0xD0F2    BEQ	L_mikrobus_gpioInit81
; bus end address is: 0 (R0)
; pin end address is: 36 (R9)
; direction end address is: 40 (R10)
0x1A2C	0xE7F8    B	L_mikrobus_gpioInit82
;easymx_v7_STM32F107VC.c, 187 :: 		}
L_end_mikrobus_gpioInit:
0x1A2E	0xF8DDE000  LDR	LR, [SP, #0]
0x1A32	0xB001    ADD	SP, SP, #4
0x1A34	0x4770    BX	LR
; end of _mikrobus_gpioInit
easymx_v7_STM32F107VC__gpioInit_1:
;__em_f107vc_gpio.c, 81 :: 		static T_mikrobus_ret _gpioInit_1(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1678	0xB081    SUB	SP, SP, #4
0x167A	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 83 :: 		switch( pin )
0x167E	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_10
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 85 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_4 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_4 ); break;
L_easymx_v7_STM32F107VC__gpioInit_12:
0x1680	0x2901    CMP	R1, #1
0x1682	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_13
; dir end address is: 4 (R1)
0x1684	0xF2400110  MOVW	R1, #16
0x1688	0x4865    LDR	R0, [PC, #404]
0x168A	0xF7FFFA83  BL	_GPIO_Digital_Input+0
0x168E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_14
L_easymx_v7_STM32F107VC__gpioInit_13:
0x1690	0xF2400110  MOVW	R1, #16
0x1694	0x4862    LDR	R0, [PC, #392]
0x1696	0xF7FFFA97  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_14:
0x169A	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 86 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_2 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_2 ); break;
L_easymx_v7_STM32F107VC__gpioInit_15:
; dir start address is: 4 (R1)
0x169C	0x2901    CMP	R1, #1
0x169E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_16
; dir end address is: 4 (R1)
0x16A0	0xF2400104  MOVW	R1, #4
0x16A4	0x485F    LDR	R0, [PC, #380]
0x16A6	0xF7FFFA75  BL	_GPIO_Digital_Input+0
0x16AA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_17
L_easymx_v7_STM32F107VC__gpioInit_16:
0x16AC	0xF2400104  MOVW	R1, #4
0x16B0	0x485C    LDR	R0, [PC, #368]
0x16B2	0xF7FFFA89  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_17:
0x16B6	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 87 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_13); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_13); break;
L_easymx_v7_STM32F107VC__gpioInit_18:
; dir start address is: 4 (R1)
0x16B8	0x2901    CMP	R1, #1
0x16BA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_19
; dir end address is: 4 (R1)
0x16BC	0xF2420100  MOVW	R1, #8192
0x16C0	0x4859    LDR	R0, [PC, #356]
0x16C2	0xF7FFFA67  BL	_GPIO_Digital_Input+0
0x16C6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_110
L_easymx_v7_STM32F107VC__gpioInit_19:
0x16C8	0xF2420100  MOVW	R1, #8192
0x16CC	0x4856    LDR	R0, [PC, #344]
0x16CE	0xF7FFFA7B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_110:
0x16D2	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 88 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_111:
; dir start address is: 4 (R1)
0x16D4	0x2901    CMP	R1, #1
0x16D6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_112
; dir end address is: 4 (R1)
0x16D8	0xF2404100  MOVW	R1, #1024
0x16DC	0x4851    LDR	R0, [PC, #324]
0x16DE	0xF7FFFA59  BL	_GPIO_Digital_Input+0
0x16E2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_113
L_easymx_v7_STM32F107VC__gpioInit_112:
0x16E4	0xF2404100  MOVW	R1, #1024
0x16E8	0x484E    LDR	R0, [PC, #312]
0x16EA	0xF7FFFA6D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_113:
0x16EE	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 89 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_114:
; dir start address is: 4 (R1)
0x16F0	0x2901    CMP	R1, #1
0x16F2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_115
; dir end address is: 4 (R1)
0x16F4	0xF6400100  MOVW	R1, #2048
0x16F8	0x484A    LDR	R0, [PC, #296]
0x16FA	0xF7FFFA4B  BL	_GPIO_Digital_Input+0
0x16FE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_116
L_easymx_v7_STM32F107VC__gpioInit_115:
0x1700	0xF6400100  MOVW	R1, #2048
0x1704	0x4847    LDR	R0, [PC, #284]
0x1706	0xF7FFFA5F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_116:
0x170A	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 90 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_117:
; dir start address is: 4 (R1)
0x170C	0x2901    CMP	R1, #1
0x170E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_118
; dir end address is: 4 (R1)
0x1710	0xF2410100  MOVW	R1, #4096
0x1714	0x4843    LDR	R0, [PC, #268]
0x1716	0xF7FFFA3D  BL	_GPIO_Digital_Input+0
0x171A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_119
L_easymx_v7_STM32F107VC__gpioInit_118:
0x171C	0xF2410100  MOVW	R1, #4096
0x1720	0x4840    LDR	R0, [PC, #256]
0x1722	0xF7FFFA51  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_119:
0x1726	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 91 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_0 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_0 ); break;
L_easymx_v7_STM32F107VC__gpioInit_120:
; dir start address is: 4 (R1)
0x1728	0x2901    CMP	R1, #1
0x172A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_121
; dir end address is: 4 (R1)
0x172C	0xF2400101  MOVW	R1, #1
0x1730	0x483B    LDR	R0, [PC, #236]
0x1732	0xF7FFFA2F  BL	_GPIO_Digital_Input+0
0x1736	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_122
L_easymx_v7_STM32F107VC__gpioInit_121:
0x1738	0xF2400101  MOVW	R1, #1
0x173C	0x4838    LDR	R0, [PC, #224]
0x173E	0xF7FFFA43  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_122:
0x1742	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 92 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_123:
; dir start address is: 4 (R1)
0x1744	0x2901    CMP	R1, #1
0x1746	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_124
; dir end address is: 4 (R1)
0x1748	0xF2404100  MOVW	R1, #1024
0x174C	0x4836    LDR	R0, [PC, #216]
0x174E	0xF7FFFA21  BL	_GPIO_Digital_Input+0
0x1752	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_125
L_easymx_v7_STM32F107VC__gpioInit_124:
0x1754	0xF2404100  MOVW	R1, #1024
0x1758	0x4833    LDR	R0, [PC, #204]
0x175A	0xF7FFFA35  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_125:
0x175E	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 93 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_9 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_9 ); break;
L_easymx_v7_STM32F107VC__gpioInit_126:
; dir start address is: 4 (R1)
0x1760	0x2901    CMP	R1, #1
0x1762	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_127
; dir end address is: 4 (R1)
0x1764	0xF2402100  MOVW	R1, #512
0x1768	0x482F    LDR	R0, [PC, #188]
0x176A	0xF7FFFA13  BL	_GPIO_Digital_Input+0
0x176E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_128
L_easymx_v7_STM32F107VC__gpioInit_127:
0x1770	0xF2402100  MOVW	R1, #512
0x1774	0x482C    LDR	R0, [PC, #176]
0x1776	0xF7FFFA27  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_128:
0x177A	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 94 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_8 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_8 ); break;
L_easymx_v7_STM32F107VC__gpioInit_129:
; dir start address is: 4 (R1)
0x177C	0x2901    CMP	R1, #1
0x177E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_130
; dir end address is: 4 (R1)
0x1780	0xF2401100  MOVW	R1, #256
0x1784	0x4828    LDR	R0, [PC, #160]
0x1786	0xF7FFFA05  BL	_GPIO_Digital_Input+0
0x178A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_131
L_easymx_v7_STM32F107VC__gpioInit_130:
0x178C	0xF2401100  MOVW	R1, #256
0x1790	0x4825    LDR	R0, [PC, #148]
0x1792	0xF7FFFA19  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_131:
0x1796	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 95 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_132:
; dir start address is: 4 (R1)
0x1798	0x2901    CMP	R1, #1
0x179A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_133
; dir end address is: 4 (R1)
0x179C	0xF2400140  MOVW	R1, #64
0x17A0	0x4822    LDR	R0, [PC, #136]
0x17A2	0xF7FFF9F7  BL	_GPIO_Digital_Input+0
0x17A6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_134
L_easymx_v7_STM32F107VC__gpioInit_133:
0x17A8	0xF2400140  MOVW	R1, #64
0x17AC	0x481F    LDR	R0, [PC, #124]
0x17AE	0xF7FFFA0B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_134:
0x17B2	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 96 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_135:
; dir start address is: 4 (R1)
0x17B4	0x2901    CMP	R1, #1
0x17B6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_136
; dir end address is: 4 (R1)
0x17B8	0xF2400180  MOVW	R1, #128
0x17BC	0x481B    LDR	R0, [PC, #108]
0x17BE	0xF7FFF9E9  BL	_GPIO_Digital_Input+0
0x17C2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_137
L_easymx_v7_STM32F107VC__gpioInit_136:
0x17C4	0xF2400180  MOVW	R1, #128
0x17C8	0x4818    LDR	R0, [PC, #96]
0x17CA	0xF7FFF9FD  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_137:
0x17CE	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 97 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_138:
0x17D0	0x2001    MOVS	R0, #1
0x17D2	0xE020    B	L_end__gpioInit_1
;__em_f107vc_gpio.c, 98 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_10:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x17D4	0x2800    CMP	R0, #0
0x17D6	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_12
0x17DA	0x2801    CMP	R0, #1
0x17DC	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_15
0x17E0	0x2802    CMP	R0, #2
0x17E2	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_18
0x17E6	0x2803    CMP	R0, #3
0x17E8	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_111
0x17EC	0x2804    CMP	R0, #4
0x17EE	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_114
0x17F2	0x2805    CMP	R0, #5
0x17F4	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_117
0x17F8	0x2806    CMP	R0, #6
0x17FA	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_120
0x17FE	0x2807    CMP	R0, #7
0x1800	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_123
0x1802	0x2808    CMP	R0, #8
0x1804	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_126
0x1806	0x2809    CMP	R0, #9
0x1808	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_129
0x180A	0x280A    CMP	R0, #10
0x180C	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_132
0x180E	0x280B    CMP	R0, #11
0x1810	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_135
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x1812	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_138
L_easymx_v7_STM32F107VC__gpioInit_11:
;__em_f107vc_gpio.c, 99 :: 		return _MIKROBUS_OK;
0x1814	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 100 :: 		}
L_end__gpioInit_1:
0x1816	0xF8DDE000  LDR	LR, [SP, #0]
0x181A	0xB001    ADD	SP, SP, #4
0x181C	0x4770    BX	LR
0x181E	0xBF00    NOP
0x1820	0x08004001  	GPIOA_BASE+0
0x1824	0x10004001  	GPIOC_BASE+0
0x1828	0x14004001  	GPIOD_BASE+0
0x182C	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_1
_GPIO_Digital_Input:
;__Lib_GPIO_32F10x.c, 369 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0B94	0xB081    SUB	SP, SP, #4
0x0B96	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 370 :: 		
0x0B9A	0xF04F0242  MOV	R2, #66
0x0B9E	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0BA0	0xF7FFFE4E  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 371 :: 		
L_end_GPIO_Digital_Input:
0x0BA4	0xF8DDE000  LDR	LR, [SP, #0]
0x0BA8	0xB001    ADD	SP, SP, #4
0x0BAA	0x4770    BX	LR
; end of _GPIO_Digital_Input
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0840	0xB081    SUB	SP, SP, #4
0x0842	0xF8CDE000  STR	LR, [SP, #0]
0x0846	0xB28C    UXTH	R4, R1
0x0848	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x084A	0x4B77    LDR	R3, [PC, #476]
0x084C	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x0850	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x0852	0x4618    MOV	R0, R3
0x0854	0xF7FFFDD0  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x0858	0xF1B40FFF  CMP	R4, #255
0x085C	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x085E	0x4B73    LDR	R3, [PC, #460]
0x0860	0x429D    CMP	R5, R3
0x0862	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x0864	0xF04F3333  MOV	R3, #858993459
0x0868	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x086A	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x086C	0x2D42    CMP	R5, #66
0x086E	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x0870	0xF04F3344  MOV	R3, #1145324612
0x0874	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x0876	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x0878	0xF64F73FF  MOVW	R3, #65535
0x087C	0x429C    CMP	R4, R3
0x087E	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x0880	0x4B6A    LDR	R3, [PC, #424]
0x0882	0x429D    CMP	R5, R3
0x0884	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x0886	0xF04F3333  MOV	R3, #858993459
0x088A	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x088C	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x088E	0xF04F3333  MOV	R3, #858993459
0x0892	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x0894	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0896	0x2D42    CMP	R5, #66
0x0898	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x089A	0xF04F3344  MOV	R3, #1145324612
0x089E	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x08A0	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x08A2	0xF04F3344  MOV	R3, #1145324612
0x08A6	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x08A8	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x08AA	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x08AC	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x08AE	0xF0050301  AND	R3, R5, #1
0x08B2	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x08B4	0x2100    MOVS	R1, #0
0x08B6	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x08B8	0xF0050302  AND	R3, R5, #2
0x08BC	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x08BE	0xF40573C0  AND	R3, R5, #384
0x08C2	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x08C4	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x08C6	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x08C8	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x08CA	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x08CC	0xF0050304  AND	R3, R5, #4
0x08D0	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x08D2	0xF0050320  AND	R3, R5, #32
0x08D6	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x08D8	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x08DA	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x08DC	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x08DE	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x08E0	0xF0050308  AND	R3, R5, #8
0x08E4	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x08E6	0xF0050320  AND	R3, R5, #32
0x08EA	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x08EC	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x08EE	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x08F0	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x08F2	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x08F4	0x4B4E    LDR	R3, [PC, #312]
0x08F6	0xEA050303  AND	R3, R5, R3, LSL #0
0x08FA	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x08FC	0x2003    MOVS	R0, #3
0x08FE	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x0900	0xF4057300  AND	R3, R5, #512
0x0904	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x0906	0x2002    MOVS	R0, #2
0x0908	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x090A	0xF4056380  AND	R3, R5, #1024
0x090E	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x0910	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x0912	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x0914	0xF005030C  AND	R3, R5, #12
0x0918	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x091A	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x091C	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x091E	0xF00403FF  AND	R3, R4, #255
0x0922	0xB29B    UXTH	R3, R3
0x0924	0x2B00    CMP	R3, #0
0x0926	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x0928	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x092A	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x092C	0xFA1FF884  UXTH	R8, R4
0x0930	0x4632    MOV	R2, R6
0x0932	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x0934	0x2808    CMP	R0, #8
0x0936	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x0938	0xF04F0301  MOV	R3, #1
0x093C	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x0940	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x0944	0x42A3    CMP	R3, R4
0x0946	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x0948	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x094A	0xF04F030F  MOV	R3, #15
0x094E	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x0950	0x43DB    MVN	R3, R3
0x0952	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x0956	0xFA01F305  LSL	R3, R1, R5
0x095A	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x095E	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x0960	0xF4067381  AND	R3, R6, #258
0x0964	0xF5B37F81  CMP	R3, #258
0x0968	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x096A	0xF2020414  ADDW	R4, R2, #20
0x096E	0xF04F0301  MOV	R3, #1
0x0972	0x4083    LSLS	R3, R0
0x0974	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x0976	0xF0060382  AND	R3, R6, #130
0x097A	0x2B82    CMP	R3, #130
0x097C	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x097E	0xF2020410  ADDW	R4, R2, #16
0x0982	0xF04F0301  MOV	R3, #1
0x0986	0x4083    LSLS	R3, R0
0x0988	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x098A	0x462F    MOV	R7, R5
0x098C	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x098E	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x0990	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x0992	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x0994	0xFA1FF088  UXTH	R0, R8
0x0998	0x460F    MOV	R7, R1
0x099A	0x4631    MOV	R1, R6
0x099C	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x099E	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x09A0	0x460F    MOV	R7, R1
0x09A2	0x4629    MOV	R1, R5
0x09A4	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x09A6	0xF1B00FFF  CMP	R0, #255
0x09AA	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x09AC	0x1D33    ADDS	R3, R6, #4
0x09AE	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x09B2	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x09B4	0x2A08    CMP	R2, #8
0x09B6	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x09B8	0xF2020408  ADDW	R4, R2, #8
0x09BC	0xF04F0301  MOV	R3, #1
0x09C0	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x09C4	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x09C8	0x42A3    CMP	R3, R4
0x09CA	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x09CC	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x09CE	0xF04F030F  MOV	R3, #15
0x09D2	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x09D4	0x43DB    MVN	R3, R3
0x09D6	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x09DA	0xFA07F305  LSL	R3, R7, R5
0x09DE	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x09E2	0xF4017381  AND	R3, R1, #258
0x09E6	0xF5B37F81  CMP	R3, #258
0x09EA	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x09EC	0xF2060514  ADDW	R5, R6, #20
0x09F0	0xF2020408  ADDW	R4, R2, #8
0x09F4	0xF04F0301  MOV	R3, #1
0x09F8	0x40A3    LSLS	R3, R4
0x09FA	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x09FC	0xF0010382  AND	R3, R1, #130
0x0A00	0x2B82    CMP	R3, #130
0x0A02	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x0A04	0xF2060510  ADDW	R5, R6, #16
0x0A08	0xF2020408  ADDW	R4, R2, #8
0x0A0C	0xF04F0301  MOV	R3, #1
0x0A10	0x40A3    LSLS	R3, R4
0x0A12	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x0A14	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x0A16	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x0A18	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x0A1A	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x0A1C	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x0A20	0xF8DDE000  LDR	LR, [SP, #0]
0x0A24	0xB001    ADD	SP, SP, #4
0x0A26	0x4770    BX	LR
0x0A28	0xFC00FFFF  	#-1024
0x0A2C	0x00140008  	#524308
0x0A30	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x03F8	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x03FA	0x4919    LDR	R1, [PC, #100]
0x03FC	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0400	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x0402	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x0404	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0406	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0408	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x040A	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x040C	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x040E	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0410	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x0412	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x0414	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x0416	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0418	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x041A	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x041C	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x041E	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x0422	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x0424	0x490F    LDR	R1, [PC, #60]
0x0426	0x4288    CMP	R0, R1
0x0428	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x042A	0x490F    LDR	R1, [PC, #60]
0x042C	0x4288    CMP	R0, R1
0x042E	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0430	0x490E    LDR	R1, [PC, #56]
0x0432	0x4288    CMP	R0, R1
0x0434	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x0436	0x490E    LDR	R1, [PC, #56]
0x0438	0x4288    CMP	R0, R1
0x043A	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x043C	0x490D    LDR	R1, [PC, #52]
0x043E	0x4288    CMP	R0, R1
0x0440	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x0442	0x490D    LDR	R1, [PC, #52]
0x0444	0x4288    CMP	R0, R1
0x0446	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x0448	0x490C    LDR	R1, [PC, #48]
0x044A	0x4288    CMP	R0, R1
0x044C	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x044E	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x0450	0x490B    LDR	R1, [PC, #44]
0x0452	0x6809    LDR	R1, [R1, #0]
0x0454	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0458	0x4909    LDR	R1, [PC, #36]
0x045A	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x045C	0xB001    ADD	SP, SP, #4
0x045E	0x4770    BX	LR
0x0460	0xFC00FFFF  	#-1024
0x0464	0x08004001  	#1073809408
0x0468	0x0C004001  	#1073810432
0x046C	0x10004001  	#1073811456
0x0470	0x14004001  	#1073812480
0x0474	0x18004001  	#1073813504
0x0478	0x1C004001  	#1073814528
0x047C	0x20004001  	#1073815552
0x0480	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Output:
;__Lib_GPIO_32F10x.c, 365 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0BC8	0xB081    SUB	SP, SP, #4
0x0BCA	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 366 :: 		
0x0BCE	0x4A04    LDR	R2, [PC, #16]
0x0BD0	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0BD2	0xF7FFFE35  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 367 :: 		
L_end_GPIO_Digital_Output:
0x0BD6	0xF8DDE000  LDR	LR, [SP, #0]
0x0BDA	0xB001    ADD	SP, SP, #4
0x0BDC	0x4770    BX	LR
0x0BDE	0xBF00    NOP
0x0BE0	0x00140008  	#524308
; end of _GPIO_Digital_Output
easymx_v7_STM32F107VC__gpioInit_2:
;__em_f107vc_gpio.c, 102 :: 		static T_mikrobus_ret _gpioInit_2(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x14C0	0xB081    SUB	SP, SP, #4
0x14C2	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 104 :: 		switch( pin )
0x14C6	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_239
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 106 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_241:
0x14C8	0x2901    CMP	R1, #1
0x14CA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_242
; dir end address is: 4 (R1)
0x14CC	0xF2400120  MOVW	R1, #32
0x14D0	0x4865    LDR	R0, [PC, #404]
0x14D2	0xF7FFFB5F  BL	_GPIO_Digital_Input+0
0x14D6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_243
L_easymx_v7_STM32F107VC__gpioInit_242:
0x14D8	0xF2400120  MOVW	R1, #32
0x14DC	0x4862    LDR	R0, [PC, #392]
0x14DE	0xF7FFFB73  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_243:
0x14E2	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 107 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_3 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_3 ); break;
L_easymx_v7_STM32F107VC__gpioInit_244:
; dir start address is: 4 (R1)
0x14E4	0x2901    CMP	R1, #1
0x14E6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_245
; dir end address is: 4 (R1)
0x14E8	0xF2400108  MOVW	R1, #8
0x14EC	0x485F    LDR	R0, [PC, #380]
0x14EE	0xF7FFFB51  BL	_GPIO_Digital_Input+0
0x14F2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_246
L_easymx_v7_STM32F107VC__gpioInit_245:
0x14F4	0xF2400108  MOVW	R1, #8
0x14F8	0x485C    LDR	R0, [PC, #368]
0x14FA	0xF7FFFB65  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_246:
0x14FE	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 108 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_14); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_14); break;
L_easymx_v7_STM32F107VC__gpioInit_247:
; dir start address is: 4 (R1)
0x1500	0x2901    CMP	R1, #1
0x1502	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_248
; dir end address is: 4 (R1)
0x1504	0xF2440100  MOVW	R1, #16384
0x1508	0x4859    LDR	R0, [PC, #356]
0x150A	0xF7FFFB43  BL	_GPIO_Digital_Input+0
0x150E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_249
L_easymx_v7_STM32F107VC__gpioInit_248:
0x1510	0xF2440100  MOVW	R1, #16384
0x1514	0x4856    LDR	R0, [PC, #344]
0x1516	0xF7FFFB57  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_249:
0x151A	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 109 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_250:
; dir start address is: 4 (R1)
0x151C	0x2901    CMP	R1, #1
0x151E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_251
; dir end address is: 4 (R1)
0x1520	0xF2404100  MOVW	R1, #1024
0x1524	0x4851    LDR	R0, [PC, #324]
0x1526	0xF7FFFB35  BL	_GPIO_Digital_Input+0
0x152A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_252
L_easymx_v7_STM32F107VC__gpioInit_251:
0x152C	0xF2404100  MOVW	R1, #1024
0x1530	0x484E    LDR	R0, [PC, #312]
0x1532	0xF7FFFB49  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_252:
0x1536	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 110 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_253:
; dir start address is: 4 (R1)
0x1538	0x2901    CMP	R1, #1
0x153A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_254
; dir end address is: 4 (R1)
0x153C	0xF6400100  MOVW	R1, #2048
0x1540	0x484A    LDR	R0, [PC, #296]
0x1542	0xF7FFFB27  BL	_GPIO_Digital_Input+0
0x1546	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_255
L_easymx_v7_STM32F107VC__gpioInit_254:
0x1548	0xF6400100  MOVW	R1, #2048
0x154C	0x4847    LDR	R0, [PC, #284]
0x154E	0xF7FFFB3B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_255:
0x1552	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 111 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_256:
; dir start address is: 4 (R1)
0x1554	0x2901    CMP	R1, #1
0x1556	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_257
; dir end address is: 4 (R1)
0x1558	0xF2410100  MOVW	R1, #4096
0x155C	0x4843    LDR	R0, [PC, #268]
0x155E	0xF7FFFB19  BL	_GPIO_Digital_Input+0
0x1562	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_258
L_easymx_v7_STM32F107VC__gpioInit_257:
0x1564	0xF2410100  MOVW	R1, #4096
0x1568	0x4840    LDR	R0, [PC, #256]
0x156A	0xF7FFFB2D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_258:
0x156E	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 112 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_259:
; dir start address is: 4 (R1)
0x1570	0x2901    CMP	R1, #1
0x1572	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_260
; dir end address is: 4 (R1)
0x1574	0xF2410100  MOVW	R1, #4096
0x1578	0x483D    LDR	R0, [PC, #244]
0x157A	0xF7FFFB0B  BL	_GPIO_Digital_Input+0
0x157E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_261
L_easymx_v7_STM32F107VC__gpioInit_260:
0x1580	0xF2410100  MOVW	R1, #4096
0x1584	0x483A    LDR	R0, [PC, #232]
0x1586	0xF7FFFB1F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_261:
0x158A	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 113 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_262:
; dir start address is: 4 (R1)
0x158C	0x2901    CMP	R1, #1
0x158E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_263
; dir end address is: 4 (R1)
0x1590	0xF6400100  MOVW	R1, #2048
0x1594	0x4836    LDR	R0, [PC, #216]
0x1596	0xF7FFFAFD  BL	_GPIO_Digital_Input+0
0x159A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_264
L_easymx_v7_STM32F107VC__gpioInit_263:
0x159C	0xF6400100  MOVW	R1, #2048
0x15A0	0x4833    LDR	R0, [PC, #204]
0x15A2	0xF7FFFB11  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_264:
0x15A6	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 114 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_265:
; dir start address is: 4 (R1)
0x15A8	0x2901    CMP	R1, #1
0x15AA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_266
; dir end address is: 4 (R1)
0x15AC	0xF2400140  MOVW	R1, #64
0x15B0	0x482F    LDR	R0, [PC, #188]
0x15B2	0xF7FFFAEF  BL	_GPIO_Digital_Input+0
0x15B6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_267
L_easymx_v7_STM32F107VC__gpioInit_266:
0x15B8	0xF2400140  MOVW	R1, #64
0x15BC	0x482C    LDR	R0, [PC, #176]
0x15BE	0xF7FFFB03  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_267:
0x15C2	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 115 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_268:
; dir start address is: 4 (R1)
0x15C4	0x2901    CMP	R1, #1
0x15C6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_269
; dir end address is: 4 (R1)
0x15C8	0xF2400120  MOVW	R1, #32
0x15CC	0x4828    LDR	R0, [PC, #160]
0x15CE	0xF7FFFAE1  BL	_GPIO_Digital_Input+0
0x15D2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_270
L_easymx_v7_STM32F107VC__gpioInit_269:
0x15D4	0xF2400120  MOVW	R1, #32
0x15D8	0x4825    LDR	R0, [PC, #148]
0x15DA	0xF7FFFAF5  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_270:
0x15DE	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 116 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_271:
; dir start address is: 4 (R1)
0x15E0	0x2901    CMP	R1, #1
0x15E2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_272
; dir end address is: 4 (R1)
0x15E4	0xF2400140  MOVW	R1, #64
0x15E8	0x4822    LDR	R0, [PC, #136]
0x15EA	0xF7FFFAD3  BL	_GPIO_Digital_Input+0
0x15EE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_273
L_easymx_v7_STM32F107VC__gpioInit_272:
0x15F0	0xF2400140  MOVW	R1, #64
0x15F4	0x481F    LDR	R0, [PC, #124]
0x15F6	0xF7FFFAE7  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_273:
0x15FA	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 117 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_274:
; dir start address is: 4 (R1)
0x15FC	0x2901    CMP	R1, #1
0x15FE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_275
; dir end address is: 4 (R1)
0x1600	0xF2400180  MOVW	R1, #128
0x1604	0x481B    LDR	R0, [PC, #108]
0x1606	0xF7FFFAC5  BL	_GPIO_Digital_Input+0
0x160A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_276
L_easymx_v7_STM32F107VC__gpioInit_275:
0x160C	0xF2400180  MOVW	R1, #128
0x1610	0x4818    LDR	R0, [PC, #96]
0x1612	0xF7FFFAD9  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_276:
0x1616	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 118 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_277:
0x1618	0x2001    MOVS	R0, #1
0x161A	0xE020    B	L_end__gpioInit_2
;__em_f107vc_gpio.c, 119 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_239:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x161C	0x2800    CMP	R0, #0
0x161E	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_241
0x1622	0x2801    CMP	R0, #1
0x1624	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_244
0x1628	0x2802    CMP	R0, #2
0x162A	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_247
0x162E	0x2803    CMP	R0, #3
0x1630	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_250
0x1634	0x2804    CMP	R0, #4
0x1636	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_253
0x163A	0x2805    CMP	R0, #5
0x163C	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_256
0x1640	0x2806    CMP	R0, #6
0x1642	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_259
0x1646	0x2807    CMP	R0, #7
0x1648	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_262
0x164A	0x2808    CMP	R0, #8
0x164C	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_265
0x164E	0x2809    CMP	R0, #9
0x1650	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_268
0x1652	0x280A    CMP	R0, #10
0x1654	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_271
0x1656	0x280B    CMP	R0, #11
0x1658	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_274
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x165A	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_277
L_easymx_v7_STM32F107VC__gpioInit_240:
;__em_f107vc_gpio.c, 120 :: 		return _MIKROBUS_OK;
0x165C	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 121 :: 		}
L_end__gpioInit_2:
0x165E	0xF8DDE000  LDR	LR, [SP, #0]
0x1662	0xB001    ADD	SP, SP, #4
0x1664	0x4770    BX	LR
0x1666	0xBF00    NOP
0x1668	0x08004001  	GPIOA_BASE+0
0x166C	0x10004001  	GPIOC_BASE+0
0x1670	0x14004001  	GPIOD_BASE+0
0x1674	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_2
_mikrobus_spiInit:
;easymx_v7_STM32F107VC.c, 192 :: 		T_mikrobus_ret mikrobus_spiInit(T_mikrobus_soc bus, const uint32_t *cfg)
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x1954	0xB081    SUB	SP, SP, #4
0x1956	0xF8CDE000  STR	LR, [SP, #0]
0x195A	0x468B    MOV	R11, R1
; cfg end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; cfg start address is: 44 (R11)
;easymx_v7_STM32F107VC.c, 194 :: 		switch( bus )
0x195C	0xE009    B	L_mikrobus_spiInit83
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 197 :: 		case _MIKROBUS1 : return _spiInit_1( cfg );
L_mikrobus_spiInit85:
0x195E	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x1960	0xF7FFFD8A  BL	easymx_v7_STM32F107VC__spiInit_1+0
0x1964	0xE00A    B	L_end_mikrobus_spiInit
;easymx_v7_STM32F107VC.c, 200 :: 		case _MIKROBUS2 : return _spiInit_2( cfg );
L_mikrobus_spiInit86:
; cfg start address is: 44 (R11)
0x1966	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x1968	0xF7FFFD98  BL	easymx_v7_STM32F107VC__spiInit_2+0
0x196C	0xE006    B	L_end_mikrobus_spiInit
;easymx_v7_STM32F107VC.c, 214 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_spiInit87:
0x196E	0x2001    MOVS	R0, #1
0x1970	0xE004    B	L_end_mikrobus_spiInit
;easymx_v7_STM32F107VC.c, 215 :: 		}
L_mikrobus_spiInit83:
; cfg start address is: 44 (R11)
; bus start address is: 0 (R0)
0x1972	0x2800    CMP	R0, #0
0x1974	0xD0F3    BEQ	L_mikrobus_spiInit85
0x1976	0x2801    CMP	R0, #1
0x1978	0xD0F5    BEQ	L_mikrobus_spiInit86
; bus end address is: 0 (R0)
; cfg end address is: 44 (R11)
0x197A	0xE7F8    B	L_mikrobus_spiInit87
;easymx_v7_STM32F107VC.c, 217 :: 		}
L_end_mikrobus_spiInit:
0x197C	0xF8DDE000  LDR	LR, [SP, #0]
0x1980	0xB001    ADD	SP, SP, #4
0x1982	0x4770    BX	LR
; end of _mikrobus_spiInit
easymx_v7_STM32F107VC__spiInit_1:
;__em_f107vc_spi.c, 27 :: 		static T_mikrobus_ret _spiInit_1(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x1478	0xB081    SUB	SP, SP, #4
0x147A	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_spi.c, 29 :: 		SPI3_Init_Advanced( (unsigned char)cfg[0], (long)cfg[1], &_GPIO_MODULE_SPI3_PC10_11_12 );
0x147E	0x1D01    ADDS	R1, R0, #4
0x1480	0x680A    LDR	R2, [R1, #0]
0x1482	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x1484	0xB2C8    UXTB	R0, R1
0x1486	0x4611    MOV	R1, R2
0x1488	0x4A03    LDR	R2, [PC, #12]
0x148A	0xF7FFFBAB  BL	_SPI3_Init_Advanced+0
;__em_f107vc_spi.c, 30 :: 		return _MIKROBUS_OK;
0x148E	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_spi.c, 31 :: 		}
L_end__spiInit_1:
0x1490	0xF8DDE000  LDR	LR, [SP, #0]
0x1494	0xB001    ADD	SP, SP, #4
0x1496	0x4770    BX	LR
0x1498	0x24940000  	__GPIO_MODULE_SPI3_PC10_11_12+0
; end of easymx_v7_STM32F107VC__spiInit_1
_SPI3_Init_Advanced:
;__Lib_SPI_123.c, 133 :: 		
; module start address is: 8 (R2)
0x0BE4	0xB083    SUB	SP, SP, #12
0x0BE6	0xF8CDE000  STR	LR, [SP, #0]
0x0BEA	0xF88D0004  STRB	R0, [SP, #4]
0x0BEE	0x9102    STR	R1, [SP, #8]
; module end address is: 8 (R2)
; module start address is: 8 (R2)
;__Lib_SPI_123.c, 134 :: 		
0x0BF0	0x4C0B    LDR	R4, [PC, #44]
0x0BF2	0x4B0C    LDR	R3, [PC, #48]
0x0BF4	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 135 :: 		
0x0BF6	0x4C0C    LDR	R4, [PC, #48]
0x0BF8	0x4B0C    LDR	R3, [PC, #48]
0x0BFA	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 137 :: 		
0x0BFC	0x2401    MOVS	R4, #1
0x0BFE	0xB264    SXTB	R4, R4
0x0C00	0x4B0B    LDR	R3, [PC, #44]
0x0C02	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 138 :: 		
0x0C04	0x4610    MOV	R0, R2
; module end address is: 8 (R2)
0x0C06	0xF7FFFD93  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_SPI_123.c, 140 :: 		
0x0C0A	0x9A02    LDR	R2, [SP, #8]
0x0C0C	0xF89D1004  LDRB	R1, [SP, #4]
0x0C10	0x4808    LDR	R0, [PC, #32]
0x0C12	0xF7FFFF2D  BL	__Lib_SPI_123_SPIx_Init_Advanced+0
;__Lib_SPI_123.c, 141 :: 		
L_end_SPI3_Init_Advanced:
0x0C16	0xF8DDE000  LDR	LR, [SP, #0]
0x0C1A	0xB003    ADD	SP, SP, #12
0x0C1C	0x4770    BX	LR
0x0C1E	0xBF00    NOP
0x0C20	0x02A90000  	_SPI3_Read+0
0x0C24	0x00882000  	_SPI_Rd_Ptr+0
0x0C28	0x03C10000  	_SPI3_Write+0
0x0C2C	0x008C2000  	_SPI_Wr_Ptr+0
0x0C30	0x03BC4242  	RCC_APB1ENR+0
0x0C34	0x3C004000  	SPI3_CR1+0
; end of _SPI3_Init_Advanced
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x0730	0xB081    SUB	SP, SP, #4
0x0732	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x0736	0x2201    MOVS	R2, #1
0x0738	0xB252    SXTB	R2, R2
0x073A	0x493E    LDR	R1, [PC, #248]
0x073C	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x073E	0xF2000168  ADDW	R1, R0, #104
0x0742	0x680B    LDR	R3, [R1, #0]
0x0744	0xF06F6100  MVN	R1, #134217728
0x0748	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x074C	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x074E	0xF0036100  AND	R1, R3, #134217728
0x0752	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x0754	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x0756	0xF0024100  AND	R1, R2, #-2147483648
0x075A	0xF1B14F00  CMP	R1, #-2147483648
0x075E	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x0760	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x0762	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x0764	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x0766	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x0768	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x076A	0xF4042170  AND	R1, R4, #983040
0x076E	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x0770	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x0772	0xF64F71FF  MOVW	R1, #65535
0x0776	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x077A	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x077C	0xF4041140  AND	R1, R4, #3145728
0x0780	0xF5B11F40  CMP	R1, #3145728
0x0784	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x0786	0xF06F6170  MVN	R1, #251658240
0x078A	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x078E	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x0790	0x492A    LDR	R1, [PC, #168]
0x0792	0x680A    LDR	R2, [R1, #0]
0x0794	0xF06F6170  MVN	R1, #251658240
0x0798	0x400A    ANDS	R2, R1
0x079A	0x4928    LDR	R1, [PC, #160]
0x079C	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x079E	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x07A0	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x07A2	0xF4041180  AND	R1, R4, #1048576
0x07A6	0xF5B11F80  CMP	R1, #1048576
0x07AA	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x07AC	0xF04F0103  MOV	R1, #3
0x07B0	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x07B2	0x43C9    MVN	R1, R1
0x07B4	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x07B8	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x07BC	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x07BE	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x07C0	0x0D61    LSRS	R1, R4, #21
0x07C2	0x0109    LSLS	R1, R1, #4
0x07C4	0xFA05F101  LSL	R1, R5, R1
0x07C8	0x43C9    MVN	R1, R1
0x07CA	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x07CC	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x07D0	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x07D2	0x0D61    LSRS	R1, R4, #21
0x07D4	0x0109    LSLS	R1, R1, #4
0x07D6	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x07DA	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x07DC	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x07DE	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x07E2	0xF1B14F00  CMP	R1, #-2147483648
0x07E6	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x07E8	0x4913    LDR	R1, [PC, #76]
0x07EA	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x07EC	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x07EE	0x4913    LDR	R1, [PC, #76]
0x07F0	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x07F2	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x07F6	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x07F8	0xEA4F018A  LSL	R1, R10, #2
0x07FC	0xEB090101  ADD	R1, R9, R1, LSL #0
0x0800	0x6809    LDR	R1, [R1, #0]
0x0802	0xF1B13FFF  CMP	R1, #-1
0x0806	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x0808	0xF1090134  ADD	R1, R9, #52
0x080C	0xEA4F038A  LSL	R3, R10, #2
0x0810	0x18C9    ADDS	R1, R1, R3
0x0812	0x6809    LDR	R1, [R1, #0]
0x0814	0x460A    MOV	R2, R1
0x0816	0xEB090103  ADD	R1, R9, R3, LSL #0
0x081A	0x6809    LDR	R1, [R1, #0]
0x081C	0x4608    MOV	R0, R1
0x081E	0x4611    MOV	R1, R2
0x0820	0xF7FFFCE8  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x0824	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x0828	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x082A	0xF8DDE000  LDR	LR, [SP, #0]
0x082E	0xB001    ADD	SP, SP, #4
0x0830	0x4770    BX	LR
0x0832	0xBF00    NOP
0x0834	0x03004242  	RCC_APB2ENRbits+0
0x0838	0x001C4001  	AFIO_MAPR2+0
0x083C	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x01F4	0xB083    SUB	SP, SP, #12
0x01F6	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x01FA	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x01FE	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0200	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x0202	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x0206	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x0208	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x020A	0x4A19    LDR	R2, [PC, #100]
0x020C	0x9202    STR	R2, [SP, #8]
0x020E	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x0210	0x4A18    LDR	R2, [PC, #96]
0x0212	0x9202    STR	R2, [SP, #8]
0x0214	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x0216	0x4A18    LDR	R2, [PC, #96]
0x0218	0x9202    STR	R2, [SP, #8]
0x021A	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x021C	0x4A17    LDR	R2, [PC, #92]
0x021E	0x9202    STR	R2, [SP, #8]
0x0220	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x0222	0x4A17    LDR	R2, [PC, #92]
0x0224	0x9202    STR	R2, [SP, #8]
0x0226	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x0228	0x4A16    LDR	R2, [PC, #88]
0x022A	0x9202    STR	R2, [SP, #8]
0x022C	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x022E	0x4A16    LDR	R2, [PC, #88]
0x0230	0x9202    STR	R2, [SP, #8]
0x0232	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x0234	0x2800    CMP	R0, #0
0x0236	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x0238	0x2801    CMP	R0, #1
0x023A	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x023C	0x2802    CMP	R0, #2
0x023E	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x0240	0x2803    CMP	R0, #3
0x0242	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x0244	0x2804    CMP	R0, #4
0x0246	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x0248	0x2805    CMP	R0, #5
0x024A	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x024C	0x2806    CMP	R0, #6
0x024E	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x0250	0x2201    MOVS	R2, #1
0x0252	0xB212    SXTH	R2, R2
0x0254	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x0256	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x025A	0x9802    LDR	R0, [SP, #8]
0x025C	0x460A    MOV	R2, R1
0x025E	0xF8BD1004  LDRH	R1, [SP, #4]
0x0262	0xF000FAED  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x0266	0xF8DDE000  LDR	LR, [SP, #0]
0x026A	0xB003    ADD	SP, SP, #12
0x026C	0x4770    BX	LR
0x026E	0xBF00    NOP
0x0270	0x08004001  	#1073809408
0x0274	0x0C004001  	#1073810432
0x0278	0x10004001  	#1073811456
0x027C	0x14004001  	#1073812480
0x0280	0x18004001  	#1073813504
0x0284	0x1C004001  	#1073814528
0x0288	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
__Lib_SPI_123_SPIx_Init_Advanced:
;__Lib_SPI_123.c, 53 :: 		
; config start address is: 8 (R2)
; clock_divider start address is: 4 (R1)
; base start address is: 0 (R0)
0x0A70	0xB081    SUB	SP, SP, #4
; config end address is: 8 (R2)
; clock_divider end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; clock_divider start address is: 4 (R1)
; config start address is: 8 (R2)
;__Lib_SPI_123.c, 56 :: 		
0x0A72	0x2300    MOVS	R3, #0
0x0A74	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 58 :: 		
0x0A76	0x00CB    LSLS	R3, R1, #3
0x0A78	0xB29B    UXTH	R3, R3
; clock_divider end address is: 4 (R1)
0x0A7A	0xEA420303  ORR	R3, R2, R3, LSL #0
;__Lib_SPI_123.c, 60 :: 		
0x0A7E	0x6804    LDR	R4, [R0, #0]
0x0A80	0xB29B    UXTH	R3, R3
0x0A82	0xEA440303  ORR	R3, R4, R3, LSL #0
0x0A86	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 61 :: 		
0x0A88	0x1D05    ADDS	R5, R0, #4
0x0A8A	0x1413    ASRS	R3, R2, #16
; config end address is: 8 (R2)
0x0A8C	0x461C    MOV	R4, R3
0x0A8E	0x682B    LDR	R3, [R5, #0]
0x0A90	0xF3640382  BFI	R3, R4, #2, #1
0x0A94	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 63 :: 		
0x0A96	0xF200051C  ADDW	R5, R0, #28
0x0A9A	0x2400    MOVS	R4, #0
0x0A9C	0x682B    LDR	R3, [R5, #0]
0x0A9E	0xF36423CB  BFI	R3, R4, #11, #1
0x0AA2	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 64 :: 		
0x0AA4	0x2401    MOVS	R4, #1
0x0AA6	0x6803    LDR	R3, [R0, #0]
0x0AA8	0xF3641386  BFI	R3, R4, #6, #1
0x0AAC	0x6003    STR	R3, [R0, #0]
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 65 :: 		
L_end_SPIx_Init_Advanced:
0x0AAE	0xB001    ADD	SP, SP, #4
0x0AB0	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Init_Advanced
easymx_v7_STM32F107VC__spiInit_2:
;__em_f107vc_spi.c, 33 :: 		static T_mikrobus_ret _spiInit_2(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x149C	0xB081    SUB	SP, SP, #4
0x149E	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_spi.c, 35 :: 		SPI3_Init_Advanced( (unsigned char)cfg[0], (long)cfg[1], &_GPIO_MODULE_SPI3_PC10_11_12 );
0x14A2	0x1D01    ADDS	R1, R0, #4
0x14A4	0x680A    LDR	R2, [R1, #0]
0x14A6	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x14A8	0xB2C8    UXTB	R0, R1
0x14AA	0x4611    MOV	R1, R2
0x14AC	0x4A03    LDR	R2, [PC, #12]
0x14AE	0xF7FFFB99  BL	_SPI3_Init_Advanced+0
;__em_f107vc_spi.c, 36 :: 		return _MIKROBUS_OK;
0x14B2	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_spi.c, 37 :: 		}
L_end__spiInit_2:
0x14B4	0xF8DDE000  LDR	LR, [SP, #0]
0x14B8	0xB001    ADD	SP, SP, #4
0x14BA	0x4770    BX	LR
0x14BC	0x24940000  	__GPIO_MODULE_SPI3_PC10_11_12+0
; end of easymx_v7_STM32F107VC__spiInit_2
_mikrobus_logInit:
;easymx_v7_STM32F107VC.c, 283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x1EB4	0xB081    SUB	SP, SP, #4
0x1EB6	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; baud start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 285 :: 		switch( port )
0x1EBA	0xE011    B	L_mikrobus_logInit88
; port end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit90:
0x1EBC	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x1EBE	0xF7FFFAA3  BL	easymx_v7_STM32F107VC__log_init1+0
0x1EC2	0xE016    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit91:
; baud start address is: 4 (R1)
0x1EC4	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x1EC6	0xF7FFFABB  BL	easymx_v7_STM32F107VC__log_init2+0
0x1ECA	0xE012    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 309 :: 		case _LOG_USBUART_A : return _log_initUartA( baud );
L_mikrobus_logInit92:
; baud start address is: 4 (R1)
0x1ECC	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x1ECE	0xF7FFFCAF  BL	easymx_v7_STM32F107VC__log_initUartA+0
0x1ED2	0xE00E    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 312 :: 		case _LOG_USBUART_B : return _log_initUartB( baud );
L_mikrobus_logInit93:
; baud start address is: 4 (R1)
0x1ED4	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x1ED6	0xF7FFFCC7  BL	easymx_v7_STM32F107VC__log_initUartB+0
0x1EDA	0xE00A    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit94:
0x1EDC	0x2001    MOVS	R0, #1
0x1EDE	0xE008    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 315 :: 		}
L_mikrobus_logInit88:
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x1EE0	0x2800    CMP	R0, #0
0x1EE2	0xD0EB    BEQ	L_mikrobus_logInit90
0x1EE4	0x2801    CMP	R0, #1
0x1EE6	0xD0ED    BEQ	L_mikrobus_logInit91
0x1EE8	0x2820    CMP	R0, #32
0x1EEA	0xD0EF    BEQ	L_mikrobus_logInit92
0x1EEC	0x2830    CMP	R0, #48
0x1EEE	0xD0F1    BEQ	L_mikrobus_logInit93
; port end address is: 0 (R0)
; baud end address is: 4 (R1)
0x1EF0	0xE7F4    B	L_mikrobus_logInit94
;easymx_v7_STM32F107VC.c, 317 :: 		}
L_end_mikrobus_logInit:
0x1EF2	0xF8DDE000  LDR	LR, [SP, #0]
0x1EF6	0xB001    ADD	SP, SP, #4
0x1EF8	0x4770    BX	LR
; end of _mikrobus_logInit
easymx_v7_STM32F107VC__log_init1:
;__em_f107vc_log.c, 23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
; baud start address is: 0 (R0)
0x1408	0xB081    SUB	SP, SP, #4
0x140A	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 25 :: 		UART3_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART3_PD89);
0x140E	0x4909    LDR	R1, [PC, #36]
0x1410	0xB402    PUSH	(R1)
0x1412	0xF2400300  MOVW	R3, #0
0x1416	0xF2400200  MOVW	R2, #0
0x141A	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x141E	0xF7FFFC51  BL	_UART3_Init_Advanced+0
0x1422	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 26 :: 		logger = UART3_Write;
0x1424	0x4A04    LDR	R2, [PC, #16]
0x1426	0x4905    LDR	R1, [PC, #20]
0x1428	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 27 :: 		return 0;
0x142A	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 28 :: 		}
L_end__log_init1:
0x142C	0xF8DDE000  LDR	LR, [SP, #0]
0x1430	0xB001    ADD	SP, SP, #4
0x1432	0x4770    BX	LR
0x1434	0x23500000  	__GPIO_MODULE_USART3_PD89+0
0x1438	0x01D90000  	_UART3_Write+0
0x143C	0x00802000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init1
_UART3_Init_Advanced:
;__Lib_UART_123_45.c, 384 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x0CC4	0xB081    SUB	SP, SP, #4
0x0CC6	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x0CCA	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 386 :: 		
0x0CCC	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x0CCE	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x0CD0	0xB408    PUSH	(R3)
0x0CD2	0xB293    UXTH	R3, R2
0x0CD4	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x0CD6	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x0CD8	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x0CDA	0xF7FFFC07  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x0CDE	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 387 :: 		
L_end_UART3_Init_Advanced:
0x0CE0	0xF8DDE000  LDR	LR, [SP, #0]
0x0CE4	0xB001    ADD	SP, SP, #4
0x0CE6	0x4770    BX	LR
0x0CE8	0x48004000  	USART3_SR+0
; end of _UART3_Init_Advanced
__Lib_UART_123_45_UARTx_Init_Advanced:
;__Lib_UART_123_45.c, 294 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x04EC	0xB089    SUB	SP, SP, #36
0x04EE	0xF8CDE000  STR	LR, [SP, #0]
0x04F2	0x4683    MOV	R11, R0
0x04F4	0xB298    UXTH	R0, R3
0x04F6	0x468C    MOV	R12, R1
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 44 (R11)
; baud_rate start address is: 48 (R12)
; parity start address is: 0 (R0)
; stop_bits start address is: 4 (R1)
0x04F8	0xF8BD1024  LDRH	R1, [SP, #36]
; module start address is: 24 (R6)
0x04FC	0x9E0A    LDR	R6, [SP, #40]
;__Lib_UART_123_45.c, 298 :: 		
0x04FE	0xAC04    ADD	R4, SP, #16
0x0500	0xF8AD1004  STRH	R1, [SP, #4]
0x0504	0xF8AD0008  STRH	R0, [SP, #8]
0x0508	0x4620    MOV	R0, R4
0x050A	0xF7FFFEE9  BL	_RCC_GetClocksFrequency+0
0x050E	0xF8BD0008  LDRH	R0, [SP, #8]
0x0512	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 301 :: 		
0x0516	0x4C64    LDR	R4, [PC, #400]
0x0518	0x45A3    CMP	R11, R4
0x051A	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced15
;__Lib_UART_123_45.c, 302 :: 		
0x051C	0x2501    MOVS	R5, #1
0x051E	0xB26D    SXTB	R5, R5
0x0520	0x4C62    LDR	R4, [PC, #392]
0x0522	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 303 :: 		
0x0524	0x4D62    LDR	R5, [PC, #392]
0x0526	0x4C63    LDR	R4, [PC, #396]
0x0528	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 304 :: 		
0x052A	0x4D63    LDR	R5, [PC, #396]
0x052C	0x4C63    LDR	R4, [PC, #396]
0x052E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 305 :: 		
0x0530	0x4D63    LDR	R5, [PC, #396]
0x0532	0x4C64    LDR	R4, [PC, #400]
0x0534	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 306 :: 		
0x0536	0x4D64    LDR	R5, [PC, #400]
0x0538	0x4C64    LDR	R4, [PC, #400]
0x053A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 307 :: 		
0x053C	0x9C07    LDR	R4, [SP, #28]
0x053E	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 308 :: 		
0x0540	0xE056    B	L___Lib_UART_123_45_UARTx_Init_Advanced16
L___Lib_UART_123_45_UARTx_Init_Advanced15:
;__Lib_UART_123_45.c, 309 :: 		
0x0542	0x4C63    LDR	R4, [PC, #396]
0x0544	0x45A3    CMP	R11, R4
0x0546	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced17
;__Lib_UART_123_45.c, 310 :: 		
0x0548	0x2501    MOVS	R5, #1
0x054A	0xB26D    SXTB	R5, R5
0x054C	0x4C61    LDR	R4, [PC, #388]
0x054E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 311 :: 		
0x0550	0x4D61    LDR	R5, [PC, #388]
0x0552	0x4C58    LDR	R4, [PC, #352]
0x0554	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 312 :: 		
0x0556	0x4D61    LDR	R5, [PC, #388]
0x0558	0x4C58    LDR	R4, [PC, #352]
0x055A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 313 :: 		
0x055C	0x4D60    LDR	R5, [PC, #384]
0x055E	0x4C59    LDR	R4, [PC, #356]
0x0560	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 314 :: 		
0x0562	0x4D60    LDR	R5, [PC, #384]
0x0564	0x4C59    LDR	R4, [PC, #356]
0x0566	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 315 :: 		
0x0568	0x9C06    LDR	R4, [SP, #24]
0x056A	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 316 :: 		
0x056C	0xE040    B	L___Lib_UART_123_45_UARTx_Init_Advanced18
L___Lib_UART_123_45_UARTx_Init_Advanced17:
;__Lib_UART_123_45.c, 317 :: 		
0x056E	0x4C5E    LDR	R4, [PC, #376]
0x0570	0x45A3    CMP	R11, R4
0x0572	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced19
;__Lib_UART_123_45.c, 318 :: 		
0x0574	0x2501    MOVS	R5, #1
0x0576	0xB26D    SXTB	R5, R5
0x0578	0x4C5C    LDR	R4, [PC, #368]
0x057A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 319 :: 		
0x057C	0x4D5C    LDR	R5, [PC, #368]
0x057E	0x4C4D    LDR	R4, [PC, #308]
0x0580	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 320 :: 		
0x0582	0x4D5C    LDR	R5, [PC, #368]
0x0584	0x4C4D    LDR	R4, [PC, #308]
0x0586	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 321 :: 		
0x0588	0x4D5B    LDR	R5, [PC, #364]
0x058A	0x4C4E    LDR	R4, [PC, #312]
0x058C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 322 :: 		
0x058E	0x4D5B    LDR	R5, [PC, #364]
0x0590	0x4C4E    LDR	R4, [PC, #312]
0x0592	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 323 :: 		
0x0594	0x9C06    LDR	R4, [SP, #24]
0x0596	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 324 :: 		
0x0598	0xE02A    B	L___Lib_UART_123_45_UARTx_Init_Advanced20
L___Lib_UART_123_45_UARTx_Init_Advanced19:
;__Lib_UART_123_45.c, 325 :: 		
0x059A	0x4C59    LDR	R4, [PC, #356]
0x059C	0x45A3    CMP	R11, R4
0x059E	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced21
;__Lib_UART_123_45.c, 326 :: 		
0x05A0	0x2501    MOVS	R5, #1
0x05A2	0xB26D    SXTB	R5, R5
0x05A4	0x4C57    LDR	R4, [PC, #348]
0x05A6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 327 :: 		
0x05A8	0x4D57    LDR	R5, [PC, #348]
0x05AA	0x4C42    LDR	R4, [PC, #264]
0x05AC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 328 :: 		
0x05AE	0x4D57    LDR	R5, [PC, #348]
0x05B0	0x4C42    LDR	R4, [PC, #264]
0x05B2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 329 :: 		
0x05B4	0x4D56    LDR	R5, [PC, #344]
0x05B6	0x4C43    LDR	R4, [PC, #268]
0x05B8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 330 :: 		
0x05BA	0x4D56    LDR	R5, [PC, #344]
0x05BC	0x4C43    LDR	R4, [PC, #268]
0x05BE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 331 :: 		
0x05C0	0x9C06    LDR	R4, [SP, #24]
0x05C2	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 332 :: 		
0x05C4	0xE014    B	L___Lib_UART_123_45_UARTx_Init_Advanced22
L___Lib_UART_123_45_UARTx_Init_Advanced21:
;__Lib_UART_123_45.c, 333 :: 		
0x05C6	0x4C54    LDR	R4, [PC, #336]
0x05C8	0x45A3    CMP	R11, R4
0x05CA	0xD111    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced23
;__Lib_UART_123_45.c, 334 :: 		
0x05CC	0x2501    MOVS	R5, #1
0x05CE	0xB26D    SXTB	R5, R5
0x05D0	0x4C52    LDR	R4, [PC, #328]
0x05D2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 335 :: 		
0x05D4	0x4D52    LDR	R5, [PC, #328]
0x05D6	0x4C37    LDR	R4, [PC, #220]
0x05D8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 336 :: 		
0x05DA	0x4D52    LDR	R5, [PC, #328]
0x05DC	0x4C37    LDR	R4, [PC, #220]
0x05DE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 337 :: 		
0x05E0	0x4D51    LDR	R5, [PC, #324]
0x05E2	0x4C38    LDR	R4, [PC, #224]
0x05E4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 338 :: 		
0x05E6	0x4D51    LDR	R5, [PC, #324]
0x05E8	0x4C38    LDR	R4, [PC, #224]
0x05EA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 339 :: 		
0x05EC	0x9C06    LDR	R4, [SP, #24]
0x05EE	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 340 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced23:
L___Lib_UART_123_45_UARTx_Init_Advanced22:
L___Lib_UART_123_45_UARTx_Init_Advanced20:
L___Lib_UART_123_45_UARTx_Init_Advanced18:
L___Lib_UART_123_45_UARTx_Init_Advanced16:
;__Lib_UART_123_45.c, 342 :: 		
0x05F0	0xF8AD1004  STRH	R1, [SP, #4]
; module end address is: 24 (R6)
0x05F4	0xF8AD0008  STRH	R0, [SP, #8]
0x05F8	0x4630    MOV	R0, R6
0x05FA	0xF000F899  BL	_GPIO_Alternate_Function_Enable+0
0x05FE	0xF8BD0008  LDRH	R0, [SP, #8]
0x0602	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 344 :: 		
0x0606	0xF10B0510  ADD	R5, R11, #16
0x060A	0x2400    MOVS	R4, #0
0x060C	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 345 :: 		
0x060E	0xF10B0510  ADD	R5, R11, #16
0x0612	0x682C    LDR	R4, [R5, #0]
0x0614	0x430C    ORRS	R4, R1
; stop_bits end address is: 4 (R1)
0x0616	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 346 :: 		
0x0618	0xF10B050C  ADD	R5, R11, #12
0x061C	0x2400    MOVS	R4, #0
0x061E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 348 :: 		
0x0620	0xB118    CBZ	R0, L___Lib_UART_123_45_UARTx_Init_Advanced38
;__Lib_UART_123_45.c, 349 :: 		
0x0622	0xF4406080  ORR	R0, R0, #1024
0x0626	0xB280    UXTH	R0, R0
; parity end address is: 0 (R0)
;__Lib_UART_123_45.c, 350 :: 		
0x0628	0xE7FF    B	L___Lib_UART_123_45_UARTx_Init_Advanced24
L___Lib_UART_123_45_UARTx_Init_Advanced38:
;__Lib_UART_123_45.c, 348 :: 		
;__Lib_UART_123_45.c, 350 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced24:
;__Lib_UART_123_45.c, 352 :: 		
; parity start address is: 0 (R0)
0x062A	0xF10B050C  ADD	R5, R11, #12
0x062E	0x682C    LDR	R4, [R5, #0]
0x0630	0x4304    ORRS	R4, R0
; parity end address is: 0 (R0)
0x0632	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 354 :: 		
0x0634	0xF10B060C  ADD	R6, R11, #12
0x0638	0x2501    MOVS	R5, #1
0x063A	0x6834    LDR	R4, [R6, #0]
0x063C	0xF365344D  BFI	R4, R5, #13, #1
0x0640	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 355 :: 		
0x0642	0xF10B060C  ADD	R6, R11, #12
0x0646	0x2501    MOVS	R5, #1
0x0648	0x6834    LDR	R4, [R6, #0]
0x064A	0xF36504C3  BFI	R4, R5, #3, #1
0x064E	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 356 :: 		
0x0650	0xF10B060C  ADD	R6, R11, #12
0x0654	0x2501    MOVS	R5, #1
0x0656	0x6834    LDR	R4, [R6, #0]
0x0658	0xF3650482  BFI	R4, R5, #2, #1
0x065C	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 357 :: 		
0x065E	0xF10B0514  ADD	R5, R11, #20
0x0662	0x2400    MOVS	R4, #0
0x0664	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 362 :: 		
0x0666	0x9D03    LDR	R5, [SP, #12]
0x0668	0x2419    MOVS	R4, #25
0x066A	0x4365    MULS	R5, R4, R5
0x066C	0xEA4F048C  LSL	R4, R12, #2
; baud_rate end address is: 48 (R12)
0x0670	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45.c, 363 :: 		
0x0674	0x2464    MOVS	R4, #100
0x0676	0xFBB7F4F4  UDIV	R4, R7, R4
0x067A	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45.c, 365 :: 		
0x067C	0x0935    LSRS	R5, R6, #4
0x067E	0x2464    MOVS	R4, #100
0x0680	0x436C    MULS	R4, R5, R4
0x0682	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45.c, 366 :: 		
0x0684	0x0124    LSLS	R4, R4, #4
0x0686	0xF2040532  ADDW	R5, R4, #50
0x068A	0x2464    MOVS	R4, #100
0x068C	0xFBB5F4F4  UDIV	R4, R5, R4
0x0690	0xF004040F  AND	R4, R4, #15
0x0694	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45.c, 368 :: 		
0x0698	0xF10B0508  ADD	R5, R11, #8
; UART_Base end address is: 44 (R11)
0x069C	0xB2A4    UXTH	R4, R4
0x069E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 369 :: 		
L_end_UARTx_Init_Advanced:
0x06A0	0xF8DDE000  LDR	LR, [SP, #0]
0x06A4	0xB009    ADD	SP, SP, #36
0x06A6	0x4770    BX	LR
0x06A8	0x38004001  	USART1_SR+0
0x06AC	0x03384242  	RCC_APB2ENR+0
0x06B0	0x03A50000  	_UART1_Write+0
0x06B4	0x00902000  	_UART_Wr_Ptr+0
0x06B8	0xFFFFFFFF  	_UART1_Read+0
0x06BC	0x00942000  	_UART_Rd_Ptr+0
0x06C0	0xFFFFFFFF  	_UART1_Data_Ready+0
0x06C4	0x00982000  	_UART_Rdy_Ptr+0
0x06C8	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x06CC	0x009C2000  	_UART_Tx_Idle_Ptr+0
0x06D0	0x44004000  	USART2_SR+0
0x06D4	0x03C44242  	RCC_APB1ENR+0
0x06D8	0x03DD0000  	_UART2_Write+0
0x06DC	0xFFFFFFFF  	_UART2_Read+0
0x06E0	0xFFFFFFFF  	_UART2_Data_Ready+0
0x06E4	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x06E8	0x48004000  	USART3_SR+0
0x06EC	0x03C84242  	RCC_APB1ENR+0
0x06F0	0x01D90000  	_UART3_Write+0
0x06F4	0xFFFFFFFF  	_UART3_Read+0
0x06F8	0xFFFFFFFF  	_UART3_Data_Ready+0
0x06FC	0xFFFFFFFF  	_UART3_Tx_Idle+0
0x0700	0x4C004000  	UART4_SR+0
0x0704	0x03CC4242  	RCC_APB1ENR+0
0x0708	0x01BD0000  	_UART4_Write+0
0x070C	0xFFFFFFFF  	_UART4_Read+0
0x0710	0xFFFFFFFF  	_UART4_Data_Ready+0
0x0714	0xFFFFFFFF  	_UART4_Tx_Idle+0
0x0718	0x50004000  	UART5_SR+0
0x071C	0x03D04242  	RCC_APB1ENR+0
0x0720	0x01A10000  	_UART5_Write+0
0x0724	0xFFFFFFFF  	_UART5_Read+0
0x0728	0xFFFFFFFF  	_UART5_Data_Ready+0
0x072C	0xFFFFFFFF  	_UART5_Tx_Idle+0
; end of __Lib_UART_123_45_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_105_107.c, 452 :: 		
; RCC_Clocks start address is: 0 (R0)
0x02E0	0xB082    SUB	SP, SP, #8
0x02E2	0xF8CDE000  STR	LR, [SP, #0]
0x02E6	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_105_107.c, 455 :: 		
0x02E8	0x4619    MOV	R1, R3
0x02EA	0x9101    STR	R1, [SP, #4]
0x02EC	0xF7FFFF30  BL	_Get_Fosc_kHz+0
0x02F0	0xF24031E8  MOVW	R1, #1000
0x02F4	0xFB00F201  MUL	R2, R0, R1
0x02F8	0x9901    LDR	R1, [SP, #4]
0x02FA	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 458 :: 		
0x02FC	0x491F    LDR	R1, [PC, #124]
0x02FE	0x7809    LDRB	R1, [R1, #0]
0x0300	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x0304	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 459 :: 		
0x0306	0x491E    LDR	R1, [PC, #120]
0x0308	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x030A	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x030C	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 461 :: 		
0x030E	0x1D1A    ADDS	R2, R3, #4
0x0310	0x6819    LDR	R1, [R3, #0]
0x0312	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0314	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 463 :: 		
0x0316	0x4919    LDR	R1, [PC, #100]
0x0318	0x8809    LDRH	R1, [R1, #0]
0x031A	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x031E	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 464 :: 		
0x0320	0x4917    LDR	R1, [PC, #92]
0x0322	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0324	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0326	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 466 :: 		
0x0328	0xF2030208  ADDW	R2, R3, #8
0x032C	0x1D19    ADDS	R1, R3, #4
0x032E	0x6809    LDR	R1, [R1, #0]
0x0330	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0332	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 468 :: 		
0x0334	0x4911    LDR	R1, [PC, #68]
0x0336	0x8809    LDRH	R1, [R1, #0]
0x0338	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x033C	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 469 :: 		
0x033E	0x4910    LDR	R1, [PC, #64]
0x0340	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0342	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0344	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 471 :: 		
0x0346	0xF203020C  ADDW	R2, R3, #12
0x034A	0x1D19    ADDS	R1, R3, #4
0x034C	0x6809    LDR	R1, [R1, #0]
0x034E	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0350	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 473 :: 		
0x0352	0x490A    LDR	R1, [PC, #40]
0x0354	0x8809    LDRH	R1, [R1, #0]
0x0356	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x035A	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 474 :: 		
0x035C	0x4909    LDR	R1, [PC, #36]
0x035E	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0360	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x0362	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 476 :: 		
0x0364	0xF2030210  ADDW	R2, R3, #16
0x0368	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x036C	0x6809    LDR	R1, [R1, #0]
0x036E	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x0372	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 477 :: 		
L_end_RCC_GetClocksFrequency:
0x0374	0xF8DDE000  LDR	LR, [SP, #0]
0x0378	0xB002    ADD	SP, SP, #8
0x037A	0x4770    BX	LR
0x037C	0x10044002  	RCC_CFGRbits+0
0x0380	0x25A40000  	__Lib_System_105_107_APBAHBPrescTable+0
0x0384	0x0AB20000  	__Lib_System_105_107_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0150	0x4801    LDR	R0, [PC, #4]
0x0152	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0154	0x4770    BX	LR
0x0156	0xBF00    NOP
0x0158	0x00842000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
easymx_v7_STM32F107VC__log_init2:
;__em_f107vc_log.c, 30 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
; baud start address is: 0 (R0)
0x1440	0xB081    SUB	SP, SP, #4
0x1442	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 32 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x1446	0x4909    LDR	R1, [PC, #36]
0x1448	0xB402    PUSH	(R1)
0x144A	0xF2400300  MOVW	R3, #0
0x144E	0xF2400200  MOVW	R2, #0
0x1452	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x1456	0xF7FFFC83  BL	_UART2_Init_Advanced+0
0x145A	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 33 :: 		logger = UART2_Write;
0x145C	0x4A04    LDR	R2, [PC, #16]
0x145E	0x4905    LDR	R1, [PC, #20]
0x1460	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 34 :: 		return 0;
0x1462	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 35 :: 		}
L_end__log_init2:
0x1464	0xF8DDE000  LDR	LR, [SP, #0]
0x1468	0xB001    ADD	SP, SP, #4
0x146A	0x4770    BX	LR
0x146C	0x24280000  	__GPIO_MODULE_USART2_PD56+0
0x1470	0x03DD0000  	_UART2_Write+0
0x1474	0x00802000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init2
_UART2_Init_Advanced:
;__Lib_UART_123_45.c, 378 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x0D60	0xB081    SUB	SP, SP, #4
0x0D62	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x0D66	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 380 :: 		
0x0D68	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x0D6A	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x0D6C	0xB408    PUSH	(R3)
0x0D6E	0xB293    UXTH	R3, R2
0x0D70	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x0D72	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x0D74	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x0D76	0xF7FFFBB9  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x0D7A	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 381 :: 		
L_end_UART2_Init_Advanced:
0x0D7C	0xF8DDE000  LDR	LR, [SP, #0]
0x0D80	0xB001    ADD	SP, SP, #4
0x0D82	0x4770    BX	LR
0x0D84	0x44004000  	USART2_SR+0
; end of _UART2_Init_Advanced
easymx_v7_STM32F107VC__log_initUartA:
;__em_f107vc_log.c, 37 :: 		static T_mikrobus_ret _log_initUartA(uint32_t baud)
; baud start address is: 0 (R0)
0x1830	0xB081    SUB	SP, SP, #4
0x1832	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 39 :: 		UART1_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10);
0x1836	0x4909    LDR	R1, [PC, #36]
0x1838	0xB402    PUSH	(R1)
0x183A	0xF2400300  MOVW	R3, #0
0x183E	0xF2400200  MOVW	R2, #0
0x1842	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x1846	0xF7FFF991  BL	_UART1_Init_Advanced+0
0x184A	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 40 :: 		logger = UART1_Write;
0x184C	0x4A04    LDR	R2, [PC, #16]
0x184E	0x4905    LDR	R1, [PC, #20]
0x1850	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 41 :: 		return 0;
0x1852	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 42 :: 		}
L_end__log_initUartA:
0x1854	0xF8DDE000  LDR	LR, [SP, #0]
0x1858	0xB001    ADD	SP, SP, #4
0x185A	0x4770    BX	LR
0x185C	0x23BC0000  	__GPIO_MODULE_USART1_PA9_10+0
0x1860	0x03A50000  	_UART1_Write+0
0x1864	0x00802000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartA
_UART1_Init_Advanced:
;__Lib_UART_123_45.c, 372 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x0B6C	0xB081    SUB	SP, SP, #4
0x0B6E	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x0B72	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 374 :: 		
0x0B74	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x0B76	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x0B78	0xB408    PUSH	(R3)
0x0B7A	0xB293    UXTH	R3, R2
0x0B7C	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x0B7E	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x0B80	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x0B82	0xF7FFFCB3  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x0B86	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 375 :: 		
L_end_UART1_Init_Advanced:
0x0B88	0xF8DDE000  LDR	LR, [SP, #0]
0x0B8C	0xB001    ADD	SP, SP, #4
0x0B8E	0x4770    BX	LR
0x0B90	0x38004001  	USART1_SR+0
; end of _UART1_Init_Advanced
easymx_v7_STM32F107VC__log_initUartB:
;__em_f107vc_log.c, 44 :: 		static T_mikrobus_ret _log_initUartB(uint32_t baud)
; baud start address is: 0 (R0)
0x1868	0xB081    SUB	SP, SP, #4
0x186A	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 46 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x186E	0x4909    LDR	R1, [PC, #36]
0x1870	0xB402    PUSH	(R1)
0x1872	0xF2400300  MOVW	R3, #0
0x1876	0xF2400200  MOVW	R2, #0
0x187A	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x187E	0xF7FFFA6F  BL	_UART2_Init_Advanced+0
0x1882	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 47 :: 		logger = UART2_Write;
0x1884	0x4A04    LDR	R2, [PC, #16]
0x1886	0x4905    LDR	R1, [PC, #20]
0x1888	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 48 :: 		return 0;
0x188A	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 49 :: 		}
L_end__log_initUartB:
0x188C	0xF8DDE000  LDR	LR, [SP, #0]
0x1890	0xB001    ADD	SP, SP, #4
0x1892	0x4770    BX	LR
0x1894	0x24280000  	__GPIO_MODULE_USART2_PD56+0
0x1898	0x03DD0000  	_UART2_Write+0
0x189C	0x00802000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartB
_applicationInit:
;Click_Pressure2_STM.c, 42 :: 		void applicationInit()
0x1FB8	0xB081    SUB	SP, SP, #4
0x1FBA	0xF8CDE000  STR	LR, [SP, #0]
;Click_Pressure2_STM.c, 44 :: 		pressure2_spiDriverInit( (T_PRESSURE2_P)&_MIKROBUS1_GPIO, (T_PRESSURE2_P)&_MIKROBUS1_SPI );
0x1FBE	0x490A    LDR	R1, [PC, #40]
0x1FC0	0x480A    LDR	R0, [PC, #40]
0x1FC2	0xF7FFFE5F  BL	_pressure2_spiDriverInit+0
;Click_Pressure2_STM.c, 45 :: 		pressure2_init();
0x1FC6	0xF7FFFE31  BL	_pressure2_init+0
;Click_Pressure2_STM.c, 46 :: 		Delay_ms( 300 );
0x1FCA	0xF64E677F  MOVW	R7, #61055
0x1FCE	0xF2C00736  MOVT	R7, #54
L_applicationInit2:
0x1FD2	0x1E7F    SUBS	R7, R7, #1
0x1FD4	0xD1FD    BNE	L_applicationInit2
0x1FD6	0xBF00    NOP
0x1FD8	0xBF00    NOP
0x1FDA	0xBF00    NOP
0x1FDC	0xBF00    NOP
0x1FDE	0xBF00    NOP
;Click_Pressure2_STM.c, 47 :: 		}
L_end_applicationInit:
0x1FE0	0xF8DDE000  LDR	LR, [SP, #0]
0x1FE4	0xB001    ADD	SP, SP, #4
0x1FE6	0x4770    BX	LR
0x1FE8	0x25BC0000  	__MIKROBUS1_SPI+0
0x1FEC	0x25000000  	__MIKROBUS1_GPIO+0
; end of _applicationInit
_pressure2_spiDriverInit:
;__pressure2_driver.c, 118 :: 		void pressure2_spiDriverInit(T_PRESSURE2_P gpioObj, T_PRESSURE2_P spiObj)
; spiObj start address is: 4 (R1)
; gpioObj start address is: 0 (R0)
0x1C84	0xB081    SUB	SP, SP, #4
0x1C86	0xF8CDE000  STR	LR, [SP, #0]
0x1C8A	0x4603    MOV	R3, R0
; spiObj end address is: 4 (R1)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 12 (R3)
; spiObj start address is: 4 (R1)
;__pressure2_driver.c, 120 :: 		hal_spiMap( (T_HAL_P)spiObj );
0x1C8C	0x4608    MOV	R0, R1
; spiObj end address is: 4 (R1)
0x1C8E	0xF7FFF91F  BL	__pressure2_driver_hal_spiMap+0
;__pressure2_driver.c, 121 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x1C92	0x4618    MOV	R0, R3
; gpioObj end address is: 12 (R3)
0x1C94	0xF7FFF92E  BL	__pressure2_driver_hal_gpioMap+0
;__pressure2_driver.c, 123 :: 		hal_gpio_csSet( 1 );
0x1C98	0x2001    MOVS	R0, #1
0x1C9A	0x4C03    LDR	R4, [PC, #12]
0x1C9C	0x6824    LDR	R4, [R4, #0]
0x1C9E	0x47A0    BLX	R4
;__pressure2_driver.c, 124 :: 		}
L_end_pressure2_spiDriverInit:
0x1CA0	0xF8DDE000  LDR	LR, [SP, #0]
0x1CA4	0xB001    ADD	SP, SP, #4
0x1CA6	0x4770    BX	LR
0x1CA8	0x00A82000  	__pressure2_driver_hal_gpio_csSet+0
; end of _pressure2_spiDriverInit
easymx_v7_STM32F107VC__setAN_1:
;__em_f107vc_gpio.c, 43 :: 		static void _setAN_1  (uint8_t value) 	{ GPIOA_ODR.B4  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x13C0	0x4901    LDR	R1, [PC, #4]
0x13C2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_1:
0x13C4	0x4770    BX	LR
0x13C6	0xBF00    NOP
0x13C8	0x01904221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_1
easymx_v7_STM32F107VC__setRST_1:
;__em_f107vc_gpio.c, 44 :: 		static void _setRST_1 (uint8_t value) 	{ GPIOC_ODR.B2  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x13CC	0x4901    LDR	R1, [PC, #4]
0x13CE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_1:
0x13D0	0x4770    BX	LR
0x13D2	0xBF00    NOP
0x13D4	0x01884222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_1
easymx_v7_STM32F107VC__setCS_1:
;__em_f107vc_gpio.c, 45 :: 		static void _setCS_1  (uint8_t value) 	{ GPIOD_ODR.B13 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x13A8	0x4901    LDR	R1, [PC, #4]
0x13AA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_1:
0x13AC	0x4770    BX	LR
0x13AE	0xBF00    NOP
0x13B0	0x81B44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_1
easymx_v7_STM32F107VC__setSCK_1:
;__em_f107vc_gpio.c, 46 :: 		static void _setSCK_1 (uint8_t value) 	{ GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x13B4	0x4901    LDR	R1, [PC, #4]
0x13B6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_1:
0x13B8	0x4770    BX	LR
0x13BA	0xBF00    NOP
0x13BC	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_1
easymx_v7_STM32F107VC__setMISO_1:
;__em_f107vc_gpio.c, 47 :: 		static void _setMISO_1(uint8_t value) 	{ GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x13F0	0x4901    LDR	R1, [PC, #4]
0x13F2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_1:
0x13F4	0x4770    BX	LR
0x13F6	0xBF00    NOP
0x13F8	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_1
easymx_v7_STM32F107VC__setMOSI_1:
;__em_f107vc_gpio.c, 48 :: 		static void _setMOSI_1(uint8_t value) 	{ GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x13FC	0x4901    LDR	R1, [PC, #4]
0x13FE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_1:
0x1400	0x4770    BX	LR
0x1402	0xBF00    NOP
0x1404	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_1
easymx_v7_STM32F107VC__setPWM_1:
;__em_f107vc_gpio.c, 49 :: 		static void _setPWM_1 (uint8_t value) 	{ GPIOA_ODR.B0  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x13D8	0x4901    LDR	R1, [PC, #4]
0x13DA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_1:
0x13DC	0x4770    BX	LR
0x13DE	0xBF00    NOP
0x13E0	0x01804221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_1
easymx_v7_STM32F107VC__setINT_1:
;__em_f107vc_gpio.c, 50 :: 		static void _setINT_1 (uint8_t value) 	{ GPIOD_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x13E4	0x4901    LDR	R1, [PC, #4]
0x13E6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_1:
0x13E8	0x4770    BX	LR
0x13EA	0xBF00    NOP
0x13EC	0x81A84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_1
easymx_v7_STM32F107VC__setRX_1:
;__em_f107vc_gpio.c, 51 :: 		static void _setRX_1  (uint8_t value) 	{ GPIOD_ODR.B9  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1918	0x4901    LDR	R1, [PC, #4]
0x191A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_1:
0x191C	0x4770    BX	LR
0x191E	0xBF00    NOP
0x1920	0x81A44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_1
easymx_v7_STM32F107VC__setTX_1:
;__em_f107vc_gpio.c, 52 :: 		static void _setTX_1  (uint8_t value) 	{ GPIOD_ODR.B8  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x190C	0x4901    LDR	R1, [PC, #4]
0x190E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_1:
0x1910	0x4770    BX	LR
0x1912	0xBF00    NOP
0x1914	0x81A04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_1
easymx_v7_STM32F107VC__setSCL_1:
;__em_f107vc_gpio.c, 53 :: 		static void _setSCL_1 (uint8_t value) 	{ GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1900	0x4901    LDR	R1, [PC, #4]
0x1902	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_1:
0x1904	0x4770    BX	LR
0x1906	0xBF00    NOP
0x1908	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_1
easymx_v7_STM32F107VC__setSDA_1:
;__em_f107vc_gpio.c, 54 :: 		static void _setSDA_1 (uint8_t value) 	{ GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1924	0x4901    LDR	R1, [PC, #4]
0x1926	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_1:
0x1928	0x4770    BX	LR
0x192A	0xBF00    NOP
0x192C	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_1
easymx_v7_STM32F107VC__setAN_2:
;__em_f107vc_gpio.c, 68 :: 		static void _setAN_2  (uint8_t value)   { GPIOA_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1948	0x4901    LDR	R1, [PC, #4]
0x194A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_2:
0x194C	0x4770    BX	LR
0x194E	0xBF00    NOP
0x1950	0x01944221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_2
easymx_v7_STM32F107VC__setRST_2:
;__em_f107vc_gpio.c, 69 :: 		static void _setRST_2 (uint8_t value)   { GPIOC_ODR.B3  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x193C	0x4901    LDR	R1, [PC, #4]
0x193E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_2:
0x1940	0x4770    BX	LR
0x1942	0xBF00    NOP
0x1944	0x018C4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_2
easymx_v7_STM32F107VC__setCS_2:
;__em_f107vc_gpio.c, 70 :: 		static void _setCS_2  (uint8_t value)   { GPIOD_ODR.B14 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1930	0x4901    LDR	R1, [PC, #4]
0x1932	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_2:
0x1934	0x4770    BX	LR
0x1936	0xBF00    NOP
0x1938	0x81B84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_2
easymx_v7_STM32F107VC__setSCK_2:
;__em_f107vc_gpio.c, 71 :: 		static void _setSCK_2 (uint8_t value)   { GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x18F4	0x4901    LDR	R1, [PC, #4]
0x18F6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_2:
0x18F8	0x4770    BX	LR
0x18FA	0xBF00    NOP
0x18FC	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_2
easymx_v7_STM32F107VC__setMISO_2:
;__em_f107vc_gpio.c, 72 :: 		static void _setMISO_2(uint8_t value)   { GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x18A0	0x4901    LDR	R1, [PC, #4]
0x18A2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_2:
0x18A4	0x4770    BX	LR
0x18A6	0xBF00    NOP
0x18A8	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_2
easymx_v7_STM32F107VC__setMOSI_2:
;__em_f107vc_gpio.c, 73 :: 		static void _setMOSI_2(uint8_t value)   { GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x18C4	0x4901    LDR	R1, [PC, #4]
0x18C6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_2:
0x18C8	0x4770    BX	LR
0x18CA	0xBF00    NOP
0x18CC	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_2
easymx_v7_STM32F107VC__setPWM_2:
;__em_f107vc_gpio.c, 74 :: 		static void _setPWM_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x18E8	0x4901    LDR	R1, [PC, #4]
0x18EA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_2:
0x18EC	0x4770    BX	LR
0x18EE	0xBF00    NOP
0x18F0	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_2
easymx_v7_STM32F107VC__setINT_2:
;__em_f107vc_gpio.c, 75 :: 		static void _setINT_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x18DC	0x4901    LDR	R1, [PC, #4]
0x18DE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_2:
0x18E0	0x4770    BX	LR
0x18E2	0xBF00    NOP
0x18E4	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_2
easymx_v7_STM32F107VC__setRX_2:
;__em_f107vc_gpio.c, 76 :: 		static void _setRX_2  (uint8_t value)   { GPIOD_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x18D0	0x4901    LDR	R1, [PC, #4]
0x18D2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_2:
0x18D4	0x4770    BX	LR
0x18D6	0xBF00    NOP
0x18D8	0x81984222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_2
easymx_v7_STM32F107VC__setTX_2:
;__em_f107vc_gpio.c, 77 :: 		static void _setTX_2  (uint8_t value)   { GPIOD_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x18AC	0x4901    LDR	R1, [PC, #4]
0x18AE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_2:
0x18B0	0x4770    BX	LR
0x18B2	0xBF00    NOP
0x18B4	0x81944222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_2
easymx_v7_STM32F107VC__setSCL_2:
;__em_f107vc_gpio.c, 78 :: 		static void _setSCL_2 (uint8_t value)   { GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x18B8	0x4901    LDR	R1, [PC, #4]
0x18BA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_2:
0x18BC	0x4770    BX	LR
0x18BE	0xBF00    NOP
0x18C0	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_2
easymx_v7_STM32F107VC__setSDA_2:
;__em_f107vc_gpio.c, 79 :: 		static void _setSDA_2 (uint8_t value)   { GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0EE8	0x4901    LDR	R1, [PC, #4]
0x0EEA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_2:
0x0EEC	0x4770    BX	LR
0x0EEE	0xBF00    NOP
0x0EF0	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_2
__pressure2_driver_hal_spiMap:
;__hal_stm32.c, 33 :: 		static void hal_spiMap(T_HAL_P spiObj)
; spiObj start address is: 0 (R0)
; spiObj end address is: 0 (R0)
; spiObj start address is: 0 (R0)
;__hal_stm32.c, 37 :: 		fp_spiWrite = tmp->spiWrite;
0x0ED0	0x6802    LDR	R2, [R0, #0]
0x0ED2	0x4903    LDR	R1, [PC, #12]
0x0ED4	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 38 :: 		fp_spiRead  = tmp->spiRead;
0x0ED6	0x1D01    ADDS	R1, R0, #4
; spiObj end address is: 0 (R0)
0x0ED8	0x680A    LDR	R2, [R1, #0]
0x0EDA	0x4902    LDR	R1, [PC, #8]
0x0EDC	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 39 :: 		}
L_end_hal_spiMap:
0x0EDE	0x4770    BX	LR
0x0EE0	0x00A42000  	__pressure2_driver_fp_spiWrite+0
0x0EE4	0x00A02000  	__pressure2_driver_fp_spiRead+0
; end of __pressure2_driver_hal_spiMap
__pressure2_driver_hal_gpioMap:
;__pressure2_hal.c, 321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
; gpioObj start address is: 0 (R0)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 0 (R0)
;__pressure2_hal.c, 365 :: 		hal_gpio_csSet = tmp->gpioSet[ __CS_PIN_OUTPUT__ ];
0x0EF4	0xF2000108  ADDW	R1, R0, #8
; gpioObj end address is: 0 (R0)
0x0EF8	0x680A    LDR	R2, [R1, #0]
0x0EFA	0x4901    LDR	R1, [PC, #4]
0x0EFC	0x600A    STR	R2, [R1, #0]
;__pressure2_hal.c, 397 :: 		}
L_end_hal_gpioMap:
0x0EFE	0x4770    BX	LR
0x0F00	0x00A82000  	__pressure2_driver_hal_gpio_csSet+0
; end of __pressure2_driver_hal_gpioMap
_pressure2_init:
;__pressure2_driver.c, 242 :: 		uint8_t pressure2_init()
0x1C2C	0xB083    SUB	SP, SP, #12
0x1C2E	0xF8CDE000  STR	LR, [SP, #0]
;__pressure2_driver.c, 245 :: 		uint8_t i = 0;
;__pressure2_driver.c, 246 :: 		pressure2_reset();
0x1C32	0xF7FFF99B  BL	_pressure2_reset+0
;__pressure2_driver.c, 247 :: 		Delay_1ms();
0x1C36	0xF7FEFF63  BL	_Delay_1ms+0
;__pressure2_driver.c, 249 :: 		for ( i = 0; i < 8; i++ )
; i start address is: 8 (R2)
0x1C3A	0x2200    MOVS	R2, #0
; i end address is: 8 (R2)
L_pressure2_init26:
; i start address is: 8 (R2)
0x1C3C	0x2A08    CMP	R2, #8
0x1C3E	0xD20F    BCS	L_pressure2_init27
;__pressure2_driver.c, 251 :: 		_sensorCoefficients[ i ] = pressure2_readCoefficient( i );
0x1C40	0x0051    LSLS	R1, R2, #1
0x1C42	0x480E    LDR	R0, [PC, #56]
0x1C44	0x1840    ADDS	R0, R0, R1
0x1C46	0x9002    STR	R0, [SP, #8]
0x1C48	0xF88D2004  STRB	R2, [SP, #4]
0x1C4C	0xB2D0    UXTB	R0, R2
0x1C4E	0xF7FFF9C1  BL	_pressure2_readCoefficient+0
0x1C52	0xF89D2004  LDRB	R2, [SP, #4]
0x1C56	0x9902    LDR	R1, [SP, #8]
0x1C58	0x8008    STRH	R0, [R1, #0]
;__pressure2_driver.c, 249 :: 		for ( i = 0; i < 8; i++ )
0x1C5A	0x1C52    ADDS	R2, R2, #1
0x1C5C	0xB2D2    UXTB	R2, R2
;__pressure2_driver.c, 252 :: 		}
; i end address is: 8 (R2)
0x1C5E	0xE7ED    B	L_pressure2_init26
L_pressure2_init27:
;__pressure2_driver.c, 253 :: 		p_crc = _sensorCoefficients[ 7 ];
0x1C60	0x4807    LDR	R0, [PC, #28]
; p_crc start address is: 20 (R5)
0x1C62	0x8805    LDRH	R5, [R0, #0]
;__pressure2_driver.c, 254 :: 		n_crc = _crcMS5803();
0x1C64	0xF7FFFA44  BL	__pressure2_driver__crcMS5803+0
;__pressure2_driver.c, 256 :: 		if( p_crc != n_crc )
0x1C68	0x4285    CMP	R5, R0
0x1C6A	0xD001    BEQ	L_pressure2_init29
; p_crc end address is: 20 (R5)
;__pressure2_driver.c, 258 :: 		return _PRESSURE2_FALSE;
0x1C6C	0x2000    MOVS	R0, #0
0x1C6E	0xE000    B	L_end_pressure2_init
;__pressure2_driver.c, 259 :: 		}
L_pressure2_init29:
;__pressure2_driver.c, 262 :: 		return _PRESSURE2_TRUE;
0x1C70	0x2001    MOVS	R0, #1
;__pressure2_driver.c, 264 :: 		}
L_end_pressure2_init:
0x1C72	0xF8DDE000  LDR	LR, [SP, #0]
0x1C76	0xB003    ADD	SP, SP, #12
0x1C78	0x4770    BX	LR
0x1C7A	0xBF00    NOP
0x1C7C	0x00AC2000  	__pressure2_driver__sensorCoefficients+0
0x1C80	0x00BA2000  	__pressure2_driver__sensorCoefficients+14
; end of _pressure2_init
_pressure2_reset:
;__pressure2_driver.c, 149 :: 		void pressure2_reset()
0x0F6C	0xB081    SUB	SP, SP, #4
0x0F6E	0xF8CDE000  STR	LR, [SP, #0]
;__pressure2_driver.c, 151 :: 		pressure2_writeBytes( _PRESSURE2_CMD_RESET );
0x0F72	0x201E    MOVS	R0, #30
0x0F74	0xF7FFFDAC  BL	_pressure2_writeBytes+0
;__pressure2_driver.c, 152 :: 		Delay_1ms();
0x0F78	0xF7FFFDC2  BL	_Delay_1ms+0
;__pressure2_driver.c, 153 :: 		}
L_end_pressure2_reset:
0x0F7C	0xF8DDE000  LDR	LR, [SP, #0]
0x0F80	0xB001    ADD	SP, SP, #4
0x0F82	0x4770    BX	LR
; end of _pressure2_reset
_pressure2_writeBytes:
;__pressure2_driver.c, 165 :: 		void pressure2_writeBytes( uint8_t cmd )
; cmd start address is: 0 (R0)
0x0AD0	0xB082    SUB	SP, SP, #8
0x0AD2	0xF8CDE000  STR	LR, [SP, #0]
; cmd end address is: 0 (R0)
; cmd start address is: 0 (R0)
;__pressure2_driver.c, 168 :: 		wData = cmd;
0x0AD6	0xF88D0004  STRB	R0, [SP, #4]
; cmd end address is: 0 (R0)
;__pressure2_driver.c, 170 :: 		hal_gpio_csSet( 0 );
0x0ADA	0x2000    MOVS	R0, #0
0x0ADC	0x4C07    LDR	R4, [PC, #28]
0x0ADE	0x6824    LDR	R4, [R4, #0]
0x0AE0	0x47A0    BLX	R4
;__pressure2_driver.c, 171 :: 		hal_spiWrite( &wData, 1 );
0x0AE2	0xA901    ADD	R1, SP, #4
0x0AE4	0x4608    MOV	R0, R1
0x0AE6	0x2101    MOVS	R1, #1
0x0AE8	0xF7FFFFA4  BL	__pressure2_driver_hal_spiWrite+0
;__pressure2_driver.c, 172 :: 		hal_gpio_csSet( 1 );
0x0AEC	0x2001    MOVS	R0, #1
0x0AEE	0x4C03    LDR	R4, [PC, #12]
0x0AF0	0x6824    LDR	R4, [R4, #0]
0x0AF2	0x47A0    BLX	R4
;__pressure2_driver.c, 173 :: 		}
L_end_pressure2_writeBytes:
0x0AF4	0xF8DDE000  LDR	LR, [SP, #0]
0x0AF8	0xB002    ADD	SP, SP, #8
0x0AFA	0x4770    BX	LR
0x0AFC	0x00A82000  	__pressure2_driver_hal_gpio_csSet+0
; end of _pressure2_writeBytes
__pressure2_driver_hal_spiWrite:
;__hal_stm32.c, 41 :: 		static void hal_spiWrite(uint8_t *pBuf, uint16_t nBytes)
; nBytes start address is: 4 (R1)
; pBuf start address is: 0 (R0)
0x0A34	0xB083    SUB	SP, SP, #12
0x0A36	0xF8CDE000  STR	LR, [SP, #0]
0x0A3A	0xB28A    UXTH	R2, R1
; nBytes end address is: 4 (R1)
; pBuf end address is: 0 (R0)
; pBuf start address is: 0 (R0)
; nBytes start address is: 8 (R2)
;__hal_stm32.c, 43 :: 		uint8_t *ptr = pBuf;
; ptr start address is: 4 (R1)
0x0A3C	0x4601    MOV	R1, R0
; pBuf end address is: 0 (R0)
; nBytes end address is: 8 (R2)
; ptr end address is: 4 (R1)
0x0A3E	0xB290    UXTH	R0, R2
;__hal_stm32.c, 44 :: 		while( nBytes-- )
L___pressure2_driver_hal_spiWrite0:
; ptr start address is: 4 (R1)
; nBytes start address is: 0 (R0)
; nBytes start address is: 0 (R0)
0x0A40	0xB283    UXTH	R3, R0
0x0A42	0x1E42    SUBS	R2, R0, #1
0x0A44	0xB290    UXTH	R0, R2
; nBytes end address is: 0 (R0)
0x0A46	0xB16B    CBZ	R3, L___pressure2_driver_hal_spiWrite1
; nBytes end address is: 0 (R0)
;__hal_stm32.c, 45 :: 		fp_spiWrite( *( ptr++ ) );
; nBytes start address is: 0 (R0)
0x0A48	0x780A    LDRB	R2, [R1, #0]
0x0A4A	0xB2D4    UXTB	R4, R2
0x0A4C	0xF8AD0004  STRH	R0, [SP, #4]
0x0A50	0x9102    STR	R1, [SP, #8]
0x0A52	0xB2A0    UXTH	R0, R4
0x0A54	0x4C05    LDR	R4, [PC, #20]
0x0A56	0x6824    LDR	R4, [R4, #0]
0x0A58	0x47A0    BLX	R4
0x0A5A	0x9902    LDR	R1, [SP, #8]
0x0A5C	0xF8BD0004  LDRH	R0, [SP, #4]
0x0A60	0x1C49    ADDS	R1, R1, #1
; nBytes end address is: 0 (R0)
; ptr end address is: 4 (R1)
0x0A62	0xE7ED    B	L___pressure2_driver_hal_spiWrite0
L___pressure2_driver_hal_spiWrite1:
;__hal_stm32.c, 46 :: 		}
L_end_hal_spiWrite:
0x0A64	0xF8DDE000  LDR	LR, [SP, #0]
0x0A68	0xB003    ADD	SP, SP, #12
0x0A6A	0x4770    BX	LR
0x0A6C	0x00A42000  	__pressure2_driver_fp_spiWrite+0
; end of __pressure2_driver_hal_spiWrite
_SPI1_Write:
;__Lib_SPI_123.c, 78 :: 		
; data_out start address is: 0 (R0)
0x0388	0xB081    SUB	SP, SP, #4
0x038A	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 79 :: 		
0x038E	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x0390	0x4803    LDR	R0, [PC, #12]
0x0392	0xF7FFFEE3  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 80 :: 		
L_end_SPI1_Write:
0x0396	0xF8DDE000  LDR	LR, [SP, #0]
0x039A	0xB001    ADD	SP, SP, #4
0x039C	0x4770    BX	LR
0x039E	0xBF00    NOP
0x03A0	0x30004001  	SPI1_CR1+0
; end of _SPI1_Write
__Lib_SPI_123_SPIx_Read:
;__Lib_SPI_123.c, 67 :: 		
; data_out start address is: 4 (R1)
; base start address is: 0 (R0)
0x015C	0xB081    SUB	SP, SP, #4
; data_out end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; data_out start address is: 4 (R1)
;__Lib_SPI_123.c, 68 :: 		
0x015E	0xF200020C  ADDW	R2, R0, #12
0x0162	0x6011    STR	R1, [R2, #0]
; data_out end address is: 4 (R1)
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 69 :: 		
L___Lib_SPI_123_SPIx_Read0:
; base start address is: 0 (R0)
0x0164	0xF2000208  ADDW	R2, R0, #8
0x0168	0x6813    LDR	R3, [R2, #0]
0x016A	0xF3C30200  UBFX	R2, R3, #0, #1
0x016E	0xB902    CBNZ	R2, L___Lib_SPI_123_SPIx_Read1
;__Lib_SPI_123.c, 70 :: 		
0x0170	0xE7F8    B	L___Lib_SPI_123_SPIx_Read0
L___Lib_SPI_123_SPIx_Read1:
;__Lib_SPI_123.c, 71 :: 		
0x0172	0xF200020C  ADDW	R2, R0, #12
; base end address is: 0 (R0)
0x0176	0x6812    LDR	R2, [R2, #0]
0x0178	0xB290    UXTH	R0, R2
;__Lib_SPI_123.c, 72 :: 		
L_end_SPIx_Read:
0x017A	0xB001    ADD	SP, SP, #4
0x017C	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Read
_SPI2_Write:
;__Lib_SPI_123.c, 103 :: 		
; data_out start address is: 0 (R0)
0x0484	0xB081    SUB	SP, SP, #4
0x0486	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 104 :: 		
0x048A	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x048C	0x4803    LDR	R0, [PC, #12]
0x048E	0xF7FFFE65  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 105 :: 		
L_end_SPI2_Write:
0x0492	0xF8DDE000  LDR	LR, [SP, #0]
0x0496	0xB001    ADD	SP, SP, #4
0x0498	0x4770    BX	LR
0x049A	0xBF00    NOP
0x049C	0x38004000  	SPI2_CR1+0
; end of _SPI2_Write
_SPI3_Write:
;__Lib_SPI_123.c, 129 :: 		
; data_out start address is: 0 (R0)
0x03C0	0xB081    SUB	SP, SP, #4
0x03C2	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 130 :: 		
0x03C6	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x03C8	0x4803    LDR	R0, [PC, #12]
0x03CA	0xF7FFFEC7  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 131 :: 		
L_end_SPI3_Write:
0x03CE	0xF8DDE000  LDR	LR, [SP, #0]
0x03D2	0xB001    ADD	SP, SP, #4
0x03D4	0x4770    BX	LR
0x03D6	0xBF00    NOP
0x03D8	0x3C004000  	SPI3_CR1+0
; end of _SPI3_Write
_UART1_Write:
;__Lib_UART_123_45.c, 41 :: 		
; _data start address is: 0 (R0)
0x03A4	0xB081    SUB	SP, SP, #4
0x03A6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 42 :: 		
0x03AA	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x03AC	0x4803    LDR	R0, [PC, #12]
0x03AE	0xF7FFFEE7  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 43 :: 		
L_end_UART1_Write:
0x03B2	0xF8DDE000  LDR	LR, [SP, #0]
0x03B6	0xB001    ADD	SP, SP, #4
0x03B8	0x4770    BX	LR
0x03BA	0xBF00    NOP
0x03BC	0x38004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_45_UARTx_Write:
;__Lib_UART_123_45.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0180	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x0182	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x0186	0x4601    MOV	R1, R0
0x0188	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45.c, 36 :: 		
L___Lib_UART_123_45_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x018C	0x680B    LDR	R3, [R1, #0]
0x018E	0xF3C312C0  UBFX	R2, R3, #7, #1
0x0192	0xB902    CBNZ	R2, L___Lib_UART_123_45_UARTx_Write1
;__Lib_UART_123_45.c, 37 :: 		
0x0194	0xE7FA    B	L___Lib_UART_123_45_UARTx_Write0
L___Lib_UART_123_45_UARTx_Write1:
;__Lib_UART_123_45.c, 38 :: 		
0x0196	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x0198	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45.c, 39 :: 		
L_end_UARTx_Write:
0x019A	0xB001    ADD	SP, SP, #4
0x019C	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write
_UART2_Write:
;__Lib_UART_123_45.c, 45 :: 		
; _data start address is: 0 (R0)
0x03DC	0xB081    SUB	SP, SP, #4
0x03DE	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 46 :: 		
0x03E2	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x03E4	0x4803    LDR	R0, [PC, #12]
0x03E6	0xF7FFFECB  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 47 :: 		
L_end_UART2_Write:
0x03EA	0xF8DDE000  LDR	LR, [SP, #0]
0x03EE	0xB001    ADD	SP, SP, #4
0x03F0	0x4770    BX	LR
0x03F2	0xBF00    NOP
0x03F4	0x44004000  	USART2_SR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_123_45.c, 49 :: 		
; _data start address is: 0 (R0)
0x01D8	0xB081    SUB	SP, SP, #4
0x01DA	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 50 :: 		
0x01DE	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x01E0	0x4803    LDR	R0, [PC, #12]
0x01E2	0xF7FFFFCD  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 51 :: 		
L_end_UART3_Write:
0x01E6	0xF8DDE000  LDR	LR, [SP, #0]
0x01EA	0xB001    ADD	SP, SP, #4
0x01EC	0x4770    BX	LR
0x01EE	0xBF00    NOP
0x01F0	0x48004000  	USART3_SR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_123_45.c, 53 :: 		
; _data start address is: 0 (R0)
0x01BC	0xB081    SUB	SP, SP, #4
0x01BE	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 54 :: 		
0x01C2	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x01C4	0x4803    LDR	R0, [PC, #12]
0x01C6	0xF7FFFFDB  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 55 :: 		
L_end_UART4_Write:
0x01CA	0xF8DDE000  LDR	LR, [SP, #0]
0x01CE	0xB001    ADD	SP, SP, #4
0x01D0	0x4770    BX	LR
0x01D2	0xBF00    NOP
0x01D4	0x4C004000  	UART4_SR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_123_45.c, 57 :: 		
; _data start address is: 0 (R0)
0x01A0	0xB081    SUB	SP, SP, #4
0x01A2	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 58 :: 		
0x01A6	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x01A8	0x4803    LDR	R0, [PC, #12]
0x01AA	0xF7FFFFE9  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 59 :: 		
L_end_UART5_Write:
0x01AE	0xF8DDE000  LDR	LR, [SP, #0]
0x01B2	0xB001    ADD	SP, SP, #4
0x01B4	0x4770    BX	LR
0x01B6	0xBF00    NOP
0x01B8	0x50004000  	UART5_SR+0
; end of _UART5_Write
_Delay_1ms:
;__Lib_Delays.c, 41 :: 		void Delay_1ms() {
;__Lib_Delays.c, 42 :: 		Delay_ms(1);
0x0B00	0xF64267DF  MOVW	R7, #11999
0x0B04	0xF2C00700  MOVT	R7, #0
L_Delay_1ms14:
0x0B08	0x1E7F    SUBS	R7, R7, #1
0x0B0A	0xD1FD    BNE	L_Delay_1ms14
0x0B0C	0xBF00    NOP
0x0B0E	0xBF00    NOP
0x0B10	0xBF00    NOP
0x0B12	0xBF00    NOP
0x0B14	0xBF00    NOP
;__Lib_Delays.c, 43 :: 		}
L_end_Delay_1ms:
0x0B16	0x4770    BX	LR
; end of _Delay_1ms
_pressure2_readCoefficient:
;__pressure2_driver.c, 175 :: 		uint16_t pressure2_readCoefficient( uint8_t index )
; index start address is: 0 (R0)
0x0FD4	0xB082    SUB	SP, SP, #8
0x0FD6	0xF8CDE000  STR	LR, [SP, #0]
; index end address is: 0 (R0)
; index start address is: 0 (R0)
;__pressure2_driver.c, 177 :: 		uint16_t result = 0;
;__pressure2_driver.c, 178 :: 		uint8_t resultFirst[3] = {0};
0x0FDA	0x2100    MOVS	R1, #0
0x0FDC	0xF88D1004  STRB	R1, [SP, #4]
0x0FE0	0x2100    MOVS	R1, #0
0x0FE2	0xF88D1005  STRB	R1, [SP, #5]
0x0FE6	0xF88D1006  STRB	R1, [SP, #6]
;__pressure2_driver.c, 179 :: 		pressure2_readData( _PRESSURE2_CMD_PROM_RD + ( index * 2 ), resultFirst, 2 );
0x0FEA	0xAA01    ADD	R2, SP, #4
0x0FEC	0x0041    LSLS	R1, R0, #1
0x0FEE	0xB209    SXTH	R1, R1
; index end address is: 0 (R0)
0x0FF0	0x31A0    ADDS	R1, #160
0x0FF2	0xB2C8    UXTB	R0, R1
0x0FF4	0x4611    MOV	R1, R2
0x0FF6	0x2202    MOVS	R2, #2
0x0FF8	0xF7FFFD8E  BL	_pressure2_readData+0
;__pressure2_driver.c, 180 :: 		result = resultFirst[1] << 8;
0x0FFC	0xAB01    ADD	R3, SP, #4
0x0FFE	0x1C59    ADDS	R1, R3, #1
0x1000	0x7809    LDRB	R1, [R1, #0]
0x1002	0x020A    LSLS	R2, R1, #8
0x1004	0xB292    UXTH	R2, R2
;__pressure2_driver.c, 181 :: 		result |= resultFirst[2];
0x1006	0x1C99    ADDS	R1, R3, #2
0x1008	0x7809    LDRB	R1, [R1, #0]
0x100A	0xEA420101  ORR	R1, R2, R1, LSL #0
;__pressure2_driver.c, 183 :: 		return result;
0x100E	0xB288    UXTH	R0, R1
;__pressure2_driver.c, 184 :: 		}
L_end_pressure2_readCoefficient:
0x1010	0xF8DDE000  LDR	LR, [SP, #0]
0x1014	0xB002    ADD	SP, SP, #8
0x1016	0x4770    BX	LR
; end of _pressure2_readCoefficient
_pressure2_readData:
;__pressure2_driver.c, 155 :: 		void pressure2_readData( uint8_t rAddr, uint8_t *buffer, uint8_t nBytes )
; rAddr start address is: 0 (R0)
0x0B18	0xB0C3    SUB	SP, SP, #268
0x0B1A	0xF8CDE000  STR	LR, [SP, #0]
0x0B1E	0x9141    STR	R1, [SP, #260]
0x0B20	0xF88D2108  STRB	R2, [SP, #264]
; rAddr end address is: 0 (R0)
; rAddr start address is: 0 (R0)
;__pressure2_driver.c, 157 :: 		uint8_t regAddr[256] = {0};
0x0B24	0xF10D0B04  ADD	R11, SP, #4
0x0B28	0xF50B7A80  ADD	R10, R11, #256
0x0B2C	0xF8DFC034  LDR	R12, [PC, #52]
0x0B30	0xF001FA1A  BL	___CC2DW+0
;__pressure2_driver.c, 158 :: 		regAddr[0] = rAddr;
0x0B34	0xAB01    ADD	R3, SP, #4
0x0B36	0x7018    STRB	R0, [R3, #0]
; rAddr end address is: 0 (R0)
;__pressure2_driver.c, 160 :: 		hal_gpio_csSet( 0 );
0x0B38	0x2000    MOVS	R0, #0
0x0B3A	0x4C0B    LDR	R4, [PC, #44]
0x0B3C	0x6824    LDR	R4, [R4, #0]
0x0B3E	0x47A0    BLX	R4
;__pressure2_driver.c, 161 :: 		hal_spiTransfer( regAddr, buffer, nBytes + 1 );
0x0B40	0xF89D3108  LDRB	R3, [SP, #264]
0x0B44	0x1C5C    ADDS	R4, R3, #1
0x0B46	0xAB01    ADD	R3, SP, #4
0x0B48	0xB2A2    UXTH	R2, R4
0x0B4A	0x9941    LDR	R1, [SP, #260]
0x0B4C	0x4618    MOV	R0, R3
0x0B4E	0xF7FFFCA7  BL	__pressure2_driver_hal_spiTransfer+0
;__pressure2_driver.c, 162 :: 		hal_gpio_csSet( 1 );
0x0B52	0x2001    MOVS	R0, #1
0x0B54	0x4C04    LDR	R4, [PC, #16]
0x0B56	0x6824    LDR	R4, [R4, #0]
0x0B58	0x47A0    BLX	R4
;__pressure2_driver.c, 163 :: 		}
L_end_pressure2_readData:
0x0B5A	0xF8DDE000  LDR	LR, [SP, #0]
0x0B5E	0xB043    ADD	SP, SP, #268
0x0B60	0x4770    BX	LR
0x0B62	0xBF00    NOP
0x0B64	0x22500000  	?ICSpressure2_readData_regAddr_L0+0
0x0B68	0x00A82000  	__pressure2_driver_hal_gpio_csSet+0
; end of _pressure2_readData
__pressure2_driver_hal_spiTransfer:
;__hal_stm32.c, 55 :: 		static void hal_spiTransfer(uint8_t *pIn, uint8_t *pOut, uint16_t nBytes)
; pOut start address is: 4 (R1)
; pIn start address is: 0 (R0)
0x04A0	0xB084    SUB	SP, SP, #16
0x04A2	0xF8CDE000  STR	LR, [SP, #0]
0x04A6	0xF8AD200C  STRH	R2, [SP, #12]
; pOut end address is: 4 (R1)
; pIn end address is: 0 (R0)
; pIn start address is: 0 (R0)
; pOut start address is: 4 (R1)
;__hal_stm32.c, 57 :: 		uint8_t *in = pIn;
0x04AA	0x9001    STR	R0, [SP, #4]
; pIn end address is: 0 (R0)
;__hal_stm32.c, 58 :: 		uint8_t *out = pOut;
0x04AC	0x9102    STR	R1, [SP, #8]
; pOut end address is: 4 (R1)
;__hal_stm32.c, 59 :: 		while( nBytes-- )
L___pressure2_driver_hal_spiTransfer4:
0x04AE	0xF8BD400C  LDRH	R4, [SP, #12]
0x04B2	0xF8BD300C  LDRH	R3, [SP, #12]
0x04B6	0x1E5B    SUBS	R3, R3, #1
0x04B8	0xF8AD300C  STRH	R3, [SP, #12]
0x04BC	0xB17C    CBZ	R4, L___pressure2_driver_hal_spiTransfer5
;__hal_stm32.c, 60 :: 		*( out++ ) = fp_spiRead( *( in++ ) );
0x04BE	0x9B01    LDR	R3, [SP, #4]
0x04C0	0x781B    LDRB	R3, [R3, #0]
0x04C2	0xB2DC    UXTB	R4, R3
0x04C4	0xB2A0    UXTH	R0, R4
0x04C6	0x4C08    LDR	R4, [PC, #32]
0x04C8	0x6824    LDR	R4, [R4, #0]
0x04CA	0x47A0    BLX	R4
0x04CC	0x9B02    LDR	R3, [SP, #8]
0x04CE	0x7018    STRB	R0, [R3, #0]
0x04D0	0x9B02    LDR	R3, [SP, #8]
0x04D2	0x1C5B    ADDS	R3, R3, #1
0x04D4	0x9302    STR	R3, [SP, #8]
0x04D6	0x9B01    LDR	R3, [SP, #4]
0x04D8	0x1C5B    ADDS	R3, R3, #1
0x04DA	0x9301    STR	R3, [SP, #4]
0x04DC	0xE7E7    B	L___pressure2_driver_hal_spiTransfer4
L___pressure2_driver_hal_spiTransfer5:
;__hal_stm32.c, 61 :: 		}
L_end_hal_spiTransfer:
0x04DE	0xF8DDE000  LDR	LR, [SP, #0]
0x04E2	0xB004    ADD	SP, SP, #16
0x04E4	0x4770    BX	LR
0x04E6	0xBF00    NOP
0x04E8	0x00A02000  	__pressure2_driver_fp_spiRead+0
; end of __pressure2_driver_hal_spiTransfer
_SPI1_Read:
;__Lib_SPI_123.c, 74 :: 		
; data_out start address is: 0 (R0)
0x02C4	0xB081    SUB	SP, SP, #4
0x02C6	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 75 :: 		
0x02CA	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x02CC	0x4803    LDR	R0, [PC, #12]
0x02CE	0xF7FFFF45  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 76 :: 		
L_end_SPI1_Read:
0x02D2	0xF8DDE000  LDR	LR, [SP, #0]
0x02D6	0xB001    ADD	SP, SP, #4
0x02D8	0x4770    BX	LR
0x02DA	0xBF00    NOP
0x02DC	0x30004001  	SPI1_CR1+0
; end of _SPI1_Read
_SPI2_Read:
;__Lib_SPI_123.c, 99 :: 		
; data_out start address is: 0 (R0)
0x028C	0xB081    SUB	SP, SP, #4
0x028E	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 100 :: 		
0x0292	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x0294	0x4803    LDR	R0, [PC, #12]
0x0296	0xF7FFFF61  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 101 :: 		
L_end_SPI2_Read:
0x029A	0xF8DDE000  LDR	LR, [SP, #0]
0x029E	0xB001    ADD	SP, SP, #4
0x02A0	0x4770    BX	LR
0x02A2	0xBF00    NOP
0x02A4	0x38004000  	SPI2_CR1+0
; end of _SPI2_Read
_SPI3_Read:
;__Lib_SPI_123.c, 125 :: 		
; data_out start address is: 0 (R0)
0x02A8	0xB081    SUB	SP, SP, #4
0x02AA	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 126 :: 		
0x02AE	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x02B0	0x4803    LDR	R0, [PC, #12]
0x02B2	0xF7FFFF53  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 127 :: 		
L_end_SPI3_Read:
0x02B6	0xF8DDE000  LDR	LR, [SP, #0]
0x02BA	0xB001    ADD	SP, SP, #4
0x02BC	0x4770    BX	LR
0x02BE	0xBF00    NOP
0x02C0	0x3C004000  	SPI3_CR1+0
; end of _SPI3_Read
__pressure2_driver__crcMS5803:
;__pressure2_driver.c, 73 :: 		static uint8_t _crcMS5803()
;__pressure2_driver.c, 80 :: 		n_rem = 0x00;
; n_rem start address is: 8 (R2)
0x10F0	0x2200    MOVS	R2, #0
;__pressure2_driver.c, 81 :: 		crc_read = _sensorCoefficients[7];       // Save read CRC
0x10F2	0x4924    LDR	R1, [PC, #144]
; crc_read start address is: 12 (R3)
0x10F4	0x880B    LDRH	R3, [R1, #0]
;__pressure2_driver.c, 82 :: 		_sensorCoefficients[7] = ( 0xFF00 & ( _sensorCoefficients[7] ) );   // CRC byte is replaced by 0
0x10F6	0x4608    MOV	R0, R1
0x10F8	0x8800    LDRH	R0, [R0, #0]
0x10FA	0xF400407F  AND	R0, R0, #65280
0x10FE	0x8008    STRH	R0, [R1, #0]
;__pressure2_driver.c, 84 :: 		for ( cnt = 0; cnt < 16; cnt++ )        // Operation is performed on bytes
; cnt start address is: 0 (R0)
0x1100	0x2000    MOVS	R0, #0
; n_rem end address is: 8 (R2)
; cnt end address is: 0 (R0)
; crc_read end address is: 12 (R3)
0x1102	0xB294    UXTH	R4, R2
0x1104	0xB282    UXTH	R2, R0
L___pressure2_driver__crcMS58039:
; cnt start address is: 8 (R2)
; crc_read start address is: 12 (R3)
; n_rem start address is: 16 (R4)
0x1106	0x2A10    CMP	R2, #16
0x1108	0xD233    BCS	L___pressure2_driver__crcMS580310
;__pressure2_driver.c, 87 :: 		if ( cnt % 2 == 1 )
0x110A	0xF0020001  AND	R0, R2, #1
0x110E	0xB280    UXTH	R0, R0
0x1110	0x2801    CMP	R0, #1
0x1112	0xD10B    BNE	L___pressure2_driver__crcMS580312
;__pressure2_driver.c, 89 :: 		n_rem ^= ( uint8_t ) ( ( _sensorCoefficients[cnt>>1] ) & 0x00FF );
0x1114	0x0850    LSRS	R0, R2, #1
0x1116	0xB280    UXTH	R0, R0
0x1118	0x0041    LSLS	R1, R0, #1
0x111A	0x481B    LDR	R0, [PC, #108]
0x111C	0x1840    ADDS	R0, R0, R1
0x111E	0x8800    LDRH	R0, [R0, #0]
0x1120	0xF00000FF  AND	R0, R0, #255
0x1124	0xB2C0    UXTB	R0, R0
0x1126	0x4044    EORS	R4, R0
0x1128	0xB2A4    UXTH	R4, R4
;__pressure2_driver.c, 90 :: 		}
0x112A	0xE00B    B	L___pressure2_driver__crcMS580313
L___pressure2_driver__crcMS580312:
;__pressure2_driver.c, 93 :: 		n_rem ^= ( uint8_t ) ( _sensorCoefficients[ cnt >> 1 ] >> 8 );
0x112C	0x0850    LSRS	R0, R2, #1
0x112E	0xB280    UXTH	R0, R0
0x1130	0x0041    LSLS	R1, R0, #1
0x1132	0x4815    LDR	R0, [PC, #84]
0x1134	0x1840    ADDS	R0, R0, R1
0x1136	0x8800    LDRH	R0, [R0, #0]
0x1138	0x0A00    LSRS	R0, R0, #8
0x113A	0xB2C0    UXTB	R0, R0
0x113C	0xEA840000  EOR	R0, R4, R0, LSL #0
; n_rem end address is: 16 (R4)
; n_rem start address is: 4 (R1)
0x1140	0xB281    UXTH	R1, R0
; n_rem end address is: 4 (R1)
0x1142	0xB28C    UXTH	R4, R1
;__pressure2_driver.c, 94 :: 		}
L___pressure2_driver__crcMS580313:
;__pressure2_driver.c, 95 :: 		for ( n_bit = 8; n_bit > 0; n_bit-- )
; n_rem start address is: 16 (R4)
; n_bit start address is: 0 (R0)
0x1144	0x2008    MOVS	R0, #8
; n_bit end address is: 0 (R0)
; crc_read end address is: 12 (R3)
; n_rem end address is: 16 (R4)
; cnt end address is: 8 (R2)
0x1146	0xB291    UXTH	R1, R2
0x1148	0xB2C2    UXTB	R2, R0
L___pressure2_driver__crcMS580314:
; n_bit start address is: 8 (R2)
; n_rem start address is: 16 (R4)
; crc_read start address is: 12 (R3)
; cnt start address is: 4 (R1)
0x114A	0x2A00    CMP	R2, #0
0x114C	0xD90E    BLS	L___pressure2_driver__crcMS580315
;__pressure2_driver.c, 97 :: 		if ( n_rem & ( 0x8000 ) )
0x114E	0xF4044000  AND	R0, R4, #32768
0x1152	0xB280    UXTH	R0, R0
0x1154	0xB128    CBZ	R0, L___pressure2_driver__crcMS580317
;__pressure2_driver.c, 99 :: 		n_rem = ( n_rem << 1 ) ^ 0x3000;
0x1156	0x0064    LSLS	R4, R4, #1
0x1158	0xB2A4    UXTH	R4, R4
; n_rem end address is: 16 (R4)
0x115A	0xF4845440  EOR	R4, R4, #12288
0x115E	0xB2A4    UXTH	R4, R4
; n_rem start address is: 16 (R4)
;__pressure2_driver.c, 100 :: 		}
0x1160	0xE001    B	L___pressure2_driver__crcMS580318
L___pressure2_driver__crcMS580317:
;__pressure2_driver.c, 103 :: 		n_rem = ( n_rem << 1 );
0x1162	0x0064    LSLS	R4, R4, #1
0x1164	0xB2A4    UXTH	R4, R4
; n_rem end address is: 16 (R4)
;__pressure2_driver.c, 104 :: 		}
L___pressure2_driver__crcMS580318:
;__pressure2_driver.c, 95 :: 		for ( n_bit = 8; n_bit > 0; n_bit-- )
; n_rem start address is: 16 (R4)
0x1166	0x1E52    SUBS	R2, R2, #1
0x1168	0xB2D2    UXTB	R2, R2
;__pressure2_driver.c, 105 :: 		}
; n_bit end address is: 8 (R2)
0x116A	0xE7EE    B	L___pressure2_driver__crcMS580314
L___pressure2_driver__crcMS580315:
;__pressure2_driver.c, 84 :: 		for ( cnt = 0; cnt < 16; cnt++ )        // Operation is performed on bytes
0x116C	0x1C48    ADDS	R0, R1, #1
; cnt end address is: 4 (R1)
; cnt start address is: 8 (R2)
0x116E	0xB282    UXTH	R2, R0
;__pressure2_driver.c, 106 :: 		}
; cnt end address is: 8 (R2)
0x1170	0xE7C9    B	L___pressure2_driver__crcMS58039
L___pressure2_driver__crcMS580310:
;__pressure2_driver.c, 107 :: 		n_rem = ( 0x000F & ( n_rem >> 12 ) );    // Final 4-bit reminder is CRC code
0x1172	0x0B20    LSRS	R0, R4, #12
0x1174	0xB280    UXTH	R0, R0
; n_rem end address is: 16 (R4)
0x1176	0xF000010F  AND	R1, R0, #15
;__pressure2_driver.c, 108 :: 		_sensorCoefficients[7] = crc_read;        // Restore the crc_read to its original place
0x117A	0x4802    LDR	R0, [PC, #8]
0x117C	0x8003    STRH	R3, [R0, #0]
; crc_read end address is: 12 (R3)
;__pressure2_driver.c, 110 :: 		return ( n_rem ^ 0x00 );                 // The calculated CRC should match what the device initally returned.
0x117E	0xB2C8    UXTB	R0, R1
;__pressure2_driver.c, 111 :: 		}
L_end__crcMS5803:
0x1180	0x4770    BX	LR
0x1182	0xBF00    NOP
0x1184	0x00BA2000  	__pressure2_driver__sensorCoefficients+14
0x1188	0x00AC2000  	__pressure2_driver__sensorCoefficients+0
; end of __pressure2_driver__crcMS5803
_applicationTask:
;Click_Pressure2_STM.c, 49 :: 		void applicationTask()
0x1FF0	0xB081    SUB	SP, SP, #4
0x1FF2	0xF8CDE000  STR	LR, [SP, #0]
;Click_Pressure2_STM.c, 51 :: 		pressure2_readSensor( &pressure_P, &pressure_T );
0x1FF6	0x491B    LDR	R1, [PC, #108]
0x1FF8	0x481B    LDR	R0, [PC, #108]
0x1FFA	0xF7FFFE57  BL	_pressure2_readSensor+0
;Click_Pressure2_STM.c, 53 :: 		mikrobus_logWrite( "Pressure: ", _LOG_TEXT );
0x1FFE	0x481B    LDR	R0, [PC, #108]
0x2000	0x2101    MOVS	R1, #1
0x2002	0xF7FFFCBF  BL	_mikrobus_logWrite+0
;Click_Pressure2_STM.c, 54 :: 		FloatToStr( pressure_P, demoText );
0x2006	0x4818    LDR	R0, [PC, #96]
0x2008	0x6800    LDR	R0, [R0, #0]
0x200A	0x4919    LDR	R1, [PC, #100]
0x200C	0xF7FFFD14  BL	_FloatToStr+0
;Click_Pressure2_STM.c, 55 :: 		demoText[6] = 0;
0x2010	0x2100    MOVS	R1, #0
0x2012	0x4818    LDR	R0, [PC, #96]
0x2014	0x7001    STRB	R1, [R0, #0]
;Click_Pressure2_STM.c, 56 :: 		mikrobus_logWrite( demoText, _LOG_LINE );
0x2016	0x2102    MOVS	R1, #2
0x2018	0x4815    LDR	R0, [PC, #84]
0x201A	0xF7FFFCB3  BL	_mikrobus_logWrite+0
;Click_Pressure2_STM.c, 58 :: 		mikrobus_logWrite( "Temperature: ", _LOG_TEXT );
0x201E	0x4816    LDR	R0, [PC, #88]
0x2020	0x2101    MOVS	R1, #1
0x2022	0xF7FFFCAF  BL	_mikrobus_logWrite+0
;Click_Pressure2_STM.c, 59 :: 		FloatToStr( pressure_T, demoText );
0x2026	0x480F    LDR	R0, [PC, #60]
0x2028	0x6800    LDR	R0, [R0, #0]
0x202A	0x4911    LDR	R1, [PC, #68]
0x202C	0xF7FFFD04  BL	_FloatToStr+0
;Click_Pressure2_STM.c, 60 :: 		demoText[4] = 0;
0x2030	0x2100    MOVS	R1, #0
0x2032	0x4812    LDR	R0, [PC, #72]
0x2034	0x7001    STRB	R1, [R0, #0]
;Click_Pressure2_STM.c, 61 :: 		mikrobus_logWrite( demoText, _LOG_LINE );
0x2036	0x2102    MOVS	R1, #2
0x2038	0x480D    LDR	R0, [PC, #52]
0x203A	0xF7FFFCA3  BL	_mikrobus_logWrite+0
;Click_Pressure2_STM.c, 62 :: 		mikrobus_logWrite( "-----------", _LOG_LINE );
0x203E	0x4810    LDR	R0, [PC, #64]
0x2040	0x2102    MOVS	R1, #2
0x2042	0xF7FFFC9F  BL	_mikrobus_logWrite+0
;Click_Pressure2_STM.c, 63 :: 		Delay_ms( 1000 );
0x2046	0xF64127FF  MOVW	R7, #6911
0x204A	0xF2C007B7  MOVT	R7, #183
0x204E	0xBF00    NOP
0x2050	0xBF00    NOP
L_applicationTask4:
0x2052	0x1E7F    SUBS	R7, R7, #1
0x2054	0xD1FD    BNE	L_applicationTask4
0x2056	0xBF00    NOP
0x2058	0xBF00    NOP
0x205A	0xBF00    NOP
;Click_Pressure2_STM.c, 64 :: 		}
L_end_applicationTask:
0x205C	0xF8DDE000  LDR	LR, [SP, #0]
0x2060	0xB001    ADD	SP, SP, #4
0x2062	0x4770    BX	LR
0x2064	0x00482000  	_pressure_T+0
0x2068	0x00442000  	_pressure_P+0
0x206C	0x00002000  	?lstr1_Click_Pressure2_STM+0
0x2070	0x004C2000  	_demoText+0
0x2074	0x00522000  	_demoText+6
0x2078	0x000B2000  	?lstr2_Click_Pressure2_STM+0
0x207C	0x00502000  	_demoText+4
0x2080	0x00192000  	?lstr3_Click_Pressure2_STM+0
; end of _applicationTask
_pressure2_readSensor:
;__pressure2_driver.c, 268 :: 		void pressure2_readSensor( float *P, float *T )
0x1CAC	0xB089    SUB	SP, SP, #36
0x1CAE	0xF8CDE000  STR	LR, [SP, #0]
0x1CB2	0x9001    STR	R0, [SP, #4]
0x1CB4	0x9102    STR	R1, [SP, #8]
;__pressure2_driver.c, 270 :: 		_pressure = pressure2_sendCmdADC( _PRESSURE2_CMD_ADC_D1 + _PRESSURE2_CMD_ADC_4096 );
0x1CB6	0x2008    MOVS	R0, #8
0x1CB8	0xF7FFF9AE  BL	_pressure2_sendCmdADC+0
0x1CBC	0x4A6F    LDR	R2, [PC, #444]
0x1CBE	0x6010    STR	R0, [R2, #0]
;__pressure2_driver.c, 271 :: 		_temperature = pressure2_sendCmdADC( _PRESSURE2_CMD_ADC_D2 + _PRESSURE2_CMD_ADC_4096 );
0x1CC0	0x2018    MOVS	R0, #24
0x1CC2	0xF7FFF9A9  BL	_pressure2_sendCmdADC+0
0x1CC6	0x4A6E    LDR	R2, [PC, #440]
0x1CC8	0x6010    STR	R0, [R2, #0]
;__pressure2_driver.c, 273 :: 		_deltaTemp = _temperature - _sensorCoefficients[5] * _pow( 2, 8 );
0x1CCA	0x2108    MOVS	R1, #8
0x1CCC	0xF04F4080  MOV	R0, #1073741824
0x1CD0	0xF7FFF958  BL	__pressure2_driver__pow+0
0x1CD4	0x9006    STR	R0, [SP, #24]
0x1CD6	0x4A6B    LDR	R2, [PC, #428]
0x1CD8	0x8810    LDRH	R0, [R2, #0]
0x1CDA	0xF7FFFACD  BL	__UnsignedIntegralToFloat+0
0x1CDE	0x9A06    LDR	R2, [SP, #24]
0x1CE0	0xF7FEFFAA  BL	__Mul_FP+0
0x1CE4	0x9006    STR	R0, [SP, #24]
0x1CE6	0x4A66    LDR	R2, [PC, #408]
0x1CE8	0x6810    LDR	R0, [R2, #0]
0x1CEA	0xF7FFFAC5  BL	__UnsignedIntegralToFloat+0
0x1CEE	0x9A06    LDR	R2, [SP, #24]
0x1CF0	0xF7FFFAD8  BL	__Sub_FP+0
0x1CF4	0xF7FFFA4A  BL	__FloatToUnsignedIntegral+0
0x1CF8	0x4A63    LDR	R2, [PC, #396]
0x1CFA	0x6010    STR	R0, [R2, #0]
;__pressure2_driver.c, 274 :: 		_sensorOffset = _sensorCoefficients[2] * _pow( 2, 16 ) + ( _deltaTemp / _pow( 2, 7 ) ) * ( _sensorCoefficients[4] / _pow( 2, 7 ) );
0x1CFC	0x2110    MOVS	R1, #16
0x1CFE	0xF04F4080  MOV	R0, #1073741824
0x1D02	0xF7FFF93F  BL	__pressure2_driver__pow+0
0x1D06	0x9006    STR	R0, [SP, #24]
0x1D08	0x4A60    LDR	R2, [PC, #384]
0x1D0A	0x8810    LDRH	R0, [R2, #0]
0x1D0C	0xF7FFFAB4  BL	__UnsignedIntegralToFloat+0
0x1D10	0x9A06    LDR	R2, [SP, #24]
0x1D12	0xF7FEFF91  BL	__Mul_FP+0
0x1D16	0x9008    STR	R0, [SP, #32]
0x1D18	0x2107    MOVS	R1, #7
0x1D1A	0xF04F4080  MOV	R0, #1073741824
0x1D1E	0xF7FFF931  BL	__pressure2_driver__pow+0
0x1D22	0x9006    STR	R0, [SP, #24]
0x1D24	0x4A58    LDR	R2, [PC, #352]
0x1D26	0x6810    LDR	R0, [R2, #0]
0x1D28	0xF7FFFAA6  BL	__UnsignedIntegralToFloat+0
0x1D2C	0x9A06    LDR	R2, [SP, #24]
0x1D2E	0xF7FFFA51  BL	__Div_FP+0
0x1D32	0x9007    STR	R0, [SP, #28]
0x1D34	0x2107    MOVS	R1, #7
0x1D36	0xF04F4080  MOV	R0, #1073741824
0x1D3A	0xF7FFF923  BL	__pressure2_driver__pow+0
0x1D3E	0x9006    STR	R0, [SP, #24]
0x1D40	0x4A53    LDR	R2, [PC, #332]
0x1D42	0x8810    LDRH	R0, [R2, #0]
0x1D44	0xF7FFFA98  BL	__UnsignedIntegralToFloat+0
0x1D48	0x9A06    LDR	R2, [SP, #24]
0x1D4A	0xF7FFFA43  BL	__Div_FP+0
0x1D4E	0x9A07    LDR	R2, [SP, #28]
0x1D50	0xF7FEFF72  BL	__Mul_FP+0
0x1D54	0x9A08    LDR	R2, [SP, #32]
0x1D56	0xF7FFF827  BL	__Add_FP+0
0x1D5A	0x4A4E    LDR	R2, [PC, #312]
0x1D5C	0x6010    STR	R0, [R2, #0]
;__pressure2_driver.c, 275 :: 		_sensitivity = _sensorCoefficients[1] * _pow( 2, 15 ) + ( _deltaTemp / _pow( 2, 8 ) ) * ( _sensorCoefficients[3] / _pow( 2, 8 ) );
0x1D5E	0x210F    MOVS	R1, #15
0x1D60	0xF04F4080  MOV	R0, #1073741824
0x1D64	0xF7FFF90E  BL	__pressure2_driver__pow+0
0x1D68	0x9006    STR	R0, [SP, #24]
0x1D6A	0x4A4B    LDR	R2, [PC, #300]
0x1D6C	0x8810    LDRH	R0, [R2, #0]
0x1D6E	0xF7FFFA83  BL	__UnsignedIntegralToFloat+0
0x1D72	0x9A06    LDR	R2, [SP, #24]
0x1D74	0xF7FEFF60  BL	__Mul_FP+0
0x1D78	0x9008    STR	R0, [SP, #32]
0x1D7A	0x2108    MOVS	R1, #8
0x1D7C	0xF04F4080  MOV	R0, #1073741824
0x1D80	0xF7FFF900  BL	__pressure2_driver__pow+0
0x1D84	0x9006    STR	R0, [SP, #24]
0x1D86	0x4A40    LDR	R2, [PC, #256]
0x1D88	0x6810    LDR	R0, [R2, #0]
0x1D8A	0xF7FFFA75  BL	__UnsignedIntegralToFloat+0
0x1D8E	0x9A06    LDR	R2, [SP, #24]
0x1D90	0xF7FFFA20  BL	__Div_FP+0
0x1D94	0x9007    STR	R0, [SP, #28]
0x1D96	0x2108    MOVS	R1, #8
0x1D98	0xF04F4080  MOV	R0, #1073741824
0x1D9C	0xF7FFF8F2  BL	__pressure2_driver__pow+0
0x1DA0	0x9006    STR	R0, [SP, #24]
0x1DA2	0x4A3E    LDR	R2, [PC, #248]
0x1DA4	0x8810    LDRH	R0, [R2, #0]
0x1DA6	0xF7FFFA67  BL	__UnsignedIntegralToFloat+0
0x1DAA	0x9A06    LDR	R2, [SP, #24]
0x1DAC	0xF7FFFA12  BL	__Div_FP+0
0x1DB0	0x9A07    LDR	R2, [SP, #28]
0x1DB2	0xF7FEFF41  BL	__Mul_FP+0
0x1DB6	0x9A08    LDR	R2, [SP, #32]
0x1DB8	0xF7FEFFF6  BL	__Add_FP+0
0x1DBC	0x4A38    LDR	R2, [PC, #224]
0x1DBE	0x6010    STR	R0, [R2, #0]
;__pressure2_driver.c, 277 :: 		*P = ( ( _pressure / _pow( 2, 15 ) ) * ( _sensitivity / _pow( 2, 21 ) ) - ( _sensorOffset / _pow( 2, 15 ) ) ) / 10;
0x1DC0	0x210F    MOVS	R1, #15
0x1DC2	0xF04F4080  MOV	R0, #1073741824
0x1DC6	0xF7FFF8DD  BL	__pressure2_driver__pow+0
0x1DCA	0x9006    STR	R0, [SP, #24]
0x1DCC	0x4A2B    LDR	R2, [PC, #172]
0x1DCE	0x6810    LDR	R0, [R2, #0]
0x1DD0	0xF7FFFA52  BL	__UnsignedIntegralToFloat+0
0x1DD4	0x9A06    LDR	R2, [SP, #24]
0x1DD6	0xF7FFF9FD  BL	__Div_FP+0
0x1DDA	0x9006    STR	R0, [SP, #24]
0x1DDC	0x2115    MOVS	R1, #21
0x1DDE	0xF04F4080  MOV	R0, #1073741824
0x1DE2	0xF7FFF8CF  BL	__pressure2_driver__pow+0
0x1DE6	0x9003    STR	R0, [SP, #12]
0x1DE8	0x9B03    LDR	R3, [SP, #12]
0x1DEA	0x4A2D    LDR	R2, [PC, #180]
0x1DEC	0x6810    LDR	R0, [R2, #0]
0x1DEE	0x461A    MOV	R2, R3
0x1DF0	0xF7FFF9F0  BL	__Div_FP+0
0x1DF4	0x9A06    LDR	R2, [SP, #24]
0x1DF6	0xF7FEFF1F  BL	__Mul_FP+0
0x1DFA	0x9006    STR	R0, [SP, #24]
0x1DFC	0x210F    MOVS	R1, #15
0x1DFE	0xF04F4080  MOV	R0, #1073741824
0x1E02	0xF7FFF8BF  BL	__pressure2_driver__pow+0
0x1E06	0x9003    STR	R0, [SP, #12]
0x1E08	0x9B03    LDR	R3, [SP, #12]
0x1E0A	0x4A22    LDR	R2, [PC, #136]
0x1E0C	0x6810    LDR	R0, [R2, #0]
0x1E0E	0x461A    MOV	R2, R3
0x1E10	0xF7FFF9E0  BL	__Div_FP+0
0x1E14	0x9003    STR	R0, [SP, #12]
0x1E16	0x9A03    LDR	R2, [SP, #12]
0x1E18	0x9806    LDR	R0, [SP, #24]
0x1E1A	0xF7FFFA43  BL	__Sub_FP+0
0x1E1E	0x4A21    LDR	R2, [PC, #132]
0x1E20	0xF7FFF9D8  BL	__Div_FP+0
0x1E24	0x9A01    LDR	R2, [SP, #4]
0x1E26	0x6010    STR	R0, [R2, #0]
;__pressure2_driver.c, 278 :: 		*T = ( 2000 + ( ( _deltaTemp / _pow( 2, 13 ) ) * ( _sensorCoefficients[6] / _pow( 2, 10 ) ) )  ) / 100;
0x1E28	0x210D    MOVS	R1, #13
0x1E2A	0xF04F4080  MOV	R0, #1073741824
0x1E2E	0xF7FFF8A9  BL	__pressure2_driver__pow+0
0x1E32	0x9006    STR	R0, [SP, #24]
0x1E34	0x4A14    LDR	R2, [PC, #80]
0x1E36	0x6810    LDR	R0, [R2, #0]
0x1E38	0xF7FFFA1E  BL	__UnsignedIntegralToFloat+0
0x1E3C	0x9A06    LDR	R2, [SP, #24]
0x1E3E	0xF7FFF9C9  BL	__Div_FP+0
0x1E42	0x9007    STR	R0, [SP, #28]
0x1E44	0x210A    MOVS	R1, #10
0x1E46	0xF04F4080  MOV	R0, #1073741824
0x1E4A	0xF7FFF89B  BL	__pressure2_driver__pow+0
0x1E4E	0x9006    STR	R0, [SP, #24]
0x1E50	0x4A15    LDR	R2, [PC, #84]
0x1E52	0x8810    LDRH	R0, [R2, #0]
0x1E54	0xF7FFFA10  BL	__UnsignedIntegralToFloat+0
0x1E58	0x9A06    LDR	R2, [SP, #24]
0x1E5A	0xF7FFF9BB  BL	__Div_FP+0
0x1E5E	0x9A07    LDR	R2, [SP, #28]
0x1E60	0xF7FEFEEA  BL	__Mul_FP+0
0x1E64	0x4A11    LDR	R2, [PC, #68]
0x1E66	0xF7FEFF9F  BL	__Add_FP+0
0x1E6A	0x4A11    LDR	R2, [PC, #68]
0x1E6C	0xF7FFF9B2  BL	__Div_FP+0
0x1E70	0x9A02    LDR	R2, [SP, #8]
0x1E72	0x6010    STR	R0, [R2, #0]
;__pressure2_driver.c, 279 :: 		}
L_end_pressure2_readSensor:
0x1E74	0xF8DDE000  LDR	LR, [SP, #0]
0x1E78	0xB009    ADD	SP, SP, #36
0x1E7A	0x4770    BX	LR
0x1E7C	0x00302000  	__pressure2_driver__pressure+0
0x1E80	0x00342000  	__pressure2_driver__temperature+0
0x1E84	0x00B62000  	__pressure2_driver__sensorCoefficients+10
0x1E88	0x00382000  	__pressure2_driver__deltaTemp+0
0x1E8C	0x00B02000  	__pressure2_driver__sensorCoefficients+4
0x1E90	0x00B42000  	__pressure2_driver__sensorCoefficients+8
0x1E94	0x003C2000  	__pressure2_driver__sensorOffset+0
0x1E98	0x00AE2000  	__pressure2_driver__sensorCoefficients+2
0x1E9C	0x00B22000  	__pressure2_driver__sensorCoefficients+6
0x1EA0	0x00402000  	__pressure2_driver__sensitivity+0
0x1EA4	0x00004120  	#1092616192
0x1EA8	0x00B82000  	__pressure2_driver__sensorCoefficients+12
0x1EAC	0x000044FA  	#1157234688
0x1EB0	0x000042C8  	#1120403456
; end of _pressure2_readSensor
_pressure2_sendCmdADC:
;__pressure2_driver.c, 186 :: 		uint32_t pressure2_sendCmdADC( uint8_t cmd )
; cmd start address is: 0 (R0)
0x1018	0xB084    SUB	SP, SP, #16
0x101A	0xF8CDE000  STR	LR, [SP, #0]
; cmd end address is: 0 (R0)
; cmd start address is: 0 (R0)
;__pressure2_driver.c, 188 :: 		uint32_t result = 0;
;__pressure2_driver.c, 189 :: 		uint8_t adc_read[4] = {0};
0x101E	0x2100    MOVS	R1, #0
0x1020	0xF88D1008  STRB	R1, [SP, #8]
0x1024	0x2100    MOVS	R1, #0
0x1026	0xF88D1009  STRB	R1, [SP, #9]
0x102A	0xF88D100A  STRB	R1, [SP, #10]
0x102E	0xF88D100B  STRB	R1, [SP, #11]
;__pressure2_driver.c, 190 :: 		pressure2_writeBytes( _PRESSURE2_CMD_ADC_CONV + cmd ); // Send conversion command
0x1032	0xF2000140  ADDW	R1, R0, #64
0x1036	0xF88D0004  STRB	R0, [SP, #4]
0x103A	0xB2C8    UXTB	R0, R1
0x103C	0xF7FFFD48  BL	_pressure2_writeBytes+0
0x1040	0xF89D0004  LDRB	R0, [SP, #4]
;__pressure2_driver.c, 191 :: 		Delay_1ms();
0x1044	0xF7FFFD5C  BL	_Delay_1ms+0
;__pressure2_driver.c, 192 :: 		switch ( cmd & 0x0F )
0x1048	0xF000010F  AND	R1, R0, #15
; cmd end address is: 0 (R0)
0x104C	0xF88D100C  STRB	R1, [SP, #12]
0x1050	0xE02A    B	L_pressure2_sendCmdADC19
;__pressure2_driver.c, 194 :: 		case _PRESSURE2_CMD_ADC_256 :
L_pressure2_sendCmdADC21:
;__pressure2_driver.c, 196 :: 		Delay_500us();
0x1052	0xF7FFFD31  BL	_Delay_500us+0
;__pressure2_driver.c, 197 :: 		Delay_80us();
0x1056	0xF7FFFE6B  BL	_Delay_80us+0
;__pressure2_driver.c, 198 :: 		Delay_80us();
0x105A	0xF7FFFE69  BL	_Delay_80us+0
;__pressure2_driver.c, 199 :: 		Delay_80us();
0x105E	0xF7FFFE67  BL	_Delay_80us+0
;__pressure2_driver.c, 200 :: 		Delay_80us();
0x1062	0xF7FFFE65  BL	_Delay_80us+0
;__pressure2_driver.c, 201 :: 		Delay_80us();
0x1066	0xF7FFFE63  BL	_Delay_80us+0
;__pressure2_driver.c, 202 :: 		break;
0x106A	0xE029    B	L_pressure2_sendCmdADC20
;__pressure2_driver.c, 204 :: 		case _PRESSURE2_CMD_ADC_512 :
L_pressure2_sendCmdADC22:
;__pressure2_driver.c, 206 :: 		Delay_1ms();
0x106C	0xF7FFFD48  BL	_Delay_1ms+0
;__pressure2_driver.c, 207 :: 		Delay_1ms();
0x1070	0xF7FFFD46  BL	_Delay_1ms+0
;__pressure2_driver.c, 208 :: 		Delay_1ms();
0x1074	0xF7FFFD44  BL	_Delay_1ms+0
;__pressure2_driver.c, 209 :: 		break;
0x1078	0xE022    B	L_pressure2_sendCmdADC20
;__pressure2_driver.c, 211 :: 		case _PRESSURE2_CMD_ADC_1024 :
L_pressure2_sendCmdADC23:
;__pressure2_driver.c, 213 :: 		Delay_1ms();
0x107A	0xF7FFFD41  BL	_Delay_1ms+0
;__pressure2_driver.c, 214 :: 		Delay_1ms();
0x107E	0xF7FFFD3F  BL	_Delay_1ms+0
;__pressure2_driver.c, 215 :: 		Delay_1ms();
0x1082	0xF7FFFD3D  BL	_Delay_1ms+0
;__pressure2_driver.c, 216 :: 		Delay_1ms();
0x1086	0xF7FFFD3B  BL	_Delay_1ms+0
;__pressure2_driver.c, 217 :: 		break;
0x108A	0xE019    B	L_pressure2_sendCmdADC20
;__pressure2_driver.c, 219 :: 		case _PRESSURE2_CMD_ADC_2048 :
L_pressure2_sendCmdADC24:
;__pressure2_driver.c, 221 :: 		Delay_8ms();
0x108C	0xF7FFFE5C  BL	_Delay_8ms+0
;__pressure2_driver.c, 222 :: 		break;
0x1090	0xE016    B	L_pressure2_sendCmdADC20
;__pressure2_driver.c, 224 :: 		case _PRESSURE2_CMD_ADC_4096 :
L_pressure2_sendCmdADC25:
;__pressure2_driver.c, 226 :: 		Delay_10ms();
0x1092	0xF7FFFD8D  BL	_Delay_10ms+0
;__pressure2_driver.c, 227 :: 		Delay_1ms();
0x1096	0xF7FFFD33  BL	_Delay_1ms+0
;__pressure2_driver.c, 228 :: 		Delay_1ms();
0x109A	0xF7FFFD31  BL	_Delay_1ms+0
;__pressure2_driver.c, 229 :: 		Delay_1ms();
0x109E	0xF7FFFD2F  BL	_Delay_1ms+0
;__pressure2_driver.c, 230 :: 		Delay_1ms();
0x10A2	0xF7FFFD2D  BL	_Delay_1ms+0
;__pressure2_driver.c, 231 :: 		break;
0x10A6	0xE00B    B	L_pressure2_sendCmdADC20
;__pressure2_driver.c, 233 :: 		}
L_pressure2_sendCmdADC19:
0x10A8	0xF89D100C  LDRB	R1, [SP, #12]
0x10AC	0x2900    CMP	R1, #0
0x10AE	0xD0D0    BEQ	L_pressure2_sendCmdADC21
0x10B0	0x2902    CMP	R1, #2
0x10B2	0xD0DB    BEQ	L_pressure2_sendCmdADC22
0x10B4	0x2904    CMP	R1, #4
0x10B6	0xD0E0    BEQ	L_pressure2_sendCmdADC23
0x10B8	0x2906    CMP	R1, #6
0x10BA	0xD0E7    BEQ	L_pressure2_sendCmdADC24
0x10BC	0x2908    CMP	R1, #8
0x10BE	0xD0E8    BEQ	L_pressure2_sendCmdADC25
L_pressure2_sendCmdADC20:
;__pressure2_driver.c, 234 :: 		pressure2_readData( _PRESSURE2_CMD_ADC_READ, adc_read, 3 );
0x10C0	0xA902    ADD	R1, SP, #8
0x10C2	0x2203    MOVS	R2, #3
0x10C4	0x2000    MOVS	R0, #0
0x10C6	0xF7FFFD27  BL	_pressure2_readData+0
;__pressure2_driver.c, 235 :: 		result = ( (uint32_t) adc_read[1] << 16 );
0x10CA	0xAB02    ADD	R3, SP, #8
0x10CC	0x1C59    ADDS	R1, R3, #1
0x10CE	0x7809    LDRB	R1, [R1, #0]
0x10D0	0x040A    LSLS	R2, R1, #16
;__pressure2_driver.c, 236 :: 		result |= ( (uint16_t) adc_read[2] << 8 );
0x10D2	0x1C99    ADDS	R1, R3, #2
0x10D4	0x7809    LDRB	R1, [R1, #0]
0x10D6	0x0209    LSLS	R1, R1, #8
0x10D8	0xB289    UXTH	R1, R1
0x10DA	0x430A    ORRS	R2, R1
;__pressure2_driver.c, 237 :: 		result |= adc_read[3];
0x10DC	0x1CD9    ADDS	R1, R3, #3
0x10DE	0x7809    LDRB	R1, [R1, #0]
0x10E0	0xEA420101  ORR	R1, R2, R1, LSL #0
;__pressure2_driver.c, 239 :: 		return result;
0x10E4	0x4608    MOV	R0, R1
;__pressure2_driver.c, 240 :: 		}
L_end_pressure2_sendCmdADC:
0x10E6	0xF8DDE000  LDR	LR, [SP, #0]
0x10EA	0xB004    ADD	SP, SP, #16
0x10EC	0x4770    BX	LR
; end of _pressure2_sendCmdADC
_Delay_500us:
;__Lib_Delays.c, 33 :: 		void Delay_500us() {
;__Lib_Delays.c, 34 :: 		Delay_us(498);
0x0AB8	0xF2417757  MOVW	R7, #5975
0x0ABC	0xF2C00700  MOVT	R7, #0
L_Delay_500us10:
0x0AC0	0x1E7F    SUBS	R7, R7, #1
0x0AC2	0xD1FD    BNE	L_Delay_500us10
0x0AC4	0xBF00    NOP
0x0AC6	0xBF00    NOP
0x0AC8	0xBF00    NOP
0x0ACA	0xBF00    NOP
0x0ACC	0xBF00    NOP
;__Lib_Delays.c, 35 :: 		}
L_end_Delay_500us:
0x0ACE	0x4770    BX	LR
; end of _Delay_500us
_Delay_80us:
;__Lib_Delays.c, 29 :: 		void Delay_80us() {
;__Lib_Delays.c, 30 :: 		Delay_us(78);
0x0D30	0xF24037A7  MOVW	R7, #935
0x0D34	0xF2C00700  MOVT	R7, #0
L_Delay_80us8:
0x0D38	0x1E7F    SUBS	R7, R7, #1
0x0D3A	0xD1FD    BNE	L_Delay_80us8
0x0D3C	0xBF00    NOP
0x0D3E	0xBF00    NOP
0x0D40	0xBF00    NOP
0x0D42	0xBF00    NOP
0x0D44	0xBF00    NOP
;__Lib_Delays.c, 31 :: 		}
L_end_Delay_80us:
0x0D46	0x4770    BX	LR
; end of _Delay_80us
_Delay_8ms:
;__Lib_Delays.c, 49 :: 		void Delay_8ms() {
;__Lib_Delays.c, 50 :: 		Delay_ms(8);
0x0D48	0xF24767FF  MOVW	R7, #30463
0x0D4C	0xF2C00701  MOVT	R7, #1
L_Delay_8ms18:
0x0D50	0x1E7F    SUBS	R7, R7, #1
0x0D52	0xD1FD    BNE	L_Delay_8ms18
0x0D54	0xBF00    NOP
0x0D56	0xBF00    NOP
0x0D58	0xBF00    NOP
0x0D5A	0xBF00    NOP
0x0D5C	0xBF00    NOP
;__Lib_Delays.c, 51 :: 		}
L_end_Delay_8ms:
0x0D5E	0x4770    BX	LR
; end of _Delay_8ms
_Delay_10ms:
;__Lib_Delays.c, 57 :: 		void Delay_10ms() {
;__Lib_Delays.c, 58 :: 		Delay_ms(10);
0x0BB0	0xF24D47BF  MOVW	R7, #54463
0x0BB4	0xF2C00701  MOVT	R7, #1
L_Delay_10ms22:
0x0BB8	0x1E7F    SUBS	R7, R7, #1
0x0BBA	0xD1FD    BNE	L_Delay_10ms22
0x0BBC	0xBF00    NOP
0x0BBE	0xBF00    NOP
0x0BC0	0xBF00    NOP
0x0BC2	0xBF00    NOP
0x0BC4	0xBF00    NOP
;__Lib_Delays.c, 59 :: 		}
L_end_Delay_10ms:
0x0BC6	0x4770    BX	LR
; end of _Delay_10ms
__pressure2_driver__pow:
;__pressure2_driver.c, 55 :: 		static double _pow( double x, uint8_t y )
; y start address is: 4 (R1)
; x start address is: 0 (R0)
0x0F84	0xB081    SUB	SP, SP, #4
0x0F86	0xF8CDE000  STR	LR, [SP, #0]
0x0F8A	0xB2CA    UXTB	R2, R1
0x0F8C	0x4601    MOV	R1, R0
; y end address is: 4 (R1)
; x end address is: 0 (R0)
; x start address is: 4 (R1)
; y start address is: 8 (R2)
;__pressure2_driver.c, 57 :: 		double res = 1; // Initialize result
; res start address is: 0 (R0)
0x0F8E	0xF04F507E  MOV	R0, #1065353216
; x end address is: 4 (R1)
; y end address is: 8 (R2)
; res end address is: 0 (R0)
0x0F92	0x4688    MOV	R8, R1
0x0F94	0xFA5FF982  UXTB	R9, R2
0x0F98	0x4682    MOV	R10, R0
;__pressure2_driver.c, 59 :: 		while (y > 0)
L___pressure2_driver__pow6:
; res start address is: 40 (R10)
; y start address is: 36 (R9)
; x start address is: 32 (R8)
0x0F9A	0xF1B90F00  CMP	R9, #0
0x0F9E	0xD913    BLS	L___pressure2_driver__pow7
;__pressure2_driver.c, 62 :: 		if (y & 1)
0x0FA0	0xF0090201  AND	R2, R9, #1
0x0FA4	0xB2D2    UXTB	R2, R2
0x0FA6	0xB12A    CBZ	R2, L___pressure2_driver__pow31
;__pressure2_driver.c, 64 :: 		res = res * x;
0x0FA8	0x4640    MOV	R0, R8
0x0FAA	0x4652    MOV	R2, R10
0x0FAC	0xF7FFFE44  BL	__Mul_FP+0
0x0FB0	0x4682    MOV	R10, R0
; res end address is: 40 (R10)
;__pressure2_driver.c, 65 :: 		}
0x0FB2	0xE7FF    B	L___pressure2_driver__pow8
L___pressure2_driver__pow31:
;__pressure2_driver.c, 62 :: 		if (y & 1)
;__pressure2_driver.c, 65 :: 		}
L___pressure2_driver__pow8:
;__pressure2_driver.c, 67 :: 		y = y >> 1; // y = y/2
; res start address is: 40 (R10)
0x0FB4	0xEA4F0959  LSR	R9, R9, #1
0x0FB8	0xFA5FF989  UXTB	R9, R9
;__pressure2_driver.c, 68 :: 		x = x * x; // Change x to x^2
0x0FBC	0x4640    MOV	R0, R8
0x0FBE	0x4642    MOV	R2, R8
0x0FC0	0xF7FFFE3A  BL	__Mul_FP+0
0x0FC4	0x4680    MOV	R8, R0
;__pressure2_driver.c, 69 :: 		}
; y end address is: 36 (R9)
; x end address is: 32 (R8)
0x0FC6	0xE7E8    B	L___pressure2_driver__pow6
L___pressure2_driver__pow7:
;__pressure2_driver.c, 70 :: 		return res;
0x0FC8	0x4650    MOV	R0, R10
; res end address is: 40 (R10)
;__pressure2_driver.c, 71 :: 		}
L_end__pow:
0x0FCA	0xF8DDE000  LDR	LR, [SP, #0]
0x0FCE	0xB001    ADD	SP, SP, #4
0x0FD0	0x4770    BX	LR
; end of __pressure2_driver__pow
__Mul_FP:
;__Lib_MathDouble.c, 666 :: 		
0x0C38	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 668 :: 		
0x0C3A	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 670 :: 		
0x0C3C	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 671 :: 		
0x0C40	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 672 :: 		
0x0C42	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 673 :: 		
0x0C46	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 675 :: 		
0x0C4A	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 676 :: 		
0x0C4E	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 677 :: 		
0x0C52	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 678 :: 		
0x0C54	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 679 :: 		
0x0C56	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 681 :: 		
0x0C5A	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 683 :: 		
0x0C5E	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 685 :: 		
0x0C60	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 686 :: 		
0x0C62	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 688 :: 		
0x0C64	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 689 :: 		
0x0C68	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 690 :: 		
0x0C6C	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 691 :: 		
0x0C6E	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 692 :: 		
0x0C70	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 694 :: 		
0x0C74	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 696 :: 		
0x0C78	0xE01F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 698 :: 		
0x0C7A	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 699 :: 		
0x0C7C	0xD019    BEQ	__me_ovfl
;__Lib_MathDouble.c, 701 :: 		
0x0C7E	0x195B    ADDS	R3, R3, R5
;__Lib_MathDouble.c, 703 :: 		
0x0C80	0xFBA15404  UMULL	R5, R4, R1, R4
;__Lib_MathDouble.c, 705 :: 		
0x0C84	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 706 :: 		
0x0C86	0xBF5C    ITT	PL
;__Lib_MathDouble.c, 707 :: 		
0x0C88	0x0064    LSLPL	R4, R4, #1
;__Lib_MathDouble.c, 708 :: 		
0x0C8A	0x1E5B    SUBPL	R3, R3, #1
;__Lib_MathDouble.c, 710 :: 		
0x0C8C	0x3480    ADDS	R4, #128
;__Lib_MathDouble.c, 711 :: 		
0x0C8E	0xBF24    ITT	CS
;__Lib_MathDouble.c, 712 :: 		
0x0C90	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 713 :: 		
0x0C92	0x0864    LSRCS	R4, R4, #1
;__Lib_MathDouble.c, 715 :: 		
0x0C94	0x3B7E    SUBS	R3, #126
;__Lib_MathDouble.c, 716 :: 		
0x0C96	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 717 :: 		
0x0C98	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 719 :: 		
0x0C9C	0xE00D    BLE	__me_lab_end
;__Lib_MathDouble.c, 721 :: 		
0x0C9E	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 722 :: 		
0x0CA0	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 724 :: 		
0x0CA2	0xEA4F2014  LSR	R0, R4, #8
;__Lib_MathDouble.c, 725 :: 		
0x0CA6	0xF4300000  BICS	R0, R0, #8388608
;__Lib_MathDouble.c, 726 :: 		
0x0CAA	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 727 :: 		
0x0CAE	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 730 :: 		
0x0CB0	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 732 :: 		
__me_ovfl:
0x0CB2	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 733 :: 		
0x0CB4	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 734 :: 		
0x0CB6	0xEA460007  ORR	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 735 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 736 :: 		
0x0CBA	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 738 :: 		
L_end__Mul_FP:
0x0CBE	0xB001    ADD	SP, SP, #4
0x0CC0	0x4770    BX	LR
; end of __Mul_FP
__UnsignedIntegralToFloat:
;__Lib_MathDouble.c, 262 :: 		
0x1278	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 264 :: 		
0x127A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 265 :: 		
0x127C	0xBF08    IT	EQ
;__Lib_MathDouble.c, 267 :: 		
0x127E	0xE00F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 269 :: 		
0x1280	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 271 :: 		
0x1282	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 272 :: 		
0x1286	0xD402    BMI	__me_label_cont
;__Lib_MathDouble.c, 274 :: 		
__me_loop:
0x1288	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 275 :: 		
0x128A	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 277 :: 		
0x128C	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 279 :: 		
__me_label_cont:
0x128E	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 280 :: 		
0x1290	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 281 :: 		
0x1292	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 282 :: 		
0x1294	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 284 :: 		
0x1296	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 285 :: 		
0x1298	0xEA4050C2  ORR	R0, R0, R2, LSL #23
;__Lib_MathDouble.c, 287 :: 		
0x129C	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 288 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 290 :: 		
L_end__UnsignedIntegralToFloat:
0x12A0	0xB001    ADD	SP, SP, #4
0x12A2	0x4770    BX	LR
; end of __UnsignedIntegralToFloat
__Sub_FP:
;__Lib_MathDouble.c, 539 :: 		
0x12A4	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 541 :: 		
0x12A6	0xF0824200  EOR	R2, R2, #-2147483648
;__Lib_MathDouble.c, 542 :: 		
0x12AA	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 544 :: 		
0x12AE	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 545 :: 		
0x12B2	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 546 :: 		
0x12B6	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 547 :: 		
0x12B8	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 549 :: 		
0x12BA	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 550 :: 		
0x12BC	0xBF18    IT	NE
;__Lib_MathDouble.c, 551 :: 		
0x12BE	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 553 :: 		
0x12C2	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 555 :: 		
__me_lab1:
0x12C4	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 557 :: 		
0x12C8	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 559 :: 		
0x12CA	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 561 :: 		
0x12CC	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 562 :: 		
0x12D0	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 563 :: 		
0x12D2	0xBF48    IT	MI
;__Lib_MathDouble.c, 564 :: 		
0x12D4	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 566 :: 		
0x12D6	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 567 :: 		
0x12DA	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 568 :: 		
0x12DE	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 569 :: 		
0x12E0	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 571 :: 		
0x12E2	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 572 :: 		
0x12E4	0xBF14    ITE	NE
;__Lib_MathDouble.c, 573 :: 		
0x12E6	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 574 :: 		
0x12EA	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 576 :: 		
0x12EC	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 578 :: 		
__me_lab2:
0x12EE	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 580 :: 		
0x12F2	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 581 :: 		
0x12F4	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 583 :: 		
0x12F6	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 584 :: 		
0x12FA	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 585 :: 		
0x12FC	0xBF48    IT	MI
;__Lib_MathDouble.c, 586 :: 		
0x12FE	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 588 :: 		
0x1300	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 589 :: 		
0x1302	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 590 :: 		
0x1304	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 591 :: 		
0x1306	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 592 :: 		
0x1308	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 593 :: 		
0x130A	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 594 :: 		
0x130C	0xBF48    IT	MI
;__Lib_MathDouble.c, 595 :: 		
0x130E	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 597 :: 		
0x1310	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 598 :: 		
0x1312	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 599 :: 		
0x1314	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 600 :: 		
0x1318	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 601 :: 		
0x131A	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 602 :: 		
0x131E	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 603 :: 		
0x1320	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 604 :: 		
0x1324	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 606 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 607 :: 		
0x1328	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 608 :: 		
0x132A	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 609 :: 		
0x132C	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 611 :: 		
0x1330	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 612 :: 		
0x1332	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 613 :: 		
0x1334	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 614 :: 		
0x1336	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 615 :: 		
0x133A	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 617 :: 		
__me_loop:
0x133E	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 618 :: 		
0x1342	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 619 :: 		
0x1344	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 621 :: 		
0x1346	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 622 :: 		
0x134A	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 623 :: 		
0x134C	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 624 :: 		
0x1350	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 625 :: 		
0x1354	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 626 :: 		
0x1356	0xBF28    IT	CS
;__Lib_MathDouble.c, 627 :: 		
0x1358	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 628 :: 		
0x135A	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 629 :: 		
0x135E	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 630 :: 		
0x1362	0xBF08    IT	EQ
;__Lib_MathDouble.c, 631 :: 		
0x1364	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 633 :: 		
__me_no_round:
;__Lib_MathDouble.c, 634 :: 		
0x1368	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 635 :: 		
0x136A	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 636 :: 		
0x136C	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 638 :: 		
0x1370	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 639 :: 		
0x1372	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 640 :: 		
0x1374	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 642 :: 		
0x1376	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 643 :: 		
0x137A	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 645 :: 		
0x137E	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 646 :: 		
0x1382	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 647 :: 		
0x1386	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 650 :: 		
0x138A	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 652 :: 		
__me_ovfl1:
0x138C	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 653 :: 		
__me_ovfl0:
0x138E	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 654 :: 		
__me_ovfl:
0x1392	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 655 :: 		
0x1396	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 656 :: 		
0x1398	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 657 :: 		
0x139C	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 658 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 659 :: 		
0x139E	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 661 :: 		
L_end__Sub_FP:
0x13A2	0xB001    ADD	SP, SP, #4
0x13A4	0x4770    BX	LR
; end of __Sub_FP
__FloatToUnsignedIntegral:
;__Lib_MathDouble.c, 45 :: 		
0x118C	0xB081    SUB	SP, SP, #4
0x118E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_MathDouble.c, 47 :: 		
0x1192	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 49 :: 		
0x1194	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 50 :: 		
0x1196	0xD502    BPL	__me_label_pos
;__Lib_MathDouble.c, 51 :: 		
0x1198	0xF7FFFDA8  BL	__FloatToSignedIntegral+0
;__Lib_MathDouble.c, 52 :: 		
0x119C	0xE013    B	__me_endLab
;__Lib_MathDouble.c, 55 :: 		
__me_label_pos:
0x119E	0xEA4F0140  LSL	R1, R0, #1
;__Lib_MathDouble.c, 56 :: 		
0x11A2	0xEA4F6111  LSR	R1, R1, #24
;__Lib_MathDouble.c, 58 :: 		
0x11A6	0x397F    SUBS	R1, #127
;__Lib_MathDouble.c, 59 :: 		
0x11A8	0xBF3C    ITT	CC
;__Lib_MathDouble.c, 60 :: 		
0x11AA	0xF04F0000  MOVCC	R0, #0
;__Lib_MathDouble.c, 62 :: 		
0x11AE	0xE00A    BCC	__me_endLab
;__Lib_MathDouble.c, 64 :: 		
0x11B0	0xF1D1011F  RSBS	R1, R1, #31
;__Lib_MathDouble.c, 65 :: 		
0x11B4	0xD305    BCC	__me_ovfl
;__Lib_MathDouble.c, 67 :: 		
0x11B6	0xEA4F2000  LSL	R0, R0, #8
;__Lib_MathDouble.c, 68 :: 		
0x11BA	0xF0404000  ORR	R0, R0, #-2147483648
;__Lib_MathDouble.c, 70 :: 		
0x11BE	0x40C8    LSRS	R0, R1
;__Lib_MathDouble.c, 73 :: 		
0x11C0	0xE001    B	__me_endLab
;__Lib_MathDouble.c, 75 :: 		
__me_ovfl:
0x11C2	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 76 :: 		
0x11C4	0x1E40    SUBS	R0, R0, #1
;__Lib_MathDouble.c, 78 :: 		
__me_endLab:
;__Lib_MathDouble.c, 79 :: 		
0x11C6	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 82 :: 		
L_end__FloatToUnsignedIntegral:
0x11CA	0xF8DDE000  LDR	LR, [SP, #0]
0x11CE	0xB001    ADD	SP, SP, #4
0x11D0	0x4770    BX	LR
; end of __FloatToUnsignedIntegral
__FloatToSignedIntegral:
;__Lib_MathDouble.c, 4 :: 		
0x0CEC	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 6 :: 		
0x0CEE	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 8 :: 		
0x0CF0	0xEA4F0240  LSL	R2, R0, #1
;__Lib_MathDouble.c, 9 :: 		
0x0CF4	0xEA4F6212  LSR	R2, R2, #24
;__Lib_MathDouble.c, 11 :: 		
0x0CF8	0x3A7F    SUBS	R2, #127
;__Lib_MathDouble.c, 12 :: 		
0x0CFA	0xBF44    ITT	MI
;__Lib_MathDouble.c, 13 :: 		
0x0CFC	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 15 :: 		
0x0D00	0xE011    BMI	__me_lab_end
;__Lib_MathDouble.c, 17 :: 		
0x0D02	0xF1D2021F  RSBS	R2, R2, #31
;__Lib_MathDouble.c, 18 :: 		
0x0D06	0xD909    BLS	__me_ovfl
;__Lib_MathDouble.c, 20 :: 		
0x0D08	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 21 :: 		
0x0D0C	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 23 :: 		
0x0D10	0x40D1    LSRS	R1, R2
;__Lib_MathDouble.c, 25 :: 		
0x0D12	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 26 :: 		
0x0D14	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 27 :: 		
0x0D16	0x4248    RSBMI	R0, R1, #0
;__Lib_MathDouble.c, 28 :: 		
0x0D18	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 31 :: 		
0x0D1A	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 33 :: 		
__me_ovfl:
0x0D1C	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 34 :: 		
0x0D1E	0xF04F4000  MOV	R0, #-2147483648
;__Lib_MathDouble.c, 35 :: 		
0x0D22	0xBF58    IT	PL
;__Lib_MathDouble.c, 36 :: 		
0x0D24	0x1E40    SUBPL	R0, R0, #1
;__Lib_MathDouble.c, 37 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 38 :: 		
0x0D26	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 40 :: 		
L_end__FloatToSignedIntegral:
0x0D2A	0xB001    ADD	SP, SP, #4
0x0D2C	0x4770    BX	LR
; end of __FloatToSignedIntegral
__Div_FP:
;__Lib_MathDouble.c, 743 :: 		
0x11D4	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 745 :: 		
0x11D6	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 746 :: 		
0x11D8	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 747 :: 		
0x11DC	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 748 :: 		
0x11DE	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 749 :: 		
0x11E2	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 751 :: 		
0x11E6	0x0201    LSLS	R1, R0, #8
;__Lib_MathDouble.c, 752 :: 		
0x11E8	0x0043    LSLS	R3, R0, #1
;__Lib_MathDouble.c, 753 :: 		
0x11EA	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 754 :: 		
0x11EC	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 755 :: 		
0x11EE	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 757 :: 		
0x11F2	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 759 :: 		
0x11F6	0xE03B    BEQ	__me_lab_end
;__Lib_MathDouble.c, 761 :: 		
0x11F8	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 762 :: 		
0x11FA	0xD035    BEQ	__me_ovfl
;__Lib_MathDouble.c, 764 :: 		
0x11FC	0xEA5F2402  LSLS	R4, R2, #8
;__Lib_MathDouble.c, 765 :: 		
0x1200	0xEA5F0542  LSLS	R5, R2, #1
;__Lib_MathDouble.c, 766 :: 		
0x1204	0xEA5F6515  LSRS	R5, R5, #24
;__Lib_MathDouble.c, 767 :: 		
0x1208	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 769 :: 		
0x120A	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 770 :: 		
0x120E	0xF04F40FF  MOVEQ	R0, #2139095040
;__Lib_MathDouble.c, 771 :: 		
0x1212	0x4330    ORREQ	R0, R6
;__Lib_MathDouble.c, 773 :: 		
0x1214	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 775 :: 		
0x1216	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 776 :: 		
0x1218	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 778 :: 		
0x121A	0x1B5B    SUBS	R3, R3, R5
;__Lib_MathDouble.c, 781 :: 		
0x121C	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 782 :: 		
0x121E	0x2720    MOVS	R7, #32
;__Lib_MathDouble.c, 783 :: 		
0x1220	0x0864    LSRS	R4, R4, #1
;__Lib_MathDouble.c, 784 :: 		
0x1222	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 786 :: 		
__me_fdiv_:
;__Lib_MathDouble.c, 788 :: 		
0x1224	0x42A1    CMP	R1, R4
;__Lib_MathDouble.c, 790 :: 		
0x1226	0xEB400000  ADC	R0, R0, R0, LSL #0
;__Lib_MathDouble.c, 791 :: 		
0x122A	0xBF28    IT	CS
;__Lib_MathDouble.c, 792 :: 		
0x122C	0x1B09    SUBCS	R1, R1, R4
;__Lib_MathDouble.c, 793 :: 		
0x122E	0x1E7F    SUBS	R7, R7, #1
;__Lib_MathDouble.c, 794 :: 		
0x1230	0xD004    BEQ	__me_flb1_
;__Lib_MathDouble.c, 795 :: 		
0x1232	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 796 :: 		
0x1234	0xBF18    IT	NE
;__Lib_MathDouble.c, 797 :: 		
0x1236	0x0049    LSLNE	R1, R1, #1
;__Lib_MathDouble.c, 798 :: 		
0x1238	0xD1F4    BNE	__me_fdiv_
;__Lib_MathDouble.c, 800 :: 		
0x123A	0x40B8    LSLS	R0, R7
;__Lib_MathDouble.c, 802 :: 		
__me_flb1_:
0x123C	0xF0104F00  TST	R0, #-2147483648
;__Lib_MathDouble.c, 803 :: 		
0x1240	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 804 :: 		
0x1242	0x0040    LSLEQ	R0, R0, #1
;__Lib_MathDouble.c, 805 :: 		
0x1244	0xF1B30301  SUBSEQ	R3, R3, #1
;__Lib_MathDouble.c, 807 :: 		
0x1248	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 808 :: 		
0x124A	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 809 :: 		
0x124C	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 810 :: 		
0x124E	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 812 :: 		
__me_flb2_:
0x1250	0x337F    ADDS	R3, #127
;__Lib_MathDouble.c, 813 :: 		
0x1252	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 814 :: 		
0x1254	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 816 :: 		
0x1258	0xE00A    BLE	__me_lab_end
;__Lib_MathDouble.c, 818 :: 		
0x125A	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 819 :: 		
0x125C	0xD204    BCS	__me_ovfl
;__Lib_MathDouble.c, 821 :: 		
0x125E	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 822 :: 		
0x1260	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 823 :: 		
0x1264	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 826 :: 		
0x1266	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 828 :: 		
__me_ovfl:
0x1268	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 829 :: 		
0x126A	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 830 :: 		
0x126C	0xEA560007  ORRS	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 831 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 832 :: 		
0x1270	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 834 :: 		
L_end__Div_FP:
0x1274	0xB001    ADD	SP, SP, #4
0x1276	0x4770    BX	LR
; end of __Div_FP
__Add_FP:
;__Lib_MathDouble.c, 413 :: 		
0x0DA8	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 415 :: 		
0x0DAA	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 417 :: 		
0x0DAE	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 418 :: 		
0x0DB2	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 419 :: 		
0x0DB6	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 420 :: 		
0x0DB8	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 422 :: 		
0x0DBA	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 423 :: 		
0x0DBC	0xBF18    IT	NE
;__Lib_MathDouble.c, 424 :: 		
0x0DBE	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 426 :: 		
0x0DC2	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 428 :: 		
__me_lab1:
0x0DC4	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 430 :: 		
0x0DC8	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 432 :: 		
0x0DCA	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 434 :: 		
0x0DCC	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 435 :: 		
0x0DD0	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 436 :: 		
0x0DD2	0xBF48    IT	MI
;__Lib_MathDouble.c, 437 :: 		
0x0DD4	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 439 :: 		
0x0DD6	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 440 :: 		
0x0DDA	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 441 :: 		
0x0DDE	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 442 :: 		
0x0DE0	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 444 :: 		
0x0DE2	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 445 :: 		
0x0DE4	0xBF14    ITE	NE
;__Lib_MathDouble.c, 446 :: 		
0x0DE6	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 447 :: 		
0x0DEA	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 449 :: 		
0x0DEC	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 451 :: 		
__me_lab2:
0x0DEE	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 453 :: 		
0x0DF2	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 454 :: 		
0x0DF4	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 456 :: 		
0x0DF6	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 457 :: 		
0x0DFA	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 458 :: 		
0x0DFC	0xBF48    IT	MI
;__Lib_MathDouble.c, 459 :: 		
0x0DFE	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 461 :: 		
0x0E00	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 462 :: 		
0x0E02	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 463 :: 		
0x0E04	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 464 :: 		
0x0E06	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 465 :: 		
0x0E08	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 466 :: 		
0x0E0A	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 467 :: 		
0x0E0C	0xBF48    IT	MI
;__Lib_MathDouble.c, 468 :: 		
0x0E0E	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 470 :: 		
0x0E10	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 471 :: 		
0x0E12	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 472 :: 		
0x0E14	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 473 :: 		
0x0E18	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 474 :: 		
0x0E1A	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 475 :: 		
0x0E1E	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 476 :: 		
0x0E20	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 477 :: 		
0x0E24	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 479 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 480 :: 		
0x0E28	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 481 :: 		
0x0E2A	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 482 :: 		
0x0E2C	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 484 :: 		
0x0E30	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 485 :: 		
0x0E32	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 486 :: 		
0x0E34	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 487 :: 		
0x0E36	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 488 :: 		
0x0E3A	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 490 :: 		
__me_loop:
0x0E3E	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 491 :: 		
0x0E42	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 492 :: 		
0x0E44	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 494 :: 		
0x0E46	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 495 :: 		
0x0E4A	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 496 :: 		
0x0E4C	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 497 :: 		
0x0E50	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 498 :: 		
0x0E54	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 499 :: 		
0x0E56	0xBF28    IT	CS
;__Lib_MathDouble.c, 500 :: 		
0x0E58	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 501 :: 		
0x0E5A	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 502 :: 		
0x0E5E	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 503 :: 		
0x0E62	0xBF08    IT	EQ
;__Lib_MathDouble.c, 504 :: 		
0x0E64	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 506 :: 		
__me_no_round:
;__Lib_MathDouble.c, 507 :: 		
0x0E68	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 508 :: 		
0x0E6A	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 509 :: 		
0x0E6C	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 511 :: 		
0x0E70	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 512 :: 		
0x0E72	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 513 :: 		
0x0E74	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 515 :: 		
0x0E76	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 516 :: 		
0x0E7A	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 518 :: 		
0x0E7E	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 519 :: 		
0x0E82	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 520 :: 		
0x0E86	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 523 :: 		
0x0E8A	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 525 :: 		
__me_ovfl1:
0x0E8C	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 526 :: 		
__me_ovfl0:
0x0E8E	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 527 :: 		
__me_ovfl:
0x0E92	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 528 :: 		
0x0E96	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 529 :: 		
0x0E98	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 530 :: 		
0x0E9C	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 531 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 532 :: 		
0x0E9E	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 534 :: 		
L_end__Add_FP:
0x0EA2	0xB001    ADD	SP, SP, #4
0x0EA4	0x4770    BX	LR
; end of __Add_FP
_mikrobus_logWrite:
;easymx_v7_STM32F107VC.c, 319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
; format start address is: 4 (R1)
; data_ start address is: 0 (R0)
0x1984	0xB083    SUB	SP, SP, #12
0x1986	0xF8CDE000  STR	LR, [SP, #0]
0x198A	0x4602    MOV	R2, R0
; format end address is: 4 (R1)
; data_ end address is: 0 (R0)
; data_ start address is: 8 (R2)
; format start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 321 :: 		uint8_t *ptr = data_;
; ptr start address is: 0 (R0)
0x198C	0x4610    MOV	R0, R2
; data_ end address is: 8 (R2)
;easymx_v7_STM32F107VC.c, 322 :: 		uint8_t row = 13;
0x198E	0x220D    MOVS	R2, #13
0x1990	0xF88D2008  STRB	R2, [SP, #8]
0x1994	0x220A    MOVS	R2, #10
0x1996	0xF88D2009  STRB	R2, [SP, #9]
;easymx_v7_STM32F107VC.c, 323 :: 		uint8_t line = 10;
;easymx_v7_STM32F107VC.c, 324 :: 		switch( format )
0x199A	0xE01F    B	L_mikrobus_logWrite95
; format end address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite97:
;easymx_v7_STM32F107VC.c, 327 :: 		_log_write( ptr );
; ptr end address is: 0 (R0)
0x199C	0xF7FFF9F4  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 328 :: 		break;
0x19A0	0xE023    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite98:
;easymx_v7_STM32F107VC.c, 330 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite99:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x19A2	0x7802    LDRB	R2, [R0, #0]
0x19A4	0xB12A    CBZ	R2, L_mikrobus_logWrite100
;easymx_v7_STM32F107VC.c, 332 :: 		_log_write( ptr );
0x19A6	0x9001    STR	R0, [SP, #4]
0x19A8	0xF7FFF9EE  BL	easymx_v7_STM32F107VC__log_write+0
0x19AC	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 333 :: 		ptr++;
0x19AE	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 334 :: 		}
; ptr end address is: 0 (R0)
0x19B0	0xE7F7    B	L_mikrobus_logWrite99
L_mikrobus_logWrite100:
;easymx_v7_STM32F107VC.c, 335 :: 		break;
0x19B2	0xE01A    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 336 :: 		case _LOG_LINE :
L_mikrobus_logWrite101:
;easymx_v7_STM32F107VC.c, 337 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite102:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x19B4	0x7802    LDRB	R2, [R0, #0]
0x19B6	0xB12A    CBZ	R2, L_mikrobus_logWrite103
;easymx_v7_STM32F107VC.c, 339 :: 		_log_write( ptr );
0x19B8	0x9001    STR	R0, [SP, #4]
0x19BA	0xF7FFF9E5  BL	easymx_v7_STM32F107VC__log_write+0
0x19BE	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 340 :: 		ptr++;
0x19C0	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 341 :: 		}
; ptr end address is: 0 (R0)
0x19C2	0xE7F7    B	L_mikrobus_logWrite102
L_mikrobus_logWrite103:
;easymx_v7_STM32F107VC.c, 342 :: 		_log_write( &row );
0x19C4	0xAA02    ADD	R2, SP, #8
0x19C6	0x4610    MOV	R0, R2
0x19C8	0xF7FFF9DE  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 343 :: 		_log_write( &line );
0x19CC	0xF10D0209  ADD	R2, SP, #9
0x19D0	0x4610    MOV	R0, R2
0x19D2	0xF7FFF9D9  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 344 :: 		break;
0x19D6	0xE008    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 345 :: 		default :
L_mikrobus_logWrite104:
;easymx_v7_STM32F107VC.c, 346 :: 		return _MIKROBUS_ERR_LOG;
0x19D8	0x2006    MOVS	R0, #6
0x19DA	0xE007    B	L_end_mikrobus_logWrite
;easymx_v7_STM32F107VC.c, 347 :: 		}
L_mikrobus_logWrite95:
; ptr start address is: 0 (R0)
; format start address is: 4 (R1)
0x19DC	0x2900    CMP	R1, #0
0x19DE	0xD0DD    BEQ	L_mikrobus_logWrite97
0x19E0	0x2901    CMP	R1, #1
0x19E2	0xD0DE    BEQ	L_mikrobus_logWrite98
0x19E4	0x2902    CMP	R1, #2
0x19E6	0xD0E5    BEQ	L_mikrobus_logWrite101
; format end address is: 4 (R1)
; ptr end address is: 0 (R0)
0x19E8	0xE7F6    B	L_mikrobus_logWrite104
L_mikrobus_logWrite96:
;easymx_v7_STM32F107VC.c, 348 :: 		return 0;
0x19EA	0x2000    MOVS	R0, #0
;easymx_v7_STM32F107VC.c, 349 :: 		}
L_end_mikrobus_logWrite:
0x19EC	0xF8DDE000  LDR	LR, [SP, #0]
0x19F0	0xB003    ADD	SP, SP, #12
0x19F2	0x4770    BX	LR
; end of _mikrobus_logWrite
easymx_v7_STM32F107VC__log_write:
;__em_f107vc_log.c, 17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
; data_ start address is: 0 (R0)
0x0D88	0xB081    SUB	SP, SP, #4
0x0D8A	0xF8CDE000  STR	LR, [SP, #0]
; data_ end address is: 0 (R0)
; data_ start address is: 0 (R0)
;__em_f107vc_log.c, 19 :: 		logger( *data_ );
0x0D8E	0x7801    LDRB	R1, [R0, #0]
; data_ end address is: 0 (R0)
0x0D90	0xB2CC    UXTB	R4, R1
0x0D92	0xB2A0    UXTH	R0, R4
0x0D94	0x4C03    LDR	R4, [PC, #12]
0x0D96	0x6824    LDR	R4, [R4, #0]
0x0D98	0x47A0    BLX	R4
;__em_f107vc_log.c, 20 :: 		return 0;
0x0D9A	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 21 :: 		}
L_end__log_write:
0x0D9C	0xF8DDE000  LDR	LR, [SP, #0]
0x0DA0	0xB001    ADD	SP, SP, #4
0x0DA2	0x4770    BX	LR
0x0DA4	0x00802000  	_logger+0
; end of easymx_v7_STM32F107VC__log_write
_FloatToStr:
;__Lib_Conversions.c, 631 :: 		
; str start address is: 4 (R1)
; fnum start address is: 0 (R0)
0x1A38	0xB082    SUB	SP, SP, #8
0x1A3A	0xF8CDE000  STR	LR, [SP, #0]
0x1A3E	0x4602    MOV	R2, R0
0x1A40	0x460C    MOV	R4, R1
; str end address is: 4 (R1)
; fnum end address is: 0 (R0)
; fnum start address is: 8 (R2)
; str start address is: 16 (R4)
;__Lib_Conversions.c, 633 :: 		
; bpoint start address is: 0 (R0)
0x1A42	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 635 :: 		
; dexpon start address is: 4 (R1)
0x1A44	0x2100    MOVS	R1, #0
0x1A46	0xB249    SXTB	R1, R1
;__Lib_Conversions.c, 638 :: 		
0x1A48	0x9201    STR	R2, [SP, #4]
; fnum end address is: 8 (R2)
;__Lib_Conversions.c, 639 :: 		
0x1A4A	0x9A01    LDR	R2, [SP, #4]
0x1A4C	0xF1B23FFF  CMP	R2, #-1
0x1A50	0xD106    BNE	L_FloatToStr117
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
;__Lib_Conversions.c, 640 :: 		
0x1A52	0x4A71    LDR	R2, [PC, #452]
0x1A54	0x4611    MOV	R1, R2
0x1A56	0x4620    MOV	R0, R4
; str end address is: 16 (R4)
0x1A58	0xF7FFFA26  BL	_strcpy+0
;__Lib_Conversions.c, 641 :: 		
0x1A5C	0x2003    MOVS	R0, #3
0x1A5E	0xE0D7    B	L_end_FloatToStr
;__Lib_Conversions.c, 642 :: 		
L_FloatToStr117:
;__Lib_Conversions.c, 643 :: 		
; str start address is: 16 (R4)
; i start address is: 20 (R5)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x1A60	0x2501    MOVS	R5, #1
;__Lib_Conversions.c, 644 :: 		
0x1A62	0xAA01    ADD	R2, SP, #4
0x1A64	0x1CD2    ADDS	R2, R2, #3
0x1A66	0x7812    LDRB	R2, [R2, #0]
0x1A68	0xF0020280  AND	R2, R2, #128
0x1A6C	0xB2D2    UXTB	R2, R2
0x1A6E	0xB172    CBZ	R2, L__FloatToStr179
;__Lib_Conversions.c, 645 :: 		
0x1A70	0xAA01    ADD	R2, SP, #4
0x1A72	0x1CD3    ADDS	R3, R2, #3
0x1A74	0x781A    LDRB	R2, [R3, #0]
0x1A76	0xF0820280  EOR	R2, R2, #128
0x1A7A	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 646 :: 		
0x1A7C	0x1C6A    ADDS	R2, R5, #1
; i end address is: 20 (R5)
; i start address is: 12 (R3)
0x1A7E	0xB2D3    UXTB	R3, R2
;__Lib_Conversions.c, 647 :: 		
0x1A80	0x222D    MOVS	R2, #45
0x1A82	0x7022    STRB	R2, [R4, #0]
0x1A84	0x1C62    ADDS	R2, R4, #1
0x1A86	0x4614    MOV	R4, R2
; i end address is: 12 (R3)
; str end address is: 16 (R4)
0x1A88	0xB2DE    UXTB	R6, R3
0x1A8A	0x46A2    MOV	R10, R4
;__Lib_Conversions.c, 648 :: 		
0x1A8C	0xE001    B	L_FloatToStr118
L__FloatToStr179:
;__Lib_Conversions.c, 644 :: 		
0x1A8E	0x46A2    MOV	R10, R4
0x1A90	0xB2EE    UXTB	R6, R5
;__Lib_Conversions.c, 648 :: 		
L_FloatToStr118:
;__Lib_Conversions.c, 649 :: 		
; str start address is: 40 (R10)
; i start address is: 24 (R6)
0x1A92	0x9A01    LDR	R2, [SP, #4]
0x1A94	0xB932    CBNZ	R2, L_FloatToStr119
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
; i end address is: 24 (R6)
;__Lib_Conversions.c, 650 :: 		
0x1A96	0x4A61    LDR	R2, [PC, #388]
0x1A98	0x4611    MOV	R1, R2
0x1A9A	0x4650    MOV	R0, R10
; str end address is: 40 (R10)
0x1A9C	0xF7FFFA04  BL	_strcpy+0
;__Lib_Conversions.c, 651 :: 		
0x1AA0	0x2000    MOVS	R0, #0
0x1AA2	0xE0B5    B	L_end_FloatToStr
;__Lib_Conversions.c, 652 :: 		
L_FloatToStr119:
;__Lib_Conversions.c, 653 :: 		
; str start address is: 40 (R10)
; i start address is: 24 (R6)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x1AA4	0x9A01    LDR	R2, [SP, #4]
0x1AA6	0xF1B24FFF  CMP	R2, #2139095040
0x1AAA	0xD106    BNE	L_FloatToStr120
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
;__Lib_Conversions.c, 654 :: 		
0x1AAC	0x4A5C    LDR	R2, [PC, #368]
0x1AAE	0x4611    MOV	R1, R2
0x1AB0	0x4650    MOV	R0, R10
; str end address is: 40 (R10)
0x1AB2	0xF7FFF9F9  BL	_strcpy+0
;__Lib_Conversions.c, 655 :: 		
0x1AB6	0xB2F0    UXTB	R0, R6
; i end address is: 24 (R6)
0x1AB8	0xE0AA    B	L_end_FloatToStr
;__Lib_Conversions.c, 656 :: 		
L_FloatToStr120:
;__Lib_Conversions.c, 664 :: 		
; str start address is: 40 (R10)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x1ABA	0xFA5FF980  UXTB	R9, R0
; dexpon end address is: 4 (R1)
; str end address is: 40 (R10)
0x1ABE	0xFA4FF881  SXTB	R8, R1
L_FloatToStr121:
; bpoint end address is: 0 (R0)
; str start address is: 40 (R10)
; dexpon start address is: 32 (R8)
; bpoint start address is: 36 (R9)
0x1AC2	0x9A01    LDR	R2, [SP, #4]
0x1AC4	0xF04F507E  MOV	R0, #1065353216
0x1AC8	0xF7FFFA1C  BL	__Compare_FP+0
0x1ACC	0xF2400000  MOVW	R0, #0
0x1AD0	0xDD00    BLE	L__FloatToStr239
0x1AD2	0x2001    MOVS	R0, #1
L__FloatToStr239:
0x1AD4	0xB148    CBZ	R0, L_FloatToStr122
;__Lib_Conversions.c, 665 :: 		
0x1AD6	0x9A01    LDR	R2, [SP, #4]
0x1AD8	0x4852    LDR	R0, [PC, #328]
0x1ADA	0xF7FFF8AD  BL	__Mul_FP+0
0x1ADE	0x9001    STR	R0, [SP, #4]
;__Lib_Conversions.c, 666 :: 		
0x1AE0	0xF1A80801  SUB	R8, R8, #1
0x1AE4	0xFA4FF888  SXTB	R8, R8
;__Lib_Conversions.c, 667 :: 		
0x1AE8	0xE7EB    B	L_FloatToStr121
L_FloatToStr122:
;__Lib_Conversions.c, 672 :: 		
; str end address is: 40 (R10)
; dexpon end address is: 32 (R8)
L_FloatToStr123:
; bpoint end address is: 36 (R9)
; bpoint start address is: 36 (R9)
; dexpon start address is: 32 (R8)
; str start address is: 40 (R10)
0x1AEA	0x9A01    LDR	R2, [SP, #4]
0x1AEC	0x484D    LDR	R0, [PC, #308]
0x1AEE	0xF7FFFA09  BL	__Compare_FP+0
0x1AF2	0xF2400000  MOVW	R0, #0
0x1AF6	0xDC00    BGT	L__FloatToStr240
0x1AF8	0x2001    MOVS	R0, #1
L__FloatToStr240:
0x1AFA	0xB148    CBZ	R0, L_FloatToStr124
;__Lib_Conversions.c, 673 :: 		
0x1AFC	0x9A01    LDR	R2, [SP, #4]
0x1AFE	0x484A    LDR	R0, [PC, #296]
0x1B00	0xF7FFF89A  BL	__Mul_FP+0
0x1B04	0x9001    STR	R0, [SP, #4]
;__Lib_Conversions.c, 674 :: 		
0x1B06	0xF1080801  ADD	R8, R8, #1
0x1B0A	0xFA4FF888  SXTB	R8, R8
;__Lib_Conversions.c, 675 :: 		
0x1B0E	0xE7EC    B	L_FloatToStr123
L_FloatToStr124:
;__Lib_Conversions.c, 680 :: 		
0x1B10	0x9A01    LDR	R2, [SP, #4]
0x1B12	0x0052    LSLS	R2, R2, #1
0x1B14	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 689 :: 		
0x1B16	0xAA01    ADD	R2, SP, #4
0x1B18	0x1CD2    ADDS	R2, R2, #3
0x1B1A	0x7812    LDRB	R2, [R2, #0]
0x1B1C	0x3A7F    SUBS	R2, #127
; d start address is: 0 (R0)
0x1B1E	0xB2D0    UXTB	R0, R2
;__Lib_Conversions.c, 692 :: 		
0x1B20	0xAA01    ADD	R2, SP, #4
0x1B22	0x1CD3    ADDS	R3, R2, #3
0x1B24	0x2201    MOVS	R2, #1
0x1B26	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 693 :: 		
0x1B28	0x9A01    LDR	R2, [SP, #4]
0x1B2A	0x4082    LSLS	R2, R0
; d end address is: 0 (R0)
0x1B2C	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 694 :: 		
0x1B2E	0xAA01    ADD	R2, SP, #4
0x1B30	0x1CD2    ADDS	R2, R2, #3
0x1B32	0x7812    LDRB	R2, [R2, #0]
0x1B34	0x3230    ADDS	R2, #48
0x1B36	0xF88A2000  STRB	R2, [R10, #0]
0x1B3A	0xF10A0001  ADD	R0, R10, #1
; str end address is: 40 (R10)
; str start address is: 0 (R0)
;__Lib_Conversions.c, 695 :: 		
0x1B3E	0xF1B80F01  CMP	R8, #1
0x1B42	0xDB06    BLT	L__FloatToStr178
0x1B44	0xF1B80F06  CMP	R8, #6
0x1B48	0xDC03    BGT	L__FloatToStr177
0x1B4A	0x4605    MOV	R5, R0
; bpoint end address is: 36 (R9)
0x1B4C	0xFA5FF189  UXTB	R1, R9
0x1B50	0xE003    B	L_FloatToStr127
L__FloatToStr178:
L__FloatToStr177:
;__Lib_Conversions.c, 696 :: 		
0x1B52	0x222E    MOVS	R2, #46
0x1B54	0x7002    STRB	R2, [R0, #0]
0x1B56	0x1C45    ADDS	R5, R0, #1
; str end address is: 0 (R0)
; str start address is: 20 (R5)
;__Lib_Conversions.c, 697 :: 		
; bpoint start address is: 4 (R1)
0x1B58	0x2101    MOVS	R1, #1
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 698 :: 		
L_FloatToStr127:
;__Lib_Conversions.c, 699 :: 		
; bpoint start address is: 4 (R1)
; str start address is: 20 (R5)
; d start address is: 0 (R0)
0x1B5A	0x2006    MOVS	R0, #6
; dexpon end address is: 32 (R8)
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
; d end address is: 0 (R0)
0x1B5C	0xFA4FF488  SXTB	R4, R8
L_FloatToStr128:
; d start address is: 0 (R0)
; str start address is: 20 (R5)
; bpoint start address is: 4 (R1)
; dexpon start address is: 16 (R4)
0x1B60	0xB300    CBZ	R0, L_FloatToStr129
;__Lib_Conversions.c, 700 :: 		
0x1B62	0xAA01    ADD	R2, SP, #4
0x1B64	0x1CD3    ADDS	R3, R2, #3
0x1B66	0x2200    MOVS	R2, #0
0x1B68	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 701 :: 		
0x1B6A	0x9A01    LDR	R2, [SP, #4]
0x1B6C	0x0093    LSLS	R3, R2, #2
0x1B6E	0x9A01    LDR	R2, [SP, #4]
0x1B70	0x18D2    ADDS	R2, R2, R3
0x1B72	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 702 :: 		
0x1B74	0x9A01    LDR	R2, [SP, #4]
0x1B76	0x0052    LSLS	R2, R2, #1
0x1B78	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 703 :: 		
0x1B7A	0xAA01    ADD	R2, SP, #4
0x1B7C	0x1CD2    ADDS	R2, R2, #3
0x1B7E	0x7812    LDRB	R2, [R2, #0]
0x1B80	0x3230    ADDS	R2, #48
0x1B82	0x702A    STRB	R2, [R5, #0]
0x1B84	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 704 :: 		
0x1B86	0xB951    CBNZ	R1, L__FloatToStr181
;__Lib_Conversions.c, 705 :: 		
0x1B88	0x1E62    SUBS	R2, R4, #1
0x1B8A	0xB252    SXTB	R2, R2
; dexpon end address is: 16 (R4)
; dexpon start address is: 12 (R3)
0x1B8C	0xB253    SXTB	R3, R2
0x1B8E	0xB922    CBNZ	R2, L__FloatToStr180
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 706 :: 		
0x1B90	0x222E    MOVS	R2, #46
0x1B92	0x702A    STRB	R2, [R5, #0]
0x1B94	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 707 :: 		
; bpoint start address is: 4 (R1)
0x1B96	0x2101    MOVS	R1, #1
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 708 :: 		
0x1B98	0xE7FF    B	L_FloatToStr132
L__FloatToStr180:
;__Lib_Conversions.c, 705 :: 		
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr132:
; bpoint start address is: 4 (R1)
; str start address is: 20 (R5)
0x1B9A	0xB25C    SXTB	R4, R3
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
; dexpon end address is: 12 (R3)
0x1B9C	0xE7FF    B	L_FloatToStr131
L__FloatToStr181:
;__Lib_Conversions.c, 704 :: 		
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr131:
;__Lib_Conversions.c, 699 :: 		
; str start address is: 20 (R5)
; bpoint start address is: 4 (R1)
; dexpon start address is: 16 (R4)
0x1B9E	0x1E40    SUBS	R0, R0, #1
0x1BA0	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 709 :: 		
; bpoint end address is: 4 (R1)
; d end address is: 0 (R0)
0x1BA2	0xE7DD    B	L_FloatToStr128
L_FloatToStr129:
;__Lib_Conversions.c, 710 :: 		
0x1BA4	0x4629    MOV	R1, R5
; dexpon end address is: 16 (R4)
0x1BA6	0xB260    SXTB	R0, R4
L_FloatToStr133:
; str end address is: 20 (R5)
; dexpon start address is: 0 (R0)
; str start address is: 4 (R1)
0x1BA8	0x1E4A    SUBS	R2, R1, #1
0x1BAA	0x7812    LDRB	R2, [R2, #0]
0x1BAC	0x2A30    CMP	R2, #48
0x1BAE	0xD101    BNE	L_FloatToStr134
;__Lib_Conversions.c, 711 :: 		
0x1BB0	0x1E49    SUBS	R1, R1, #1
0x1BB2	0xE7F9    B	L_FloatToStr133
L_FloatToStr134:
;__Lib_Conversions.c, 712 :: 		
0x1BB4	0x1E4A    SUBS	R2, R1, #1
0x1BB6	0x7812    LDRB	R2, [R2, #0]
0x1BB8	0x2A2E    CMP	R2, #46
0x1BBA	0xD101    BNE	L__FloatToStr182
;__Lib_Conversions.c, 713 :: 		
0x1BBC	0x1E49    SUBS	R1, R1, #1
; str end address is: 4 (R1)
0x1BBE	0xE7FF    B	L_FloatToStr135
L__FloatToStr182:
;__Lib_Conversions.c, 712 :: 		
;__Lib_Conversions.c, 713 :: 		
L_FloatToStr135:
;__Lib_Conversions.c, 714 :: 		
; str start address is: 4 (R1)
0x1BC0	0xB310    CBZ	R0, L__FloatToStr185
;__Lib_Conversions.c, 715 :: 		
0x1BC2	0x2265    MOVS	R2, #101
0x1BC4	0x700A    STRB	R2, [R1, #0]
0x1BC6	0x1C49    ADDS	R1, R1, #1
;__Lib_Conversions.c, 716 :: 		
0x1BC8	0x2800    CMP	R0, #0
0x1BCA	0xDA06    BGE	L__FloatToStr183
;__Lib_Conversions.c, 717 :: 		
0x1BCC	0x222D    MOVS	R2, #45
0x1BCE	0x700A    STRB	R2, [R1, #0]
0x1BD0	0x1C49    ADDS	R1, R1, #1
;__Lib_Conversions.c, 718 :: 		
0x1BD2	0x4242    RSBS	R2, R0, #0
0x1BD4	0xB250    SXTB	R0, R2
; dexpon end address is: 0 (R0)
; str end address is: 4 (R1)
0x1BD6	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
0x1BD8	0xE000    B	L_FloatToStr137
L__FloatToStr183:
;__Lib_Conversions.c, 716 :: 		
0x1BDA	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
L_FloatToStr137:
;__Lib_Conversions.c, 720 :: 		
; dexpon start address is: 12 (R3)
; str start address is: 4 (R1)
; d start address is: 0 (R0)
0x1BDC	0xB2D8    UXTB	R0, R3
;__Lib_Conversions.c, 721 :: 		
0x1BDE	0xB2DA    UXTB	R2, R3
; dexpon end address is: 12 (R3)
0x1BE0	0x2A09    CMP	R2, #9
0x1BE2	0xD907    BLS	L__FloatToStr184
;__Lib_Conversions.c, 722 :: 		
0x1BE4	0x220A    MOVS	R2, #10
0x1BE6	0xFBB0F2F2  UDIV	R2, R0, R2
0x1BEA	0xB2D2    UXTB	R2, R2
0x1BEC	0x3230    ADDS	R2, #48
0x1BEE	0x700A    STRB	R2, [R1, #0]
0x1BF0	0x1C49    ADDS	R1, R1, #1
; str end address is: 4 (R1)
0x1BF2	0xE7FF    B	L_FloatToStr138
L__FloatToStr184:
;__Lib_Conversions.c, 721 :: 		
;__Lib_Conversions.c, 722 :: 		
L_FloatToStr138:
;__Lib_Conversions.c, 723 :: 		
; str start address is: 4 (R1)
0x1BF4	0x230A    MOVS	R3, #10
0x1BF6	0xFBB0F2F3  UDIV	R2, R0, R3
0x1BFA	0xFB030212  MLS	R2, R3, R2, R0
0x1BFE	0xB2D2    UXTB	R2, R2
; d end address is: 0 (R0)
0x1C00	0x3230    ADDS	R2, #48
0x1C02	0x700A    STRB	R2, [R1, #0]
0x1C04	0x1C48    ADDS	R0, R1, #1
; str end address is: 4 (R1)
; str start address is: 0 (R0)
; str end address is: 0 (R0)
;__Lib_Conversions.c, 724 :: 		
0x1C06	0xE000    B	L_FloatToStr136
L__FloatToStr185:
;__Lib_Conversions.c, 714 :: 		
0x1C08	0x4608    MOV	R0, R1
;__Lib_Conversions.c, 724 :: 		
L_FloatToStr136:
;__Lib_Conversions.c, 725 :: 		
; str start address is: 0 (R0)
0x1C0A	0x2200    MOVS	R2, #0
0x1C0C	0x7002    STRB	R2, [R0, #0]
; str end address is: 0 (R0)
;__Lib_Conversions.c, 726 :: 		
0x1C0E	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 727 :: 		
L_end_FloatToStr:
0x1C10	0xF8DDE000  LDR	LR, [SP, #0]
0x1C14	0xB002    ADD	SP, SP, #8
0x1C16	0x4770    BX	LR
0x1C18	0x00252000  	?lstr1___Lib_Conversions+0
0x1C1C	0x00292000  	?lstr2___Lib_Conversions+0
0x1C20	0x002B2000  	?lstr3___Lib_Conversions+0
0x1C24	0x00004120  	#1092616192
0x1C28	0xCCCD3DCC  	#1036831949
; end of _FloatToStr
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x0EA8	0xB081    SUB	SP, SP, #4
0x0EAA	0x9100    STR	R1, [SP, #0]
0x0EAC	0x4601    MOV	R1, R0
0x0EAE	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x0EB0	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x0EB2	0x461C    MOV	R4, R3
0x0EB4	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x0EB6	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x0EB8	0x4603    MOV	R3, R0
0x0EBA	0x1C42    ADDS	R2, R0, #1
0x0EBC	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x0EBE	0x781A    LDRB	R2, [R3, #0]
0x0EC0	0x7022    STRB	R2, [R4, #0]
0x0EC2	0x7822    LDRB	R2, [R4, #0]
0x0EC4	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x0EC6	0x462B    MOV	R3, R5
0x0EC8	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x0ECA	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x0ECC	0xB001    ADD	SP, SP, #4
0x0ECE	0x4770    BX	LR
; end of _strcpy
__Compare_FP:
;__Lib_MathDouble.c, 839 :: 		
0x0F04	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 841 :: 		
0x0F06	0xB510    PUSH	(R4, R14)
;__Lib_MathDouble.c, 843 :: 		
0x0F08	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 844 :: 		
0x0F0A	0xBF08    IT	EQ
;__Lib_MathDouble.c, 846 :: 		
0x0F0C	0xE02A    BEQ	__me_lab_end
;__Lib_MathDouble.c, 848 :: 		
0x0F0E	0xEA400402  ORR	R4, R0, R2, LSL #0
;__Lib_MathDouble.c, 849 :: 		
0x0F12	0xEA4F0444  LSL	R4, R4, #1
;__Lib_MathDouble.c, 850 :: 		
0x0F16	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 851 :: 		
0x0F18	0xBF08    IT	EQ
;__Lib_MathDouble.c, 853 :: 		
0x0F1A	0xE023    BEQ	__me_lab_end
;__Lib_MathDouble.c, 855 :: 		
0x0F1C	0x0044    LSLS	R4, R0, #1
;__Lib_MathDouble.c, 856 :: 		
0x0F1E	0xD104    BNE	__me_ct2_
;__Lib_MathDouble.c, 858 :: 		
0x0F20	0x4294    CMP	R4, R2
;__Lib_MathDouble.c, 859 :: 		
0x0F22	0xD401    BMI	__me_labop2_pos
;__Lib_MathDouble.c, 860 :: 		
0x0F24	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 861 :: 		
0x0F26	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 862 :: 		
__me_labop2_pos:
;__Lib_MathDouble.c, 864 :: 		
0x0F28	0xE01C    B	__me_lab_end
;__Lib_MathDouble.c, 866 :: 		
__me_ct2_:
0x0F2A	0xEA4F0440  LSL	R4, R0, #1
;__Lib_MathDouble.c, 867 :: 		
0x0F2E	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 868 :: 		
0x0F32	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 869 :: 		
0x0F34	0xD10A    BNE	__me_ct1_
;__Lib_MathDouble.c, 870 :: 		
0x0F36	0xEA4F0442  LSL	R4, R2, #1
;__Lib_MathDouble.c, 871 :: 		
0x0F3A	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 872 :: 		
0x0F3E	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 873 :: 		
0x0F40	0xD104    BNE	__me_ct1_
;__Lib_MathDouble.c, 875 :: 		
0x0F42	0xEA4F74D2  LSR	R4, R2, #31
;__Lib_MathDouble.c, 876 :: 		
0x0F46	0xEBB434D0  SUBS	R4, R4, R0, LSR #31
;__Lib_MathDouble.c, 878 :: 		
0x0F4A	0xE00B    B	__me_lab_end
;__Lib_MathDouble.c, 880 :: 		
__me_ct1_:
0x0F4C	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 881 :: 		
0x0F4E	0xD406    BMI	__me_op2_m
;__Lib_MathDouble.c, 883 :: 		
0x0F50	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 884 :: 		
0x0F52	0xDC02    BGT	__me_labop1_pos
;__Lib_MathDouble.c, 885 :: 		
0x0F54	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 886 :: 		
0x0F56	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 888 :: 		
0x0F58	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 889 :: 		
__me_labop1_pos:
;__Lib_MathDouble.c, 890 :: 		
0x0F5A	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 892 :: 		
0x0F5C	0xE002    B	__me_lab_end
;__Lib_MathDouble.c, 893 :: 		
__me_op2_m:
0x0F5E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 894 :: 		
0x0F60	0xBF48    IT	MI
;__Lib_MathDouble.c, 895 :: 		
0x0F62	0x4282    CMPMI	R2, R0
;__Lib_MathDouble.c, 896 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 897 :: 		
0x0F64	0xE8BD4010  POP	(R4, R14)
;__Lib_MathDouble.c, 899 :: 		
L_end__Compare_FP:
0x0F68	0xB001    ADD	SP, SP, #4
0x0F6A	0x4770    BX	LR
; end of __Compare_FP
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 383 :: 		
0x210C	0xB081    SUB	SP, SP, #4
0x210E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 386 :: 		
; ulRCC_CR start address is: 8 (R2)
0x2112	0x4A46    LDR	R2, [PC, #280]
;__Lib_System_105_107.c, 387 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x2114	0x4B46    LDR	R3, [PC, #280]
;__Lib_System_105_107.c, 388 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x2116	0x4C47    LDR	R4, [PC, #284]
;__Lib_System_105_107.c, 389 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2118	0x4947    LDR	R1, [PC, #284]
;__Lib_System_105_107.c, 396 :: 		
0x211A	0xF64B3080  MOVW	R0, #48000
0x211E	0x4281    CMP	R1, R0
0x2120	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 397 :: 		
0x2122	0x4846    LDR	R0, [PC, #280]
0x2124	0x6800    LDR	R0, [R0, #0]
0x2126	0xF0400102  ORR	R1, R0, #2
0x212A	0x4844    LDR	R0, [PC, #272]
0x212C	0x6001    STR	R1, [R0, #0]
0x212E	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC233
L___Lib_System_105_107_InitialSetUpRCCRCC232:
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2130	0xF64550C0  MOVW	R0, #24000
0x2134	0x4281    CMP	R1, R0
0x2136	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 399 :: 		
0x2138	0x4840    LDR	R0, [PC, #256]
0x213A	0x6800    LDR	R0, [R0, #0]
0x213C	0xF0400101  ORR	R1, R0, #1
0x2140	0x483E    LDR	R0, [PC, #248]
0x2142	0x6001    STR	R1, [R0, #0]
0x2144	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 401 :: 		
0x2146	0x483D    LDR	R0, [PC, #244]
0x2148	0x6801    LDR	R1, [R0, #0]
0x214A	0xF06F0007  MVN	R0, #7
0x214E	0x4001    ANDS	R1, R0
0x2150	0x483A    LDR	R0, [PC, #232]
0x2152	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC235:
L___Lib_System_105_107_InitialSetUpRCCRCC233:
;__Lib_System_105_107.c, 403 :: 		
0x2154	0xF7FFFED2  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 405 :: 		
0x2158	0x4839    LDR	R0, [PC, #228]
0x215A	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 406 :: 		
0x215C	0x4839    LDR	R0, [PC, #228]
0x215E	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 407 :: 		
0x2160	0x4839    LDR	R0, [PC, #228]
0x2162	0xEA020100  AND	R1, R2, R0, LSL #0
0x2166	0x4839    LDR	R0, [PC, #228]
0x2168	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 409 :: 		
0x216A	0xF0020001  AND	R0, R2, #1
0x216E	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC253
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x2170	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 410 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC237:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2172	0x4836    LDR	R0, [PC, #216]
0x2174	0x6800    LDR	R0, [R0, #0]
0x2176	0xF0000002  AND	R0, R0, #2
0x217A	0x2800    CMP	R0, #0
0x217C	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC238
;__Lib_System_105_107.c, 411 :: 		
0x217E	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 412 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x2180	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC236
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
;__Lib_System_105_107.c, 409 :: 		
0x2182	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 412 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 414 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x2184	0xF4023080  AND	R0, R2, #65536
0x2188	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC254
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x218A	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 415 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC240:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x218C	0x482F    LDR	R0, [PC, #188]
0x218E	0x6800    LDR	R0, [R0, #0]
0x2190	0xF4003000  AND	R0, R0, #131072
0x2194	0x2800    CMP	R0, #0
0x2196	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC241
;__Lib_System_105_107.c, 416 :: 		
0x2198	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC240
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 417 :: 		
; ulRCC_CR end address is: 8 (R2)
0x219A	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 414 :: 		
0x219C	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 417 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
;__Lib_System_105_107.c, 419 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x219E	0xF0025080  AND	R0, R2, #268435456
0x21A2	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
;__Lib_System_105_107.c, 420 :: 		
0x21A4	0x4829    LDR	R0, [PC, #164]
0x21A6	0x6800    LDR	R0, [R0, #0]
0x21A8	0xF0405180  ORR	R1, R0, #268435456
0x21AC	0x4827    LDR	R0, [PC, #156]
0x21AE	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 421 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC243:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x21B0	0x4826    LDR	R0, [PC, #152]
0x21B2	0x6800    LDR	R0, [R0, #0]
0x21B4	0xF0005000  AND	R0, R0, #536870912
0x21B8	0x2800    CMP	R0, #0
0x21BA	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC244
;__Lib_System_105_107.c, 422 :: 		
0x21BC	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC243
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 423 :: 		
; ulRCC_CR end address is: 8 (R2)
0x21BE	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 419 :: 		
;__Lib_System_105_107.c, 423 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
;__Lib_System_105_107.c, 425 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x21C0	0xF0026080  AND	R0, R2, #67108864
0x21C4	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
;__Lib_System_105_107.c, 426 :: 		
0x21C6	0x4821    LDR	R0, [PC, #132]
0x21C8	0x6800    LDR	R0, [R0, #0]
0x21CA	0xF0406180  ORR	R1, R0, #67108864
0x21CE	0x481F    LDR	R0, [PC, #124]
0x21D0	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x21D2	0x4611    MOV	R1, R2
0x21D4	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC246:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x21D6	0x481D    LDR	R0, [PC, #116]
0x21D8	0x6800    LDR	R0, [R0, #0]
0x21DA	0xF0006000  AND	R0, R0, #134217728
0x21DE	0x2800    CMP	R0, #0
0x21E0	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC247
;__Lib_System_105_107.c, 428 :: 		
0x21E2	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC246
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x21E4	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 425 :: 		
0x21E6	0x4611    MOV	R1, R2
0x21E8	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x21EA	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x21EE	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 432 :: 		
0x21F0	0x4816    LDR	R0, [PC, #88]
0x21F2	0x6800    LDR	R0, [R0, #0]
0x21F4	0xF0407180  ORR	R1, R0, #16777216
0x21F8	0x4814    LDR	R0, [PC, #80]
0x21FA	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x21FC	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 433 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC249:
; ulRCC_CFGR start address is: 4 (R1)
0x21FE	0x4813    LDR	R0, [PC, #76]
0x2200	0x6800    LDR	R0, [R0, #0]
0x2202	0xF0007000  AND	R0, R0, #33554432
0x2206	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC250
;__Lib_System_105_107.c, 434 :: 		
0x2208	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC249
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 435 :: 		
0x220A	0x460A    MOV	R2, R1
0x220C	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 431 :: 		
;__Lib_System_105_107.c, 435 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
;__Lib_System_105_107.c, 439 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 8 (R2)
0x220E	0x480C    LDR	R0, [PC, #48]
0x2210	0x6800    LDR	R0, [R0, #0]
0x2212	0xF000010C  AND	R1, R0, #12
0x2216	0x0090    LSLS	R0, R2, #2
0x2218	0xF000000C  AND	R0, R0, #12
0x221C	0x4281    CMP	R1, R0
0x221E	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x2220	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 441 :: 		
L_end_InitialSetUpRCCRCC2:
0x2222	0xF8DDE000  LDR	LR, [SP, #0]
0x2226	0xB001    ADD	SP, SP, #4
0x2228	0x4770    BX	LR
0x222A	0xBF00    NOP
0x222C	0x00810501  	#83951745
0x2230	0x8402001D  	#1934338
0x2234	0x06440001  	#67140
0x2238	0x19400001  	#72000
0x223C	0x20004002  	FLASH_ACR+0
0x2240	0x10044002  	RCC_CFGR+0
0x2244	0x102C4002  	RCC_CFGR2+0
0x2248	0xFFFF000F  	#1048575
0x224C	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 356 :: 		
0x1EFC	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 359 :: 		
0x1EFE	0x4815    LDR	R0, [PC, #84]
0x1F00	0x6800    LDR	R0, [R0, #0]
0x1F02	0xF0400101  ORR	R1, R0, #1
0x1F06	0x4813    LDR	R0, [PC, #76]
0x1F08	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 362 :: 		
0x1F0A	0x4913    LDR	R1, [PC, #76]
0x1F0C	0x4813    LDR	R0, [PC, #76]
0x1F0E	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 365 :: 		
0x1F10	0x4810    LDR	R0, [PC, #64]
0x1F12	0x6801    LDR	R1, [R0, #0]
0x1F14	0x4812    LDR	R0, [PC, #72]
0x1F16	0x4001    ANDS	R1, R0
0x1F18	0x480E    LDR	R0, [PC, #56]
0x1F1A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 368 :: 		
0x1F1C	0x480D    LDR	R0, [PC, #52]
0x1F1E	0x6801    LDR	R1, [R0, #0]
0x1F20	0xF46F2080  MVN	R0, #262144
0x1F24	0x4001    ANDS	R1, R0
0x1F26	0x480B    LDR	R0, [PC, #44]
0x1F28	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 371 :: 		
0x1F2A	0x480C    LDR	R0, [PC, #48]
0x1F2C	0x6801    LDR	R1, [R0, #0]
0x1F2E	0xF46F00FE  MVN	R0, #8323072
0x1F32	0x4001    ANDS	R1, R0
0x1F34	0x4809    LDR	R0, [PC, #36]
0x1F36	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 374 :: 		
0x1F38	0x4806    LDR	R0, [PC, #24]
0x1F3A	0x6801    LDR	R1, [R0, #0]
0x1F3C	0xF06F50A0  MVN	R0, #335544320
0x1F40	0x4001    ANDS	R1, R0
0x1F42	0x4804    LDR	R0, [PC, #16]
0x1F44	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 377 :: 		
0x1F46	0xF04F0100  MOV	R1, #0
0x1F4A	0x4806    LDR	R0, [PC, #24]
0x1F4C	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
L_end_SystemClockSetDefault:
0x1F4E	0xB001    ADD	SP, SP, #4
0x1F50	0x4770    BX	LR
0x1F52	0xBF00    NOP
0x1F54	0x10004002  	RCC_CR+0
0x1F58	0x0000F0FF  	#-251723776
0x1F5C	0x10044002  	RCC_CFGR+0
0x1F60	0xFFFFFEF6  	#-17367041
0x1F64	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 443 :: 		
0x20D0	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 444 :: 		
0x20D2	0x4902    LDR	R1, [PC, #8]
0x20D4	0x4802    LDR	R0, [PC, #8]
0x20D6	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 445 :: 		
L_end_InitialSetUpFosc:
0x20D8	0xB001    ADD	SP, SP, #4
0x20DA	0x4770    BX	LR
0x20DC	0x19400001  	#72000
0x20E0	0x00842000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 307 :: 		
0x20E4	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 308 :: 		
L___GenExcept28:
0x20E6	0xE7FE    B	L___GenExcept28
;__Lib_System_105_107.c, 309 :: 		
L_end___GenExcept:
0x20E8	0xB001    ADD	SP, SP, #4
0x20EA	0x4770    BX	LR
; end of ___GenExcept
0x25C4	0xB500    PUSH	(R14)
0x25C6	0xF8DFB024  LDR	R11, [PC, #36]
0x25CA	0xF8DFA024  LDR	R10, [PC, #36]
0x25CE	0xF8DFC024  LDR	R12, [PC, #36]
0x25D2	0xF7FFFCC9  BL	8040
0x25D6	0xF8DFB020  LDR	R11, [PC, #32]
0x25DA	0xF8DFA020  LDR	R10, [PC, #32]
0x25DE	0xF8DFC020  LDR	R12, [PC, #32]
0x25E2	0xF7FFFCC1  BL	8040
0x25E6	0xBD00    POP	(R15)
0x25E8	0x4770    BX	LR
0x25EA	0xBF00    NOP
0x25EC	0x00002000  	#536870912
0x25F0	0x002F2000  	#536870959
0x25F4	0x25600000  	#9568
0x25F8	0x00302000  	#536870960
0x25FC	0x00442000  	#536870980
0x2600	0x25900000  	#9616
0x2660	0xB500    PUSH	(R14)
0x2662	0xF8DFB010  LDR	R11, [PC, #16]
0x2666	0xF8DFA010  LDR	R10, [PC, #16]
0x266A	0xF7FFFC87  BL	8060
0x266E	0xBD00    POP	(R15)
0x2670	0x4770    BX	LR
0x2672	0xBF00    NOP
0x2674	0x00002000  	#536870912
0x2678	0x00BC2000  	#536871100
;__Lib_System_105_107.c,448 :: __Lib_System_105_107_ADCPrescTable [4]
0x0AB2	0x08060402 ;__Lib_System_105_107_ADCPrescTable+0
; end of __Lib_System_105_107_ADCPrescTable
;__pressure2_driver.c,0 :: ?ICSpressure2_readData_regAddr_L0 [256]
0x2250	0x00000000 ;?ICSpressure2_readData_regAddr_L0+0
0x2254	0x00000000 ;?ICSpressure2_readData_regAddr_L0+4
0x2258	0x00000000 ;?ICSpressure2_readData_regAddr_L0+8
0x225C	0x00000000 ;?ICSpressure2_readData_regAddr_L0+12
0x2260	0x00000000 ;?ICSpressure2_readData_regAddr_L0+16
0x2264	0x00000000 ;?ICSpressure2_readData_regAddr_L0+20
0x2268	0x00000000 ;?ICSpressure2_readData_regAddr_L0+24
0x226C	0x00000000 ;?ICSpressure2_readData_regAddr_L0+28
0x2270	0x00000000 ;?ICSpressure2_readData_regAddr_L0+32
0x2274	0x00000000 ;?ICSpressure2_readData_regAddr_L0+36
0x2278	0x00000000 ;?ICSpressure2_readData_regAddr_L0+40
0x227C	0x00000000 ;?ICSpressure2_readData_regAddr_L0+44
0x2280	0x00000000 ;?ICSpressure2_readData_regAddr_L0+48
0x2284	0x00000000 ;?ICSpressure2_readData_regAddr_L0+52
0x2288	0x00000000 ;?ICSpressure2_readData_regAddr_L0+56
0x228C	0x00000000 ;?ICSpressure2_readData_regAddr_L0+60
0x2290	0x00000000 ;?ICSpressure2_readData_regAddr_L0+64
0x2294	0x00000000 ;?ICSpressure2_readData_regAddr_L0+68
0x2298	0x00000000 ;?ICSpressure2_readData_regAddr_L0+72
0x229C	0x00000000 ;?ICSpressure2_readData_regAddr_L0+76
0x22A0	0x00000000 ;?ICSpressure2_readData_regAddr_L0+80
0x22A4	0x00000000 ;?ICSpressure2_readData_regAddr_L0+84
0x22A8	0x00000000 ;?ICSpressure2_readData_regAddr_L0+88
0x22AC	0x00000000 ;?ICSpressure2_readData_regAddr_L0+92
0x22B0	0x00000000 ;?ICSpressure2_readData_regAddr_L0+96
0x22B4	0x00000000 ;?ICSpressure2_readData_regAddr_L0+100
0x22B8	0x00000000 ;?ICSpressure2_readData_regAddr_L0+104
0x22BC	0x00000000 ;?ICSpressure2_readData_regAddr_L0+108
0x22C0	0x00000000 ;?ICSpressure2_readData_regAddr_L0+112
0x22C4	0x00000000 ;?ICSpressure2_readData_regAddr_L0+116
0x22C8	0x00000000 ;?ICSpressure2_readData_regAddr_L0+120
0x22CC	0x00000000 ;?ICSpressure2_readData_regAddr_L0+124
0x22D0	0x00000000 ;?ICSpressure2_readData_regAddr_L0+128
0x22D4	0x00000000 ;?ICSpressure2_readData_regAddr_L0+132
0x22D8	0x00000000 ;?ICSpressure2_readData_regAddr_L0+136
0x22DC	0x00000000 ;?ICSpressure2_readData_regAddr_L0+140
0x22E0	0x00000000 ;?ICSpressure2_readData_regAddr_L0+144
0x22E4	0x00000000 ;?ICSpressure2_readData_regAddr_L0+148
0x22E8	0x00000000 ;?ICSpressure2_readData_regAddr_L0+152
0x22EC	0x00000000 ;?ICSpressure2_readData_regAddr_L0+156
0x22F0	0x00000000 ;?ICSpressure2_readData_regAddr_L0+160
0x22F4	0x00000000 ;?ICSpressure2_readData_regAddr_L0+164
0x22F8	0x00000000 ;?ICSpressure2_readData_regAddr_L0+168
0x22FC	0x00000000 ;?ICSpressure2_readData_regAddr_L0+172
0x2300	0x00000000 ;?ICSpressure2_readData_regAddr_L0+176
0x2304	0x00000000 ;?ICSpressure2_readData_regAddr_L0+180
0x2308	0x00000000 ;?ICSpressure2_readData_regAddr_L0+184
0x230C	0x00000000 ;?ICSpressure2_readData_regAddr_L0+188
0x2310	0x00000000 ;?ICSpressure2_readData_regAddr_L0+192
0x2314	0x00000000 ;?ICSpressure2_readData_regAddr_L0+196
0x2318	0x00000000 ;?ICSpressure2_readData_regAddr_L0+200
0x231C	0x00000000 ;?ICSpressure2_readData_regAddr_L0+204
0x2320	0x00000000 ;?ICSpressure2_readData_regAddr_L0+208
0x2324	0x00000000 ;?ICSpressure2_readData_regAddr_L0+212
0x2328	0x00000000 ;?ICSpressure2_readData_regAddr_L0+216
0x232C	0x00000000 ;?ICSpressure2_readData_regAddr_L0+220
0x2330	0x00000000 ;?ICSpressure2_readData_regAddr_L0+224
0x2334	0x00000000 ;?ICSpressure2_readData_regAddr_L0+228
0x2338	0x00000000 ;?ICSpressure2_readData_regAddr_L0+232
0x233C	0x00000000 ;?ICSpressure2_readData_regAddr_L0+236
0x2340	0x00000000 ;?ICSpressure2_readData_regAddr_L0+240
0x2344	0x00000000 ;?ICSpressure2_readData_regAddr_L0+244
0x2348	0x00000000 ;?ICSpressure2_readData_regAddr_L0+248
0x234C	0x00000000 ;?ICSpressure2_readData_regAddr_L0+252
; end of ?ICSpressure2_readData_regAddr_L0
;__Lib_GPIO_32F10x_Defs.c,726 :: __GPIO_MODULE_USART3_PD89 [108]
0x2350	0x00000038 ;__GPIO_MODULE_USART3_PD89+0
0x2354	0x00000039 ;__GPIO_MODULE_USART3_PD89+4
0x2358	0xFFFFFFFF ;__GPIO_MODULE_USART3_PD89+8
0x235C	0x00000000 ;__GPIO_MODULE_USART3_PD89+12
0x2360	0x00000000 ;__GPIO_MODULE_USART3_PD89+16
0x2364	0x00000000 ;__GPIO_MODULE_USART3_PD89+20
0x2368	0x00000000 ;__GPIO_MODULE_USART3_PD89+24
0x236C	0x00000000 ;__GPIO_MODULE_USART3_PD89+28
0x2370	0x00000000 ;__GPIO_MODULE_USART3_PD89+32
0x2374	0x00000000 ;__GPIO_MODULE_USART3_PD89+36
0x2378	0x00000000 ;__GPIO_MODULE_USART3_PD89+40
0x237C	0x00000000 ;__GPIO_MODULE_USART3_PD89+44
0x2380	0x00000000 ;__GPIO_MODULE_USART3_PD89+48
0x2384	0x00000818 ;__GPIO_MODULE_USART3_PD89+52
0x2388	0x00000018 ;__GPIO_MODULE_USART3_PD89+56
0x238C	0x00000000 ;__GPIO_MODULE_USART3_PD89+60
0x2390	0x00000000 ;__GPIO_MODULE_USART3_PD89+64
0x2394	0x00000000 ;__GPIO_MODULE_USART3_PD89+68
0x2398	0x00000000 ;__GPIO_MODULE_USART3_PD89+72
0x239C	0x00000000 ;__GPIO_MODULE_USART3_PD89+76
0x23A0	0x00000000 ;__GPIO_MODULE_USART3_PD89+80
0x23A4	0x00000000 ;__GPIO_MODULE_USART3_PD89+84
0x23A8	0x00000000 ;__GPIO_MODULE_USART3_PD89+88
0x23AC	0x00000000 ;__GPIO_MODULE_USART3_PD89+92
0x23B0	0x00000000 ;__GPIO_MODULE_USART3_PD89+96
0x23B4	0x00000000 ;__GPIO_MODULE_USART3_PD89+100
0x23B8	0x08140030 ;__GPIO_MODULE_USART3_PD89+104
; end of __GPIO_MODULE_USART3_PD89
;__Lib_GPIO_32F10x_Defs.c,696 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x23BC	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x23C0	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x23C4	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x23C8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x23CC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x23D0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x23D4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x23D8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x23DC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x23E0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x23E4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x23E8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x23EC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x23F0	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x23F4	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x23F8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x23FC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x2400	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x2404	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x2408	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x240C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x2410	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x2414	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x2418	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x241C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x2420	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x2424	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F10x_Defs.c,711 :: __GPIO_MODULE_USART2_PD56 [108]
0x2428	0x00000035 ;__GPIO_MODULE_USART2_PD56+0
0x242C	0x00000036 ;__GPIO_MODULE_USART2_PD56+4
0x2430	0xFFFFFFFF ;__GPIO_MODULE_USART2_PD56+8
0x2434	0x00000000 ;__GPIO_MODULE_USART2_PD56+12
0x2438	0x00000000 ;__GPIO_MODULE_USART2_PD56+16
0x243C	0x00000000 ;__GPIO_MODULE_USART2_PD56+20
0x2440	0x00000000 ;__GPIO_MODULE_USART2_PD56+24
0x2444	0x00000000 ;__GPIO_MODULE_USART2_PD56+28
0x2448	0x00000000 ;__GPIO_MODULE_USART2_PD56+32
0x244C	0x00000000 ;__GPIO_MODULE_USART2_PD56+36
0x2450	0x00000000 ;__GPIO_MODULE_USART2_PD56+40
0x2454	0x00000000 ;__GPIO_MODULE_USART2_PD56+44
0x2458	0x00000000 ;__GPIO_MODULE_USART2_PD56+48
0x245C	0x00000818 ;__GPIO_MODULE_USART2_PD56+52
0x2460	0x00000018 ;__GPIO_MODULE_USART2_PD56+56
0x2464	0x00000000 ;__GPIO_MODULE_USART2_PD56+60
0x2468	0x00000000 ;__GPIO_MODULE_USART2_PD56+64
0x246C	0x00000000 ;__GPIO_MODULE_USART2_PD56+68
0x2470	0x00000000 ;__GPIO_MODULE_USART2_PD56+72
0x2474	0x00000000 ;__GPIO_MODULE_USART2_PD56+76
0x2478	0x00000000 ;__GPIO_MODULE_USART2_PD56+80
0x247C	0x00000000 ;__GPIO_MODULE_USART2_PD56+84
0x2480	0x00000000 ;__GPIO_MODULE_USART2_PD56+88
0x2484	0x00000000 ;__GPIO_MODULE_USART2_PD56+92
0x2488	0x00000000 ;__GPIO_MODULE_USART2_PD56+96
0x248C	0x00000000 ;__GPIO_MODULE_USART2_PD56+100
0x2490	0x08000008 ;__GPIO_MODULE_USART2_PD56+104
; end of __GPIO_MODULE_USART2_PD56
;__Lib_GPIO_32F10x_Defs.c,675 :: __GPIO_MODULE_SPI3_PC10_11_12 [108]
0x2494	0x0000002A ;__GPIO_MODULE_SPI3_PC10_11_12+0
0x2498	0x0000002B ;__GPIO_MODULE_SPI3_PC10_11_12+4
0x249C	0x0000002C ;__GPIO_MODULE_SPI3_PC10_11_12+8
0x24A0	0xFFFFFFFF ;__GPIO_MODULE_SPI3_PC10_11_12+12
0x24A4	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+16
0x24A8	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+20
0x24AC	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+24
0x24B0	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+28
0x24B4	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+32
0x24B8	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+36
0x24BC	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+40
0x24C0	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+44
0x24C4	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+48
0x24C8	0x00000818 ;__GPIO_MODULE_SPI3_PC10_11_12+52
0x24CC	0x00000818 ;__GPIO_MODULE_SPI3_PC10_11_12+56
0x24D0	0x00000818 ;__GPIO_MODULE_SPI3_PC10_11_12+60
0x24D4	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+64
0x24D8	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+68
0x24DC	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+72
0x24E0	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+76
0x24E4	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+80
0x24E8	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+84
0x24EC	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+88
0x24F0	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+92
0x24F4	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+96
0x24F8	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+100
0x24FC	0x08201100 ;__GPIO_MODULE_SPI3_PC10_11_12+104
; end of __GPIO_MODULE_SPI3_PC10_11_12
;easymx_v7_STM32F107VC.c,47 :: __MIKROBUS1_GPIO [96]
0x2500	0x000013C1 ;__MIKROBUS1_GPIO+0
0x2504	0x000013CD ;__MIKROBUS1_GPIO+4
0x2508	0x000013A9 ;__MIKROBUS1_GPIO+8
0x250C	0x000013B5 ;__MIKROBUS1_GPIO+12
0x2510	0x000013F1 ;__MIKROBUS1_GPIO+16
0x2514	0x000013FD ;__MIKROBUS1_GPIO+20
0x2518	0x000013D9 ;__MIKROBUS1_GPIO+24
0x251C	0x000013E5 ;__MIKROBUS1_GPIO+28
0x2520	0x00001919 ;__MIKROBUS1_GPIO+32
0x2524	0x0000190D ;__MIKROBUS1_GPIO+36
0x2528	0x00001901 ;__MIKROBUS1_GPIO+40
0x252C	0x00001925 ;__MIKROBUS1_GPIO+44
0x2530	0xFFFFFFFF ;__MIKROBUS1_GPIO+48
0x2534	0xFFFFFFFF ;__MIKROBUS1_GPIO+52
0x2538	0xFFFFFFFF ;__MIKROBUS1_GPIO+56
0x253C	0xFFFFFFFF ;__MIKROBUS1_GPIO+60
0x2540	0xFFFFFFFF ;__MIKROBUS1_GPIO+64
0x2544	0xFFFFFFFF ;__MIKROBUS1_GPIO+68
0x2548	0xFFFFFFFF ;__MIKROBUS1_GPIO+72
0x254C	0xFFFFFFFF ;__MIKROBUS1_GPIO+76
0x2550	0xFFFFFFFF ;__MIKROBUS1_GPIO+80
0x2554	0xFFFFFFFF ;__MIKROBUS1_GPIO+84
0x2558	0xFFFFFFFF ;__MIKROBUS1_GPIO+88
0x255C	0xFFFFFFFF ;__MIKROBUS1_GPIO+92
; end of __MIKROBUS1_GPIO
;,0 :: _initBlock_7 [47]
; Containing: ?ICS?lstr1_Click_Pressure2_STM [11]
;             ?ICS?lstr2_Click_Pressure2_STM [14]
;             ?ICS?lstr3_Click_Pressure2_STM [12]
;             ?ICS?lstr1___Lib_Conversions [4]
;             ?ICS?lstr2___Lib_Conversions [2]
;             ?ICS?lstr3___Lib_Conversions [4]
0x2560	0x73657250 ;_initBlock_7+0 : ?ICS?lstr1_Click_Pressure2_STM at 0x2560
0x2564	0x65727573 ;_initBlock_7+4
0x2568	0x5400203A ;_initBlock_7+8 : ?ICS?lstr2_Click_Pressure2_STM at 0x256B
0x256C	0x65706D65 ;_initBlock_7+12
0x2570	0x75746172 ;_initBlock_7+16
0x2574	0x203A6572 ;_initBlock_7+20
0x2578	0x2D2D2D00 ;_initBlock_7+24 : ?ICS?lstr3_Click_Pressure2_STM at 0x2579
0x257C	0x2D2D2D2D ;_initBlock_7+28
0x2580	0x2D2D2D2D ;_initBlock_7+32
0x2584	0x4E614E00 ;_initBlock_7+36 : ?ICS?lstr1___Lib_Conversions at 0x2585
0x2588	0x49003000 ;_initBlock_7+40 : ?ICS?lstr2___Lib_Conversions at 0x2589 : ?ICS?lstr3___Lib_Conversions at 0x258B
0x258C	0x00464E ;_initBlock_7+44
; end of _initBlock_7
;__pressure2_driver.c,0 :: ?ICS__pressure2_driver__pressure [4]
0x2590	0x00000000 ;?ICS__pressure2_driver__pressure+0
; end of ?ICS__pressure2_driver__pressure
;__pressure2_driver.c,0 :: ?ICS__pressure2_driver__temperature [4]
0x2594	0x00000000 ;?ICS__pressure2_driver__temperature+0
; end of ?ICS__pressure2_driver__temperature
;__pressure2_driver.c,0 :: ?ICS__pressure2_driver__deltaTemp [4]
0x2598	0x00000000 ;?ICS__pressure2_driver__deltaTemp+0
; end of ?ICS__pressure2_driver__deltaTemp
;__pressure2_driver.c,0 :: ?ICS__pressure2_driver__sensorOffset [4]
0x259C	0x00000000 ;?ICS__pressure2_driver__sensorOffset+0
; end of ?ICS__pressure2_driver__sensorOffset
;__pressure2_driver.c,0 :: ?ICS__pressure2_driver__sensitivity [4]
0x25A0	0x00000000 ;?ICS__pressure2_driver__sensitivity+0
; end of ?ICS__pressure2_driver__sensitivity
;__Lib_System_105_107.c,447 :: __Lib_System_105_107_APBAHBPrescTable [16]
0x25A4	0x00000000 ;__Lib_System_105_107_APBAHBPrescTable+0
0x25A8	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+4
0x25AC	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+8
0x25B0	0x09080706 ;__Lib_System_105_107_APBAHBPrescTable+12
; end of __Lib_System_105_107_APBAHBPrescTable
;Click_Pressure2_STM.c,4 :: __PRESSURE2_SPI_CFG [8]
0x25B4	0x00000007 ;__PRESSURE2_SPI_CFG+0
0x25B8	0x00000304 ;__PRESSURE2_SPI_CFG+4
; end of __PRESSURE2_SPI_CFG
;easymx_v7_STM32F107VC.c,15 :: __MIKROBUS1_SPI [8]
0x25BC	0x000003C1 ;__MIKROBUS1_SPI+0
0x25C0	0x000002A9 ;__MIKROBUS1_SPI+4
; end of __MIKROBUS1_SPI
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150      [12]    _Get_Fosc_kHz
0x015C      [34]    __Lib_SPI_123_SPIx_Read
0x0180      [30]    __Lib_UART_123_45_UARTx_Write
0x01A0      [28]    _UART5_Write
0x01BC      [28]    _UART4_Write
0x01D8      [28]    _UART3_Write
0x01F4     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x028C      [28]    _SPI2_Read
0x02A8      [28]    _SPI3_Read
0x02C4      [28]    _SPI1_Read
0x02E0     [168]    _RCC_GetClocksFrequency
0x0388      [28]    _SPI1_Write
0x03A4      [28]    _UART1_Write
0x03C0      [28]    _SPI3_Write
0x03DC      [28]    _UART2_Write
0x03F8     [140]    _GPIO_Clk_Enable
0x0484      [28]    _SPI2_Write
0x04A0      [76]    __pressure2_driver_hal_spiTransfer
0x04EC     [580]    __Lib_UART_123_45_UARTx_Init_Advanced
0x0730     [272]    _GPIO_Alternate_Function_Enable
0x0840     [500]    _GPIO_Config
0x0A34      [60]    __pressure2_driver_hal_spiWrite
0x0A70      [66]    __Lib_SPI_123_SPIx_Init_Advanced
0x0AB8      [24]    _Delay_500us
0x0AD0      [48]    _pressure2_writeBytes
0x0B00      [24]    _Delay_1ms
0x0B18      [84]    _pressure2_readData
0x0B6C      [40]    _UART1_Init_Advanced
0x0B94      [24]    _GPIO_Digital_Input
0x0BB0      [24]    _Delay_10ms
0x0BC8      [28]    _GPIO_Digital_Output
0x0BE4      [84]    _SPI3_Init_Advanced
0x0C38     [138]    __Mul_FP
0x0CC4      [40]    _UART3_Init_Advanced
0x0CEC      [66]    __FloatToSignedIntegral
0x0D30      [24]    _Delay_80us
0x0D48      [24]    _Delay_8ms
0x0D60      [40]    _UART2_Init_Advanced
0x0D88      [32]    easymx_v7_STM32F107VC__log_write
0x0DA8     [254]    __Add_FP
0x0EA8      [40]    _strcpy
0x0ED0      [24]    __pressure2_driver_hal_spiMap
0x0EE8      [12]    easymx_v7_STM32F107VC__setSDA_2
0x0EF4      [16]    __pressure2_driver_hal_gpioMap
0x0F04     [104]    __Compare_FP
0x0F6C      [24]    _pressure2_reset
0x0F84      [78]    __pressure2_driver__pow
0x0FD4      [68]    _pressure2_readCoefficient
0x1018     [214]    _pressure2_sendCmdADC
0x10F0     [156]    __pressure2_driver__crcMS5803
0x118C      [70]    __FloatToUnsignedIntegral
0x11D4     [164]    __Div_FP
0x1278      [44]    __UnsignedIntegralToFloat
0x12A4     [258]    __Sub_FP
0x13A8      [12]    easymx_v7_STM32F107VC__setCS_1
0x13B4      [12]    easymx_v7_STM32F107VC__setSCK_1
0x13C0      [12]    easymx_v7_STM32F107VC__setAN_1
0x13CC      [12]    easymx_v7_STM32F107VC__setRST_1
0x13D8      [12]    easymx_v7_STM32F107VC__setPWM_1
0x13E4      [12]    easymx_v7_STM32F107VC__setINT_1
0x13F0      [12]    easymx_v7_STM32F107VC__setMISO_1
0x13FC      [12]    easymx_v7_STM32F107VC__setMOSI_1
0x1408      [56]    easymx_v7_STM32F107VC__log_init1
0x1440      [56]    easymx_v7_STM32F107VC__log_init2
0x1478      [36]    easymx_v7_STM32F107VC__spiInit_1
0x149C      [36]    easymx_v7_STM32F107VC__spiInit_2
0x14C0     [440]    easymx_v7_STM32F107VC__gpioInit_2
0x1678     [440]    easymx_v7_STM32F107VC__gpioInit_1
0x1830      [56]    easymx_v7_STM32F107VC__log_initUartA
0x1868      [56]    easymx_v7_STM32F107VC__log_initUartB
0x18A0      [12]    easymx_v7_STM32F107VC__setMISO_2
0x18AC      [12]    easymx_v7_STM32F107VC__setTX_2
0x18B8      [12]    easymx_v7_STM32F107VC__setSCL_2
0x18C4      [12]    easymx_v7_STM32F107VC__setMOSI_2
0x18D0      [12]    easymx_v7_STM32F107VC__setRX_2
0x18DC      [12]    easymx_v7_STM32F107VC__setINT_2
0x18E8      [12]    easymx_v7_STM32F107VC__setPWM_2
0x18F4      [12]    easymx_v7_STM32F107VC__setSCK_2
0x1900      [12]    easymx_v7_STM32F107VC__setSCL_1
0x190C      [12]    easymx_v7_STM32F107VC__setTX_1
0x1918      [12]    easymx_v7_STM32F107VC__setRX_1
0x1924      [12]    easymx_v7_STM32F107VC__setSDA_1
0x1930      [12]    easymx_v7_STM32F107VC__setCS_2
0x193C      [12]    easymx_v7_STM32F107VC__setRST_2
0x1948      [12]    easymx_v7_STM32F107VC__setAN_2
0x1954      [48]    _mikrobus_spiInit
0x1984     [112]    _mikrobus_logWrite
0x19F4      [66]    _mikrobus_gpioInit
0x1A38     [500]    _FloatToStr
0x1C2C      [88]    _pressure2_init
0x1C84      [40]    _pressure2_spiDriverInit
0x1CAC     [520]    _pressure2_readSensor
0x1EB4      [70]    _mikrobus_logInit
0x1EFC     [108]    __Lib_System_105_107_SystemClockSetDefault
0x1F68      [20]    ___CC2DW
0x1F7C      [58]    ___FillZeros
0x1FB8      [56]    _applicationInit
0x1FF0     [148]    _applicationTask
0x2088      [72]    _systemInit
0x20D0      [20]    __Lib_System_105_107_InitialSetUpFosc
0x20E4       [8]    ___GenExcept
0x20EC      [32]    _main
0x210C     [324]    __Lib_System_105_107_InitialSetUpRCCRCC2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000      [11]    ?lstr1_Click_Pressure2_STM
0x2000000B      [14]    ?lstr2_Click_Pressure2_STM
0x20000019      [12]    ?lstr3_Click_Pressure2_STM
0x20000025       [4]    ?lstr1___Lib_Conversions
0x20000029       [2]    ?lstr2___Lib_Conversions
0x2000002B       [4]    ?lstr3___Lib_Conversions
0x20000030       [4]    __pressure2_driver__pressure
0x20000034       [4]    __pressure2_driver__temperature
0x20000038       [4]    __pressure2_driver__deltaTemp
0x2000003C       [4]    __pressure2_driver__sensorOffset
0x20000040       [4]    __pressure2_driver__sensitivity
0x20000044       [4]    _pressure_P
0x20000048       [4]    _pressure_T
0x2000004C      [50]    _demoText
0x20000080       [4]    _logger
0x20000084       [4]    ___System_CLOCK_IN_KHZ
0x20000088       [4]    _SPI_Rd_Ptr
0x2000008C       [4]    _SPI_Wr_Ptr
0x20000090       [4]    _UART_Wr_Ptr
0x20000094       [4]    _UART_Rd_Ptr
0x20000098       [4]    _UART_Rdy_Ptr
0x2000009C       [4]    _UART_Tx_Idle_Ptr
0x200000A0       [4]    __pressure2_driver_fp_spiRead
0x200000A4       [4]    __pressure2_driver_fp_spiWrite
0x200000A8       [4]    __pressure2_driver_hal_gpio_csSet
0x200000AC      [16]    __pressure2_driver__sensorCoefficients
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0AB2       [4]    __Lib_System_105_107_ADCPrescTable
0x2250     [256]    ?ICSpressure2_readData_regAddr_L0
0x2350     [108]    __GPIO_MODULE_USART3_PD89
0x23BC     [108]    __GPIO_MODULE_USART1_PA9_10
0x2428     [108]    __GPIO_MODULE_USART2_PD56
0x2494     [108]    __GPIO_MODULE_SPI3_PC10_11_12
0x2500      [96]    __MIKROBUS1_GPIO
0x2560      [11]    ?ICS?lstr1_Click_Pressure2_STM
0x256B      [14]    ?ICS?lstr2_Click_Pressure2_STM
0x2579      [12]    ?ICS?lstr3_Click_Pressure2_STM
0x2585       [4]    ?ICS?lstr1___Lib_Conversions
0x2589       [2]    ?ICS?lstr2___Lib_Conversions
0x258B       [4]    ?ICS?lstr3___Lib_Conversions
0x2590       [4]    ?ICS__pressure2_driver__pressure
0x2594       [4]    ?ICS__pressure2_driver__temperature
0x2598       [4]    ?ICS__pressure2_driver__deltaTemp
0x259C       [4]    ?ICS__pressure2_driver__sensorOffset
0x25A0       [4]    ?ICS__pressure2_driver__sensitivity
0x25A4      [16]    __Lib_System_105_107_APBAHBPrescTable
0x25B4       [8]    __PRESSURE2_SPI_CFG
0x25BC       [8]    __MIKROBUS1_SPI
